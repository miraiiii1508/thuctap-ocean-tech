{"ast":null,"code":"import _objectSpread from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\src\\\\app\\\\views\\\\Location\\\\Provices\\\\Province.jsx\";\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { useTranslation } from \"react-i18next\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button, Icon, IconButton, Grid, makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ProvincesDialog from \"./ProvincesDialog\";\nvar useStyles = makeStyles({\n  widthStyle: {\n    width: \"200px\"\n  },\n  customStyle: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  }\n});\n\nvar Provinces = function Provinces() {\n  var columns = [{\n    title: \"Thao tác\",\n    field: \"custom\",\n    width: \"100\",\n    cellStyle: {\n      padding: \"0\",\n      margin: \"0\"\n    },\n    render: function render(row) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"primary\",\n        onClick: function onClick() {\n          handleEdit(row);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }\n      }, \"edit\")), /*#__PURE__*/React.createElement(IconButton, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        onClick: function onClick() {// handleDelete(row);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      }, \"delete\")));\n    }\n  }, {\n    field: \"code\",\n    title: \"Mã Tỉnh\"\n  }, {\n    field: \"name\",\n    title: \"Tên Tỉnh\"\n  }, {\n    field: \"area\",\n    title: \"Diện tích\"\n  }];\n  var dispatch = useDispatch();\n  var provinceState = useSelector(function (state) {\n    return state.provinces;\n  });\n  var provinces = provinceState.provinces,\n      reload = provinceState.reload,\n      success = provinceState.success;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showProvincesDialog = _useState2[0],\n      setShowProvincesDialog = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      provinceId = _useState4[0],\n      setProvinceId = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      province = _useState6[0],\n      setProvince = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      rowData = _useState8[0],\n      setRowData = _useState8[1];\n\n  useEffect(function () {\n    dispatch({\n      type: 'ALL_PROVINCES_REQUEST'\n    });\n    console.log(provinces);\n  }, [dispatch]);\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var classes = useStyles();\n  var dataForTable = provinces.map(function (province) {\n    return _objectSpread({}, province);\n  });\n\n  var handleCloseDialog = function handleCloseDialog() {\n    setShowProvincesDialog(false);\n  };\n\n  var handleAddProvince = function handleAddProvince() {\n    setProvince({});\n    setShowProvincesDialog(true);\n  };\n\n  var handleEdit = function handleEdit(item) {\n    setShowProvincesDialog(true);\n    setProvince(item);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.customStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mt-4 mb-16 mr-16 align-bottom\",\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    onClick: handleAddProvince,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, t(\"Add\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"search\",\n    label: \"T\\xECm ki\\u1EBFm\",\n    onChange: function onChange(e) {},\n    className: \"mb-16 mr-16 align-bottom \".concat(classes.widthStyle),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }))))), /*#__PURE__*/React.createElement(MaterialTable, {\n    columns: columns,\n    data: dataForTable,\n    options: {\n      search: false,\n      toolbar: false,\n      headerStyle: {\n        backgroundColor: \"#358600\",\n        color: \"#fff\"\n      },\n      minBodyHeight: \"569px\",\n      maxBodyHeight: \"569px\",\n      pageSize: 10,\n      rowStyle: function rowStyle(rowData, index) {\n        return {\n          backgroundColor: index % 2 === 1 ? \"#EEE\" : \"#FFF\"\n        };\n      },\n      padding: \"dense\"\n    },\n    localization: {\n      body: {\n        emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n      },\n      pagination: {\n        labelRowsSelect: \"B\\u1EA3n ghi\",\n        labelDisplayedRows: \"{from}-{to} trong {count}\",\n        firstTooltip: \"Trang đầu\",\n        previousTooltip: \"Trang trước\",\n        nextTooltip: \"Trang tiếp\",\n        lastTooltip: \"Trang cuối\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }), showProvincesDialog && /*#__PURE__*/React.createElement(ProvincesDialog, {\n    open: showProvincesDialog,\n    onClose: handleCloseDialog // province={province}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Provinces;","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/views/Location/Provices/Province.jsx"],"names":["React","useState","useEffect","MaterialTable","useTranslation","TextField","Button","Icon","IconButton","Grid","makeStyles","useDispatch","useSelector","ProvincesDialog","useStyles","widthStyle","width","customStyle","display","justifyContent","Provinces","columns","title","field","cellStyle","padding","margin","render","row","handleEdit","dispatch","provinceState","state","provinces","reload","success","showProvincesDialog","setShowProvincesDialog","provinceId","setProvinceId","province","setProvince","rowData","setRowData","type","console","log","t","classes","dataForTable","map","handleCloseDialog","handleAddProvince","item","e","search","toolbar","headerStyle","backgroundColor","color","minBodyHeight","maxBodyHeight","pageSize","rowStyle","index","body","emptyDataSourceMessage","pagination","labelRowsSelect","labelDisplayedRows","firstTooltip","previousTooltip","nextTooltip","lastTooltip"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button, Icon, IconButton, Grid, makeStyles } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ProvincesDialog from \"./ProvincesDialog\";\r\nconst useStyles = makeStyles({\r\n    widthStyle: {\r\n      width: \"200px\",\r\n    },\r\n    customStyle: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n  });\r\nconst Provinces =()=>{\r\n  const columns = [\r\n    {\r\n      title: \"Thao tác\",\r\n      field: \"custom\",\r\n      width: \"100\",\r\n      cellStyle: {\r\n        padding: \"0\",\r\n        margin: \"0\",\r\n      },\r\n      render: (row) => {\r\n        return (\r\n          <>\r\n            <IconButton>\r\n              <Icon\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  handleEdit(row)\r\n                }}\r\n              >\r\n                edit\r\n              </Icon>\r\n            </IconButton>\r\n\r\n            <IconButton>\r\n              <Icon\r\n                color=\"error\"\r\n                onClick={() => {\r\n                  // handleDelete(row);\r\n                }}\r\n              >\r\n                delete\r\n              </Icon>\r\n            </IconButton>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    { field: \"code\", title: \"Mã Tỉnh\" },\r\n    { field: \"name\", title: \"Tên Tỉnh\" },\r\n    { field: \"area\", title: \"Diện tích\" },\r\n  ];\r\n\r\n  const dispatch = useDispatch();\r\n  const provinceState = useSelector((state) => state.provinces);\r\n  const { provinces, reload, success } = provinceState;\r\n  const [showProvincesDialog, setShowProvincesDialog] = useState(false)\r\n  const [provinceId, setProvinceId] = useState(\"\");\r\n  const [province, setProvince] = useState(\"\");\r\n  const [rowData, setRowData] = useState({});\r\n  useEffect(() => {\r\n    dispatch({ type: 'ALL_PROVINCES_REQUEST' });\r\n    console.log(provinces)\r\n  }, [dispatch]);\r\n    const { t } = useTranslation();\r\n    const classes = useStyles();\r\n    const dataForTable = provinces.map((province) => ({ ...province }));\r\n    const handleCloseDialog = ()=>{\r\n      setShowProvincesDialog(false)\r\n    }\r\n    const handleAddProvince = () => {\r\n      setProvince({});\r\n      setShowProvincesDialog(true);\r\n    };\r\n    const handleEdit = (item) => {\r\n      setShowProvincesDialog(true);\r\n      setProvince(item);\r\n    };\r\nreturn(\r\n    <div>\r\n    <div className={classes.customStyle}>\r\n      <div>\r\n        <Button\r\n          className=\"mt-4 mb-16 mr-16 align-bottom\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n         onClick={handleAddProvince}\r\n        >\r\n          {t(\"Add\")}\r\n        </Button>\r\n      </div>\r\n\r\n      <div>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item>\r\n            <TextField\r\n              name=\"search\"\r\n              label=\"Tìm kiếm\"\r\n              onChange={(e) => {\r\n              }}\r\n              className={`mb-16 mr-16 align-bottom ${classes.widthStyle}`}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n\r\n    <MaterialTable\r\n      columns={columns}\r\n      data={dataForTable}\r\n      options={{\r\n        search: false,\r\n        toolbar: false,\r\n        headerStyle: {\r\n          backgroundColor: \"#358600\",\r\n          color: \"#fff\",\r\n        },\r\n        minBodyHeight: \"569px\",\r\n        maxBodyHeight: \"569px\",\r\n        pageSize: 10,\r\n        rowStyle: (rowData, index) => ({\r\n          backgroundColor: index % 2 === 1 ? \"#EEE\" : \"#FFF\",\r\n        }),\r\n        padding: \"dense\",\r\n      }}\r\n      localization={{\r\n        body: {\r\n          emptyDataSourceMessage: `${t(\"general.emptyDataMessageTable\")}`,\r\n        },\r\n        pagination: {\r\n          labelRowsSelect: `Bản ghi`,\r\n          labelDisplayedRows: `{from}-{to} trong {count}`,\r\n          firstTooltip: \"Trang đầu\",\r\n          previousTooltip: \"Trang trước\",\r\n          nextTooltip: \"Trang tiếp\",\r\n          lastTooltip: \"Trang cuối\",\r\n        },\r\n      }}\r\n    />\r\n    {showProvincesDialog && (\r\n      <ProvincesDialog\r\n        open={showProvincesDialog}\r\n        onClose={handleCloseDialog}\r\n        // province={province}\r\n      />\r\n    )}\r\n    {/* {showDeleteDialog && (\r\n      <ConfirmationDialog\r\n        open={showDeleteDialog}\r\n        onConfirmDialogClose={handleCloseDeleteDialog}\r\n        onYesClick={handleDialogDelete}\r\n        title={t(`xóa tỉnh/thành phố ${rowData?.name}?`)}\r\n        text={t(\"DeleteConfirm\")}\r\n        Yes={t(\"Yes\")}\r\n        No={t(\"No\")}\r\n      ></ConfirmationDialog>\r\n    )} */}\r\n  </div>\r\n)\r\n}\r\nexport default Provinces"]},"metadata":{},"sourceType":"module"}