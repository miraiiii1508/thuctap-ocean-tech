{"ast":null,"code":"import _objectSpread from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nvar initialState = {\n  district: [],\n  wards: [],\n  reload: false\n};\nvar DistrictSlide = createSlice({\n  name: \"district\",\n  initialState: initialState,\n  reducers: {\n    getAllDistrictReducer: function getAllDistrictReducer(state, action) {\n      state.district = action.payload;\n    },\n    addDistrictReducer: function addDistrictReducer(state, action) {\n      state.district = [].concat(_toConsumableArray(state.district), [action.payload]);\n      state.reload = !state.reload;\n    },\n    updateDistrictReducer: function updateDistrictReducer(state, action) {\n      var _action$payload = action.payload,\n          id = _action$payload.id,\n          updateState = _action$payload.updateState;\n      var index = state.district.findIndex(function (district) {\n        return district.id === id;\n      });\n\n      if (index !== -1) {\n        state.district[index] = _objectSpread(_objectSpread({}, state.district[index]), updateState);\n      }\n\n      state.reload = !state.reload;\n    },\n    deleteDistrictsReducer: function deleteDistrictsReducer(state, action) {\n      state.district = state.district.filter(function (district) {\n        return district.id !== action.payload;\n      });\n      state.reload = !state.reload;\n    },\n    searchDistrictReducer: function searchDistrictReducer(state, action) {\n      state.district = action.payload;\n    }\n  }\n});\nvar _DistrictSlide$action = DistrictSlide.actions,\n    getAllDistrictReducer = _DistrictSlide$action.getAllDistrictReducer,\n    addDistrictReducer = _DistrictSlide$action.addDistrictReducer,\n    updateDistrictReducer = _DistrictSlide$action.updateDistrictReducer,\n    deleteDistrictsReducer = _DistrictSlide$action.deleteDistrictsReducer,\n    searchDistrictReducer = _DistrictSlide$action.searchDistrictReducer;\nexport { getAllDistrictReducer, addDistrictReducer, updateDistrictReducer, deleteDistrictsReducer, searchDistrictReducer };\nexport default DistrictSlide.reducer;","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/redux/reducers/DistrictReducer.js"],"names":["createSlice","initialState","district","wards","reload","DistrictSlide","name","reducers","getAllDistrictReducer","state","action","payload","addDistrictReducer","updateDistrictReducer","id","updateState","index","findIndex","deleteDistrictsReducer","filter","searchDistrictReducer","actions","reducer"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,MAAM,EAAE;AAHW,CAArB;AAKA,IAAMC,aAAa,GAAGL,WAAW,CAAC;AAChCM,EAAAA,IAAI,EAAE,UAD0B;AAEhCL,EAAAA,YAAY,EAAZA,YAFgC;AAGhCM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,qBAAqB,EAAE,+BAACC,KAAD,EAAQC,MAAR,EAAmB;AACxCD,MAAAA,KAAK,CAACP,QAAN,GAAiBQ,MAAM,CAACC,OAAxB;AACD,KAHO;AAIRC,IAAAA,kBAAkB,EAAE,4BAACH,KAAD,EAAQC,MAAR,EAAmB;AACrCD,MAAAA,KAAK,CAACP,QAAN,gCAAqBO,KAAK,CAACP,QAA3B,IAAqCQ,MAAM,CAACC,OAA5C;AACAF,MAAAA,KAAK,CAACL,MAAN,GAAe,CAACK,KAAK,CAACL,MAAtB;AACD,KAPO;AAQRS,IAAAA,qBAAqB,EAAE,+BAACJ,KAAD,EAAQC,MAAR,EAAmB;AAAA,4BACZA,MAAM,CAACC,OADK;AAAA,UAChCG,EADgC,mBAChCA,EADgC;AAAA,UAC5BC,WAD4B,mBAC5BA,WAD4B;AAExC,UAAMC,KAAK,GAAGP,KAAK,CAACP,QAAN,CAAee,SAAf,CAAyB,UAACf,QAAD;AAAA,eAAcA,QAAQ,CAACY,EAAT,KAAgBA,EAA9B;AAAA,OAAzB,CAAd;;AACA,UAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBP,QAAAA,KAAK,CAACP,QAAN,CAAec,KAAf,oCACKP,KAAK,CAACP,QAAN,CAAec,KAAf,CADL,GAEKD,WAFL;AAID;;AACDN,MAAAA,KAAK,CAACL,MAAN,GAAe,CAACK,KAAK,CAACL,MAAtB;AACD,KAlBO;AAmBRc,IAAAA,sBAAsB,EAAE,gCAACT,KAAD,EAAQC,MAAR,EAAmB;AACzCD,MAAAA,KAAK,CAACP,QAAN,GAAiBO,KAAK,CAACP,QAAN,CAAeiB,MAAf,CACf,UAACjB,QAAD;AAAA,eAAcA,QAAQ,CAACY,EAAT,KAAgBJ,MAAM,CAACC,OAArC;AAAA,OADe,CAAjB;AAGAF,MAAAA,KAAK,CAACL,MAAN,GAAe,CAACK,KAAK,CAACL,MAAtB;AACD,KAxBO;AAyBRgB,IAAAA,qBAAqB,EAAE,+BAACX,KAAD,EAAQC,MAAR,EAAmB;AACxCD,MAAAA,KAAK,CAACP,QAAN,GAAiBQ,MAAM,CAACC,OAAxB;AACD;AA3BO;AAHsB,CAAD,CAAjC;4BAuCIN,aAAa,CAACgB,O;IALhBb,qB,yBAAAA,qB;IACAI,kB,yBAAAA,kB;IACAC,qB,yBAAAA,qB;IACAK,sB,yBAAAA,sB;IACAE,qB,yBAAAA,qB;;AAEF,eAAef,aAAa,CAACiB,OAA7B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialState = {\r\n  district: [],\r\n  wards: [],\r\n  reload: false,\r\n};\r\nconst DistrictSlide = createSlice({\r\n  name: \"district\",\r\n  initialState,\r\n  reducers: {\r\n    getAllDistrictReducer: (state, action) => {\r\n      state.district = action.payload;\r\n    },\r\n    addDistrictReducer: (state, action) => {\r\n      state.district = [...state.district, action.payload];\r\n      state.reload = !state.reload;\r\n    },\r\n    updateDistrictReducer: (state, action) => {\r\n      const { id, updateState } = action.payload;\r\n      const index = state.district.findIndex((district) => district.id === id);\r\n      if (index !== -1) {\r\n        state.district[index] = {\r\n          ...state.district[index],\r\n          ...updateState,\r\n        };\r\n      }\r\n      state.reload = !state.reload;\r\n    },\r\n    deleteDistrictsReducer: (state, action) => {\r\n      state.district = state.district.filter(\r\n        (district) => district.id !== action.payload\r\n      );\r\n      state.reload = !state.reload;\r\n    },\r\n    searchDistrictReducer: (state, action) => {\r\n      state.district = action.payload;\r\n    },\r\n  },\r\n});\r\nexport const {\r\n  getAllDistrictReducer,\r\n  addDistrictReducer,\r\n  updateDistrictReducer,\r\n  deleteDistrictsReducer,\r\n  searchDistrictReducer,\r\n} = DistrictSlide.actions;\r\nexport default DistrictSlide.reducer;\r\n"]},"metadata":{},"sourceType":"module"}