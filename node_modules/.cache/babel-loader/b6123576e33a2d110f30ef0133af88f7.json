{"ast":null,"code":"import _objectSpread from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\src\\\\app\\\\views\\\\Location\\\\Ward\\\\WardsDialog.jsx\";\n\nimport React, { useState } from \"react\";\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, FormControl, MenuItem, Grid, IconButton, makeStyles } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator, SelectValidator } from \"react-material-ui-form-validator\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport { useTranslation } from \"react-i18next\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"; // import { addWards, updateWards } from \"app/redux/actions/WardsActions\";\n\nvar useStyles = makeStyles({\n  colorStyle: {\n    color: \"red\"\n  },\n  iconClose: {\n    position: \"absolute\",\n    right: 8,\n    top: 8\n  }\n});\n\nvar WardsDialog = function WardsDialog(_ref) {\n  var _wardFormData$distric;\n\n  var open = _ref.open,\n      onClose = _ref.onClose,\n      ward = _ref.ward;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var defaultValue = {\n    code: \"\",\n    name: \"\",\n    area: \"\",\n    districtDto: {\n      id: \"\"\n    }\n  };\n\n  var _useState = useState({\n    defaultValue: defaultValue\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      wardFormData = _useState2[0],\n      setWardFormData = _useState2[1];\n\n  var dispatch = useDispatch();\n  var districts = useSelector(function (state) {\n    return state.district.district;\n  });\n  var tableData = districts.map(function (districts) {\n    return _objectSpread({}, districts);\n  });\n  useEffect(function () {\n    setWardFormData(ward);\n  }, [ward]);\n\n  var handleOnchange = function handleOnchange(event) {\n    setWardFormData(_objectSpread(_objectSpread({}, wardFormData), {}, {\n      [event.target.name]: event.target.value\n    }));\n\n    if (event.target.name === \"districtDto\") {\n      setWardFormData(_objectSpread(_objectSpread({}, wardFormData), {}, {\n        districtDto: {\n          id: event.target.value\n        }\n      }));\n    }\n  };\n\n  var handleClose = function handleClose() {\n    setWardFormData({});\n    onClose();\n  };\n\n  var HandleAddNewWard = function HandleAddNewWard() {\n    dispatch({\n      type: \"UPDATE_WARD_REQUEST\",\n      id: wardFormData.id,\n      data: wardFormData\n    });\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    HandleAddNewWard();\n    handleClose();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: onClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    maxWidth: \"sm\",\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mb-20 styleColor\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, ((wardFormData === null || wardFormData === void 0 ? void 0 : wardFormData.id) ? t(\"general.update\") : t(\"Add\")) + \" \" + t(\"Phường/Xã\")), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.iconClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    color: \"error\",\n    onClick: onClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ValidatorForm, {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"mb-8\",\n    container: true,\n    spacing: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectValidator, {\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, \" * \"), \"M\\xE3 Qu\\u1EADn/Huy\\u1EC7n\"),\n    name: \"districtDto\",\n    value: (wardFormData === null || wardFormData === void 0 ? void 0 : (_wardFormData$distric = wardFormData.districtDto) === null || _wardFormData$distric === void 0 ? void 0 : _wardFormData$distric.id) || null,\n    onChange: handleOnchange,\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng chọn Quận/Huyện\"],\n    className: \"w-100 mb-8\",\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }, tableData.map(function (i) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      value: i.id,\n      key: i.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 23\n      }\n    }, i.name);\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-8\",\n    name: \"code\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 23\n      }\n    }, \" * \"), \"M\\xE3 Ph\\u01B0\\u1EDDng/X\\xE3\"),\n    value: wardFormData.code || \"\",\n    onChange: handleOnchange,\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng nhập mã Phường/Xã\"],\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-8\",\n    name: \"name\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 23\n      }\n    }, \" * \"), \"T\\xEAn Ph\\u01B0\\u1EDDng/X\\xE3\"),\n    value: wardFormData.name || \"\",\n    onChange: handleOnchange,\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng nhập tên Phường/Xã\"],\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-8\",\n    name: \"area\",\n    type: \"number\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 23\n      }\n    }, \" * \"), \"Di\\u1EC7n t\\xEDch\"),\n    value: wardFormData.area || \"\",\n    onChange: handleOnchange,\n    fullWidth: true,\n    validators: [\"required\", \"minNumber:0\"],\n    errorMessages: [\"Vui lòng nhập diện tích\", \"Diện tích không được âm\"],\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(DialogActions, {\n    style: {\n      justifyContent: \"center\"\n    },\n    spacing: 4,\n    className: \"flex flex-end flex-middle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: onClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, t(\"general.cancel\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, (wardFormData === null || wardFormData === void 0 ? void 0 : wardFormData.id) ? t(\"general.update\") : t(\"general.save\"))))));\n};\n\nexport default WardsDialog;","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/views/Location/Ward/WardsDialog.jsx"],"names":["React","useState","Button","Dialog","DialogTitle","DialogContent","DialogActions","FormControl","MenuItem","Grid","IconButton","makeStyles","ValidatorForm","TextValidator","SelectValidator","Close","CloseIcon","useTranslation","useEffect","useDispatch","useSelector","useStyles","colorStyle","color","iconClose","position","right","top","WardsDialog","open","onClose","ward","classes","t","defaultValue","code","name","area","districtDto","id","wardFormData","setWardFormData","dispatch","districts","state","district","tableData","map","handleOnchange","event","target","value","handleClose","HandleAddNewWard","type","data","handleSubmit","e","preventDefault","i","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  FormControl,\r\n  MenuItem,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ValidatorForm,\r\n  TextValidator,\r\n  SelectValidator,\r\n} from \"react-material-ui-form-validator\";\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { addWards, updateWards } from \"app/redux/actions/WardsActions\";\r\n\r\nconst useStyles = makeStyles({\r\n  colorStyle: {\r\n    color: \"red\",\r\n  },\r\n  iconClose: {\r\n    position: \"absolute\",\r\n    right: 8,\r\n    top: 8,\r\n  },\r\n});\r\nconst WardsDialog = ({ open, onClose, ward }) => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const defaultValue = {\r\n    code: \"\",\r\n    name: \"\",\r\n    area: \"\",\r\n    districtDto: {\r\n      id: \"\",\r\n    },\r\n  };\r\n  const [wardFormData, setWardFormData] = useState({\r\n    defaultValue,\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  const districts = useSelector((state) => state.district.district);\r\n  const tableData = districts.map((districts) => ({ ...districts }));\r\n  useEffect(() => {\r\n    setWardFormData(ward);\r\n  }, [ward]);\r\n\r\n  const handleOnchange = (event) => {\r\n    setWardFormData({\r\n      ...wardFormData,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n    if (event.target.name === \"districtDto\") {\r\n      setWardFormData({\r\n        ...wardFormData,\r\n        districtDto: { id: event.target.value },\r\n      });\r\n    }\r\n  };\r\n  const handleClose = () => {\r\n    setWardFormData({});\r\n    onClose();\r\n  };\r\n  const HandleAddNewWard = () => {\r\n    dispatch({\r\n      type: \"UPDATE_WARD_REQUEST\",\r\n      id:wardFormData.id,\r\n      data: wardFormData,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    HandleAddNewWard();\r\n    handleClose();\r\n  };\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={onClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        maxWidth={\"sm\"}\r\n        fullWidth={true}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <span className=\"mb-20 styleColor\">\r\n            {(wardFormData?.id ? t(\"general.update\") : t(\"Add\")) +\r\n              \" \" +\r\n              t(\"Phường/Xã\")}\r\n          </span>\r\n          <IconButton aria-label=\"close\" className={classes.iconClose}>\r\n            <CloseIcon color=\"error\" onClick={onClose} />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <ValidatorForm onSubmit={handleSubmit}>\r\n          <DialogContent dividers>\r\n            <Grid className=\"mb-8\" container spacing={1}>\r\n              <Grid item sm={12} xs={12}>\r\n                <FormControl fullWidth={true}>\r\n                  <SelectValidator\r\n                    label={\r\n                      <span>\r\n                        <span className={classes.colorStyle}> * </span>\r\n                        Mã Quận/Huyện\r\n                      </span>\r\n                    }\r\n                    name=\"districtDto\"\r\n                    value={wardFormData?.districtDto?.id || null}\r\n                    onChange={handleOnchange}\r\n                    validators={[\"required\"]}\r\n                    errorMessages={[\"Vui lòng chọn Quận/Huyện\"]}\r\n                    className=\"w-100 mb-8\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                  >\r\n                    {tableData.map((i) => (\r\n                      <MenuItem value={i.id} key={i.id}>\r\n                        {i.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </SelectValidator>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-8\"\r\n                  name=\"code\"\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Mã Phường/Xã\r\n                    </span>\r\n                  }\r\n                  value={wardFormData.code || \"\"}\r\n                  onChange={handleOnchange}\r\n                  fullWidth\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"Vui lòng nhập mã Phường/Xã\"]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-8\"\r\n                  name=\"name\"\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Tên Phường/Xã\r\n                    </span>\r\n                  }\r\n                  value={wardFormData.name || \"\"}\r\n                  onChange={handleOnchange}\r\n                  fullWidth\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"Vui lòng nhập tên Phường/Xã\"]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-8\"\r\n                  name=\"area\"\r\n                  type=\"number\"\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Diện tích\r\n                    </span>\r\n                  }\r\n                  value={wardFormData.area || \"\"}\r\n                  onChange={handleOnchange}\r\n                  fullWidth\r\n                  validators={[\"required\", \"minNumber:0\"]}\r\n                  errorMessages={[\r\n                    \"Vui lòng nhập diện tích\",\r\n                    \"Diện tích không được âm\",\r\n                  ]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions\r\n            style={{ justifyContent: \"center\" }}\r\n            spacing={4}\r\n            className=\"flex flex-end flex-middle\"\r\n          >\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={onClose}>\r\n              {t(\"general.cancel\")}\r\n            </Button>\r\n            <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n              {wardFormData?.id ? t(\"general.update\") : t(\"general.save\")}\r\n            </Button>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WardsDialog;\r\n"]},"metadata":{},"sourceType":"module"}