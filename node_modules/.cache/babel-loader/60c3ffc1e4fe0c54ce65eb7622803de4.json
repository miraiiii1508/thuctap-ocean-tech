{"ast":null,"code":"import _objectSpread from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\src\\\\app\\\\views\\\\Staff\\\\ManagerEmployeeDialog.jsx\";\n\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, Grid, IconButton, makeStyles } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport React, { useEffect, useState } from \"react\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport { SelectValidator, TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\nvar useStyles = makeStyles({\n  colorStyle: {\n    color: \"red\"\n  },\n  iconClose: {\n    position: \"absolute\",\n    right: 8,\n    top: 8\n  }\n});\n\nvar ManagerEmployeeDialog = function ManagerEmployeeDialog(_ref) {\n  var _employeeFormData$pro, _employeeFormData$dis, _employeeFormData$war;\n\n  var open = _ref.open,\n      onClose = _ref.onClose,\n      employees = _ref.employees;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var defaultValue = {\n    code: \"\",\n    name: \"\",\n    age: \"\",\n    phone: \"\",\n    mail: \"\",\n    area: {\n      provincesArea: {\n        id: \"\"\n      },\n      districtsArea: {\n        id: \"\"\n      },\n      wardsIdArea: {\n        id: \"\"\n      }\n    }\n  };\n\n  var _useState = useState({\n    defaultValue: defaultValue\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      employeeFormData = _useState2[0],\n      setEmployeeFormData = _useState2[1];\n\n  useEffect(function () {\n    setEmployeeFormData(employees);\n    console.log(employees);\n  }, [employees]);\n\n  var handleOnchange = function handleOnchange(e) {\n    setEmployeeFormData(_objectSpread(_objectSpread({}, employeeFormData), {}, {\n      [e.target.name]: e.target.value\n    }));\n    console.log(employeeFormData);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: onClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    maxWidth: \"md\",\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mb-20 styleColor\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, ((employeeFormData === null || employeeFormData === void 0 ? void 0 : employeeFormData.id) ? t(\"general.update\") : t(\"Add\")) + \" \" + t(\"Nhân Viên\")), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.iconClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    color: \"error\",\n    onClick: onClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ValidatorForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"mb-8\",\n    container: true,\n    spacing: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 6,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-8\",\n    name: \"code\",\n    value: employeeFormData.code || \"\",\n    onChange: handleOnchange,\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 23\n      }\n    }, \" * \"), \"M\\xE3 nh\\xE2n vi\\xEAn\"),\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng nhập mã Nhân Viên\"],\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 6,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-8\",\n    name: \"name\",\n    value: employeeFormData.name || \" \",\n    onChange: handleOnchange,\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 23\n      }\n    }, \" * \"), \"H\\u1ECD V\\xE0 T\\xEAn\"),\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng nhập mã Phường/Xã\"],\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-8\",\n    name: \"age\",\n    value: employeeFormData.age || \"\",\n    type: \"number\",\n    onChange: handleOnchange,\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 23\n      }\n    }, \" * \"), \"Tu\\u1ED5i\"),\n    fullWidth: true,\n    validators: [\"required\", \"minNumber:0\", \"maxNumber:100\"],\n    errorMessages: [\"Vui lòng nhập tuổi \", \"Tuổi không được âm\", \"Nhập sai tuổi\"],\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-8\",\n    name: \"phone\",\n    type: \"number\",\n    value: employeeFormData.phone || \"\",\n    onChange: handleOnchange,\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 23\n      }\n    }, \" * \"), \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"),\n    fullWidth: true,\n    validators: [\"required\", \"minNumber:0\"],\n    errorMessages: [\"Vui lòng nhập diện tích\", \"Diện tích không được âm\"],\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-8\",\n    name: \"email\",\n    value: employeeFormData.mail || \"\",\n    onChange: handleOnchange,\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 23\n      }\n    }, \" * \"), \"Email\"),\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng nhập diện tích\"],\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectValidator, {\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }, \" * \"), \"Th\\xE0nh Ph\\u1ED1\"),\n    name: \"provincesId\",\n    value: (employeeFormData === null || employeeFormData === void 0 ? void 0 : (_employeeFormData$pro = employeeFormData.provincesArea) === null || _employeeFormData$pro === void 0 ? void 0 : _employeeFormData$pro.id) || null,\n    onChange: handleOnchange,\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng chọn Quận/Huyện\"],\n    className: \"w-100 mb-8\",\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectValidator, {\n    name: \"districtsId\",\n    value: (employeeFormData === null || employeeFormData === void 0 ? void 0 : (_employeeFormData$dis = employeeFormData.districtsArea) === null || _employeeFormData$dis === void 0 ? void 0 : _employeeFormData$dis.id) || null,\n    onChange: handleOnchange,\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    }, \" * \"), \"Qu\\u1EADn/Huy\\u1EC7n\"),\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng chọn Quận/Huyện\"],\n    className: \"w-100 mb-8\",\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectValidator, {\n    name: \"wardsId\",\n    value: (employeeFormData === null || employeeFormData === void 0 ? void 0 : (_employeeFormData$war = employeeFormData.wardsIdArea) === null || _employeeFormData$war === void 0 ? void 0 : _employeeFormData$war.id) || null,\n    onChange: handleOnchange,\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }\n    }, \" * \"), \"Ph\\u01B0\\u1EDDng/X\\xE3\"),\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng chọn Quận/Huyện\"],\n    className: \"w-100 mb-8\",\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(DialogActions, {\n    style: {\n      justifyContent: \"center\"\n    },\n    spacing: 4,\n    className: \"flex flex-end flex-middle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: onClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, t(\"general.cancel\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, (employeeFormData === null || employeeFormData === void 0 ? void 0 : employeeFormData.id) ? t(\"general.update\") : t(\"general.save\"))))));\n};\n\nexport default ManagerEmployeeDialog;","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/views/Staff/ManagerEmployeeDialog.jsx"],"names":["Button","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","Grid","IconButton","makeStyles","useTranslation","React","useEffect","useState","Close","CloseIcon","SelectValidator","TextValidator","ValidatorForm","useStyles","colorStyle","color","iconClose","position","right","top","ManagerEmployeeDialog","open","onClose","employees","classes","t","defaultValue","code","name","age","phone","mail","area","provincesArea","id","districtsArea","wardsIdArea","employeeFormData","setEmployeeFormData","console","log","handleOnchange","e","target","value","justifyContent"],"mappings":"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","sourcesContent":["import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControl,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\nimport {\r\n  SelectValidator,\r\n  TextValidator,\r\n  ValidatorForm,\r\n} from \"react-material-ui-form-validator\";\r\nconst useStyles = makeStyles({\r\n  colorStyle: {\r\n    color: \"red\",\r\n  },\r\n  iconClose: {\r\n    position: \"absolute\",\r\n    right: 8,\r\n    top: 8,\r\n  },\r\n});\r\nconst ManagerEmployeeDialog = ({ open, onClose, employees }) => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const defaultValue = {\r\n    code: \"\",\r\n    name: \"\",\r\n    age: \"\",\r\n    phone: \"\",\r\n    mail: \"\",\r\n    area: {\r\n      provincesArea: { id: \"\" },\r\n      districtsArea: { id: \"\" },\r\n      wardsIdArea: { id: \"\" },\r\n    },\r\n  };\r\n  const [employeeFormData, setEmployeeFormData] = useState({ defaultValue });\r\n  useEffect(() => {\r\n    setEmployeeFormData(employees);\r\n    console.log(employees);\r\n  }, [employees]);\r\n  const handleOnchange = (e) => {\r\n    setEmployeeFormData({\r\n      ...employeeFormData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    console.log(employeeFormData);\r\n  };\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={onClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        maxWidth={\"md\"}\r\n        fullWidth={true}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <span className=\"mb-20 styleColor\">\r\n            {(employeeFormData?.id ? t(\"general.update\") : t(\"Add\")) +\r\n              \" \" +\r\n              t(\"Nhân Viên\")}\r\n          </span>\r\n          <IconButton aria-label=\"close\" className={classes.iconClose}>\r\n            <CloseIcon color=\"error\" onClick={onClose} />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <ValidatorForm>\r\n          <DialogContent dividers>\r\n            <Grid className=\"mb-8\" container spacing={1}>\r\n              <Grid item sm={6} xs={6}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-8\"\r\n                  name=\"code\"\r\n                  value={employeeFormData.code || \"\"}\r\n                  onChange={handleOnchange}\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Mã nhân viên\r\n                    </span>\r\n                  }\r\n                  fullWidth\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"Vui lòng nhập mã Nhân Viên\"]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={6} xs={6}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-8\"\r\n                  name=\"name\"\r\n                  value={employeeFormData.name || \" \"}\r\n                  onChange={handleOnchange}\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Họ Và Tên\r\n                    </span>\r\n                  }\r\n                  fullWidth\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"Vui lòng nhập mã Phường/Xã\"]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={4} xs={4}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-8\"\r\n                  name=\"age\"\r\n                  value={employeeFormData.age || \"\"}\r\n                  type=\"number\"\r\n                  onChange={handleOnchange}\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Tuổi\r\n                    </span>\r\n                  }\r\n                  fullWidth\r\n                  validators={[\"required\", \"minNumber:0\", \"maxNumber:100\"]}\r\n                  errorMessages={[\r\n                    \"Vui lòng nhập tuổi \",\r\n                    \"Tuổi không được âm\",\r\n                    \"Nhập sai tuổi\",\r\n                  ]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={4} xs={4}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-8\"\r\n                  name=\"phone\"\r\n                  type=\"number\"\r\n                  value={employeeFormData.phone || \"\"}\r\n                  onChange={handleOnchange}\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Số điện thoại\r\n                    </span>\r\n                  }\r\n                  fullWidth\r\n                  validators={[\"required\", \"minNumber:0\"]}\r\n                  errorMessages={[\r\n                    \"Vui lòng nhập diện tích\",\r\n                    \"Diện tích không được âm\",\r\n                  ]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={4} xs={4}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-8\"\r\n                  name=\"email\"\r\n                  value={employeeFormData.mail || \"\"}\r\n                  onChange={handleOnchange}\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Email\r\n                    </span>\r\n                  }\r\n                  fullWidth\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"Vui lòng nhập diện tích\"]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={4} xs={4}>\r\n                <FormControl fullWidth={true}>\r\n                  <SelectValidator\r\n                    label={\r\n                      <span>\r\n                        <span className={classes.colorStyle}> * </span>\r\n                        Thành Phố\r\n                      </span>\r\n                    }\r\n                    name=\"provincesId\"\r\n                    value={employeeFormData?.provincesArea?.id || null}\r\n                    onChange={handleOnchange}\r\n                    validators={[\"required\"]}\r\n                    errorMessages={[\"Vui lòng chọn Quận/Huyện\"]}\r\n                    className=\"w-100 mb-8\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                  ></SelectValidator>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item sm={4} xs={4}>\r\n                <FormControl fullWidth={true}>\r\n                  <SelectValidator\r\n                    name=\"districtsId\"\r\n                    value={employeeFormData?.districtsArea?.id || null}\r\n                    onChange={handleOnchange}\r\n                    label={\r\n                      <span>\r\n                        <span className={classes.colorStyle}> * </span>\r\n                        Quận/Huyện\r\n                      </span>\r\n                    }\r\n                    validators={[\"required\"]}\r\n                    errorMessages={[\"Vui lòng chọn Quận/Huyện\"]}\r\n                    className=\"w-100 mb-8\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                  ></SelectValidator>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item sm={4} xs={4}>\r\n                <FormControl fullWidth={true}>\r\n                  <SelectValidator\r\n                    name=\"wardsId\"\r\n                    value={employeeFormData?.wardsIdArea?.id || null}\r\n                    onChange={handleOnchange}\r\n                    label={\r\n                      <span>\r\n                        <span className={classes.colorStyle}> * </span>\r\n                        Phường/Xã\r\n                      </span>\r\n                    }\r\n                    validators={[\"required\"]}\r\n                    errorMessages={[\"Vui lòng chọn Quận/Huyện\"]}\r\n                    className=\"w-100 mb-8\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                  ></SelectValidator>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions\r\n            style={{ justifyContent: \"center\" }}\r\n            spacing={4}\r\n            className=\"flex flex-end flex-middle\"\r\n          >\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={onClose}>\r\n              {t(\"general.cancel\")}\r\n            </Button>\r\n            <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n              {employeeFormData?.id ? t(\"general.update\") : t(\"general.save\")}\r\n            </Button>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\nexport default ManagerEmployeeDialog;\r\n"]},"metadata":{},"sourceType":"module"}