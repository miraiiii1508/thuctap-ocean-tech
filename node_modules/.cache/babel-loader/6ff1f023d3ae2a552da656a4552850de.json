{"ast":null,"code":"import _slicedToArray from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\src\\\\app\\\\views\\\\Staff\\\\ManagerEmployee.jsx\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button, Grid, Icon, IconButton, TablePagination, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as XLSX from \"xlsx\";\nimport { saveAs } from \"file-saver\";\nimport { toast } from \"react-toastify\";\nimport { deleteEmployeeAction, getAllEmployeesAction, searchEmployeesAction } from \"app/redux/actions/EmployeesAction\";\nimport { ConfirmationDialog } from \"egret\";\nimport ManagerEmployeeDialog from \"./ManagerEmployeeDialog\";\nvar useStyles = makeStyles({\n  customStyle: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: \"0px 10px\",\n    backgroundColor: \"rgb(250 250 250)\"\n  },\n  iconButton: {\n    padding: \"12px 6px\"\n  },\n  tableCell: {\n    border: \"none\"\n  }\n});\n\nvar ManagerStaff = function ManagerStaff() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.employees;\n  }),\n      employees = _useSelector.employees,\n      reload = _useSelector.reload;\n\n  var dataTable = employees.map(function (employee) {\n    return _objectSpread({}, employee);\n  });\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      rowData = _useState2[0],\n      setRowData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showDeleteDialog = _useState4[0],\n      setShowDeleteDialog = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showDialogEmployee = _useState6[0],\n      setShowDialogEmployee = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      keywords = _useState8[0],\n      setKeywords = _useState8[1];\n\n  var _useState9 = useState(10),\n      _useState10 = _slicedToArray(_useState9, 2),\n      rowsPerPage = _useState10[0],\n      setRowsPerPage = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      currentPage = _useState12[0],\n      setCurrentPage = _useState12[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var classes = useStyles();\n  useEffect(function () {\n    getAllEmployee();\n  }, [dispatch, reload]);\n  useEffect(function () {\n    var searchObj = {};\n    searchObj.keyword = keywords;\n    searchObj.pageSize = rowsPerPage;\n    searchObj.pageIndex = currentPage + 1;\n    dispatch(searchEmployeesAction(searchObj));\n  }, [keywords, currentPage, rowsPerPage, reload]);\n\n  var getAllEmployee = function getAllEmployee() {\n    dispatch(getAllEmployeesAction());\n  };\n\n  var handleAddNewEmployee = function handleAddNewEmployee() {\n    setShowDialogEmployee(true);\n    setRowData({});\n  };\n\n  var handEditEmployee = function handEditEmployee(data) {\n    setShowDialogEmployee(true);\n    setRowData(data);\n  };\n\n  var handleCloseDialogEmployee = function handleCloseDialogEmployee() {\n    setShowDialogEmployee(false);\n    setRowData({});\n  };\n\n  var handleCloseDeleteDialog = function handleCloseDeleteDialog() {\n    setShowDeleteDialog(false);\n    setRowData({});\n  };\n\n  var handleOpenDialogDelete = function handleOpenDialogDelete(data) {\n    setShowDeleteDialog(true);\n    setRowData(data);\n  };\n\n  var handleDialogDelete = function handleDialogDelete() {\n    dispatch(deleteEmployeeAction(rowData.id));\n    handleCloseDeleteDialog();\n  };\n\n  var handleChanceRowsPerPage = function handleChanceRowsPerPage(e) {\n    setRowsPerPage(e.target.value);\n    setCurrentPage(0);\n  };\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setCurrentPage(newPage);\n  };\n\n  var handleExportExcel = function handleExportExcel() {\n    var workbook = XLSX.utils.book_new();\n    var worksheet = XLSX.utils.json_to_sheet(employees);\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Employees\");\n    var excelBuffer = XLSX.write(workbook, {\n      bookType: \"xlsx\",\n      type: \"array\"\n    });\n    var excelData = new Blob([excelBuffer], {\n      type: \"application/octet-stream\"\n    });\n    saveAs(excelData, \"danh_sach_nhan_vien.xlsx\");\n    toast.success(\"Xuất file thành công!\");\n  };\n\n  var columns = [{\n    title: \"Thao tác\",\n    field: \"custom\",\n    width: \"100\",\n    cellStyle: {\n      padding: \"0\",\n      margin: \"0\"\n    },\n    render: function render(row) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n        className: classes.iconButton,\n        onClick: function onClick() {\n          return handEditEmployee(row);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"primary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }\n      }, \"edit\")), /*#__PURE__*/React.createElement(IconButton, {\n        className: classes.iconButton,\n        onClick: function onClick() {\n          return handleOpenDialogDelete(row);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }, \"delete\")));\n    }\n  }, {\n    field: \"code\",\n    title: \"Mã Nhân Viên\"\n  }, {\n    field: \"name\",\n    title: \"Họ và tên\"\n  }, {\n    field: \"age\",\n    title: \"Tuổi\"\n  }, {\n    field: \"email\",\n    title: \"Email\"\n  }, {\n    field: \"phone\",\n    title: \"Số điện thoại\"\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toolbar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mt-16 mb-16 mr-16 align-bottom\",\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"medium\",\n    onClick: handleAddNewEmployee,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, t(\"Add\")), /*#__PURE__*/React.createElement(Button, {\n    className: \"mt-16 mb-16 mr-16 align-bottom\",\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"medium\",\n    onClick: handleExportExcel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, t(\"general.exportToExcel\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"search\",\n    label: \"T\\xECm ki\\u1EBFm\",\n    style: {\n      width: \"300px\"\n    },\n    onChange: function onChange(e) {\n      setKeywords(e.target.value);\n    },\n    className: \"mb-16 mr-16 align-bottom \".concat(classes.widthStyle),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(MaterialTable, {\n    columns: columns,\n    data: dataTable,\n    options: {\n      toolbar: false,\n      headerStyle: {\n        backgroundColor: \"#358600\",\n        color: \"#fff\"\n      },\n      minBodyHeight: \"569px\",\n      maxBodyHeight: \"569px\",\n      pageSize: 10,\n      rowStyle: function rowStyle(rowData, index) {\n        return {\n          backgroundColor: index % 2 === 1 ? \"#EEE\" : \"#FFF\"\n        };\n      },\n      padding: \"dense\"\n    },\n    title: null,\n    localization: {\n      body: {\n        emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TablePagination, {\n    align: \"left\",\n    className: \"px-16\",\n    rowsPerPageOptions: [1, 2, 3, 5, 10, 25, 50, 100],\n    component: \"div\",\n    labelRowsPerPage: t(\"general.rows_per_page\"),\n    labelDisplayedRows: function labelDisplayedRows(_ref) {\n      var from = _ref.from,\n          to = _ref.to,\n          count = _ref.count;\n      return \"\".concat(from, \"-\").concat(to, \" \").concat(t(\"general.of\"), \" \").concat(count !== -1 ? count : \"more than \".concat(to));\n    },\n    count: dataTable.le,\n    rowsPerPage: rowsPerPage,\n    page: currentPage,\n    backIconButtonProps: {\n      \"aria-label\": \"Previous Page\"\n    },\n    nextIconButtonProps: {\n      \"aria-label\": \"Next Page\"\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChanceRowsPerPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }), showDialogEmployee && /*#__PURE__*/React.createElement(ManagerEmployeeDialog, {\n    open: showDialogEmployee,\n    onClose: handleCloseDialogEmployee,\n    employees: rowData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }), showDeleteDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n    open: showDeleteDialog,\n    onConfirmDialogClose: handleCloseDeleteDialog,\n    onYesClick: handleDialogDelete,\n    title: \"\".concat(t(\"Xóa nhân viên\"), \" \").concat(rowData === null || rowData === void 0 ? void 0 : rowData.name, \"?\"),\n    text: t(\"DeleteConfirm\"),\n    Yes: t(\"Yes\"),\n    No: t(\"No\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default ManagerStaff;","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/views/Staff/ManagerEmployee.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","MaterialTable","MTableToolbar","useTranslation","Button","Grid","Icon","IconButton","TablePagination","TextField","makeStyles","XLSX","saveAs","toast","deleteEmployeeAction","getAllEmployeesAction","searchEmployeesAction","ConfirmationDialog","ManagerEmployeeDialog","useStyles","customStyle","display","justifyContent","toolbar","alignItems","padding","backgroundColor","iconButton","tableCell","border","ManagerStaff","dispatch","state","employees","reload","dataTable","map","employee","rowData","setRowData","showDeleteDialog","setShowDeleteDialog","showDialogEmployee","setShowDialogEmployee","keywords","setKeywords","rowsPerPage","setRowsPerPage","currentPage","setCurrentPage","t","classes","getAllEmployee","searchObj","keyword","pageSize","pageIndex","handleAddNewEmployee","handEditEmployee","data","handleCloseDialogEmployee","handleCloseDeleteDialog","handleOpenDialogDelete","handleDialogDelete","id","handleChanceRowsPerPage","e","target","value","handleChangePage","event","newPage","handleExportExcel","workbook","utils","book_new","worksheet","json_to_sheet","book_append_sheet","excelBuffer","write","bookType","type","excelData","Blob","success","columns","title","field","width","cellStyle","margin","render","row","widthStyle","headerStyle","color","minBodyHeight","maxBodyHeight","rowStyle","index","body","emptyDataSourceMessage","from","to","count","le","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Icon,\r\n  IconButton,\r\n  TablePagination,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  deleteEmployeeAction,\r\n  getAllEmployeesAction,\r\n  searchEmployeesAction,\r\n} from \"app/redux/actions/EmployeesAction\";\r\nimport { ConfirmationDialog } from \"egret\";\r\nimport ManagerEmployeeDialog from \"./ManagerEmployeeDialog\";\r\n\r\nconst useStyles = makeStyles({\r\n  customStyle: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: \"0px 10px\",\r\n    backgroundColor: \"rgb(250 250 250)\",\r\n  },\r\n  iconButton: {\r\n    padding: \"12px 6px\",\r\n  },\r\n  tableCell: {\r\n    border: \"none\",\r\n  },\r\n});\r\n\r\nconst ManagerStaff = () => {\r\n  const dispatch = useDispatch();\r\n  const { employees, reload } = useSelector((state) => state.employees);\r\n  const dataTable = employees.map((employee) => ({ ...employee }));\r\n  const [rowData, setRowData] = useState({});\r\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\r\n  const [showDialogEmployee, setShowDialogEmployee] = useState(false);\r\n  const [keywords, setKeywords] = useState(\"\");\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    getAllEmployee();\r\n  }, [dispatch, reload]);\r\n  useEffect(() => {\r\n    let searchObj = {};\r\n    searchObj.keyword = keywords;\r\n    searchObj.pageSize = rowsPerPage;\r\n    searchObj.pageIndex = currentPage + 1;\r\n    dispatch(searchEmployeesAction(searchObj));\r\n  }, [keywords, currentPage, rowsPerPage, reload]);\r\n  const getAllEmployee = () => {\r\n    dispatch(getAllEmployeesAction());\r\n  };\r\n\r\n  const handleAddNewEmployee = () => {\r\n    setShowDialogEmployee(true);\r\n    setRowData({});\r\n  };\r\n\r\n  const handEditEmployee = (data) => {\r\n    setShowDialogEmployee(true);\r\n    setRowData(data);\r\n  };\r\n\r\n  const handleCloseDialogEmployee = () => {\r\n    setShowDialogEmployee(false);\r\n    setRowData({});\r\n  };\r\n\r\n  const handleCloseDeleteDialog = () => {\r\n    setShowDeleteDialog(false);\r\n    setRowData({});\r\n  };\r\n\r\n  const handleOpenDialogDelete = (data) => {\r\n    setShowDeleteDialog(true);\r\n    setRowData(data);\r\n  };\r\n\r\n  const handleDialogDelete = () => {\r\n    dispatch(deleteEmployeeAction(rowData.id));\r\n    handleCloseDeleteDialog();\r\n  };\r\n  const handleChanceRowsPerPage = (e) => {\r\n    setRowsPerPage(e.target.value);\r\n    setCurrentPage(0);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setCurrentPage(newPage);\r\n  };\r\n  const handleExportExcel = () => {\r\n    const workbook = XLSX.utils.book_new();\r\n    const worksheet = XLSX.utils.json_to_sheet(employees);\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Employees\");\r\n    const excelBuffer = XLSX.write(workbook, {\r\n      bookType: \"xlsx\",\r\n      type: \"array\",\r\n    });\r\n    const excelData = new Blob([excelBuffer], {\r\n      type: \"application/octet-stream\",\r\n    });\r\n    saveAs(excelData, `danh_sach_nhan_vien.xlsx`);\r\n    toast.success(\"Xuất file thành công!\");\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Thao tác\",\r\n      field: \"custom\",\r\n      width: \"100\",\r\n      cellStyle: {\r\n        padding: \"0\",\r\n        margin: \"0\",\r\n      },\r\n      render: (row) => (\r\n        <>\r\n          <IconButton\r\n            className={classes.iconButton}\r\n            onClick={() => handEditEmployee(row)}\r\n          >\r\n            <Icon color=\"primary\">edit</Icon>\r\n          </IconButton>\r\n          <IconButton\r\n            className={classes.iconButton}\r\n            onClick={() => handleOpenDialogDelete(row)}\r\n          >\r\n            <Icon color=\"error\">delete</Icon>\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    },\r\n    { field: \"code\", title: \"Mã Nhân Viên\" },\r\n    { field: \"name\", title: \"Họ và tên\" },\r\n    { field: \"age\", title: \"Tuổi\" },\r\n    { field: \"email\", title: \"Email\" },\r\n    { field: \"phone\", title: \"Số điện thoại\" },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.toolbar}>\r\n        <div>\r\n          <Button\r\n            className=\"mt-16 mb-16 mr-16 align-bottom\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"medium\"\r\n            onClick={handleAddNewEmployee}\r\n          >\r\n            {t(\"Add\")}\r\n          </Button>\r\n          <Button\r\n            className=\"mt-16 mb-16 mr-16 align-bottom\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"medium\"\r\n            onClick={handleExportExcel}\r\n          >\r\n            {t(\"general.exportToExcel\")}\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n            <Grid item>\r\n              <TextField\r\n                name=\"search\"\r\n                label=\"Tìm kiếm\"\r\n                style={{ width: \"300px\" }}\r\n                onChange={(e) => {\r\n                  setKeywords(e.target.value);\r\n                }}\r\n                className={`mb-16 mr-16 align-bottom ${classes.widthStyle}`}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n      <MaterialTable\r\n        columns={columns}\r\n        data={dataTable}\r\n        options={{\r\n          toolbar: false,\r\n          headerStyle: {\r\n            backgroundColor: \"#358600\",\r\n            color: \"#fff\",\r\n          },\r\n          minBodyHeight: \"569px\",\r\n          maxBodyHeight: \"569px\",\r\n          pageSize: 10,\r\n          rowStyle: (rowData, index) => ({\r\n            backgroundColor: index % 2 === 1 ? \"#EEE\" : \"#FFF\",\r\n          }),\r\n          padding: \"dense\",\r\n        }}\r\n        title={null}\r\n        localization={{\r\n          body: {\r\n            emptyDataSourceMessage: `${t(\"general.emptyDataMessageTable\")}`,\r\n          },\r\n        }}\r\n      />\r\n      <TablePagination\r\n        align=\"left\"\r\n        className=\"px-16\"\r\n        rowsPerPageOptions={[1, 2, 3, 5, 10, 25, 50, 100]}\r\n        component=\"div\"\r\n        labelRowsPerPage={t(\"general.rows_per_page\")}\r\n        labelDisplayedRows={({ from, to, count }) =>\r\n          `${from}-${to} ${t(\"general.of\")} ${\r\n            count !== -1 ? count : `more than ${to}`\r\n          }`\r\n        }\r\n        count={dataTable.le}\r\n        rowsPerPage={rowsPerPage}\r\n        page={currentPage}\r\n        backIconButtonProps={{\r\n          \"aria-label\": \"Previous Page\",\r\n        }}\r\n        nextIconButtonProps={{\r\n          \"aria-label\": \"Next Page\",\r\n        }}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChanceRowsPerPage}\r\n      />\r\n      {showDialogEmployee && (\r\n        <ManagerEmployeeDialog\r\n          open={showDialogEmployee}\r\n          onClose={handleCloseDialogEmployee}\r\n          employees={rowData}\r\n        />\r\n      )}\r\n      {showDeleteDialog && (\r\n        <ConfirmationDialog\r\n          open={showDeleteDialog}\r\n          onConfirmDialogClose={handleCloseDeleteDialog}\r\n          onYesClick={handleDialogDelete}\r\n          title={`${t(\"Xóa nhân viên\")} ${rowData?.name}?`}\r\n          text={t(\"DeleteConfirm\")}\r\n          Yes={t(\"Yes\")}\r\n          No={t(\"No\")}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManagerStaff;\r\n"]},"metadata":{},"sourceType":"module"}