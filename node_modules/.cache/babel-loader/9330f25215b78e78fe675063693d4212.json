{"ast":null,"code":"import _slicedToArray from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nvar initialState = {\n  employees: [],\n  reload: false\n};\nexport var employeesSlide = createSlice({\n  name: \"employees\",\n  initialState: initialState,\n  reducers: {\n    getAllEmployeesReducer: function getAllEmployeesReducer(state, action) {\n      state.employees = action.payload;\n    },\n    addEmployeeReducer: function addEmployeeReducer(state, action) {\n      state.employees = [].concat(_toConsumableArray(state.employees), [action.payload]);\n      state.reload = !state.reload;\n    },\n    updateEmployeeRedcuer: function updateEmployeeRedcuer(state, action) {\n      var _action$payload = action.payload,\n          id = _action$payload.id,\n          updateData = _action$payload.updateData;\n\n      var _state$employees$find = state.employees.findIndex(emp),\n          _state$employees$find2 = _slicedToArray(_state$employees$find, 1),\n          index = _state$employees$find2[0];\n    },\n    deleteEmployeeReducer: function deleteEmployeeReducer(state, action) {}\n  }\n});\nvar _employeesSlide$actio = employeesSlide.actions,\n    getAllEmployeesReducer = _employeesSlide$actio.getAllEmployeesReducer,\n    addEmployeeReducer = _employeesSlide$actio.addEmployeeReducer;\nexport { getAllEmployeesReducer, addEmployeeReducer };\nexport default employeesSlide.reducer;","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/redux/reducers/EmployeesReducer.js"],"names":["createSlice","initialState","employees","reload","employeesSlide","name","reducers","getAllEmployeesReducer","state","action","payload","addEmployeeReducer","updateEmployeeRedcuer","id","updateData","findIndex","emp","index","deleteEmployeeReducer","actions","reducer"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;AAIA,OAAO,IAAMC,cAAc,GAAGJ,WAAW,CAAC;AACxCK,EAAAA,IAAI,EAAE,WADkC;AAExCJ,EAAAA,YAAY,EAAZA,YAFwC;AAGxCK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,sBAAsB,EAAE,gCAACC,KAAD,EAAQC,MAAR,EAAmB;AACzCD,MAAAA,KAAK,CAACN,SAAN,GAAkBO,MAAM,CAACC,OAAzB;AACD,KAHO;AAIRC,IAAAA,kBAAkB,EAAE,4BAACH,KAAD,EAAQC,MAAR,EAAmB;AACrCD,MAAAA,KAAK,CAACN,SAAN,gCAAsBM,KAAK,CAACN,SAA5B,IAAuCO,MAAM,CAACC,OAA9C;AACAF,MAAAA,KAAK,CAACL,MAAN,GAAe,CAACK,KAAK,CAACL,MAAtB;AACD,KAPO;AAQRS,IAAAA,qBAAqB,EAAC,+BAACJ,KAAD,EAASC,MAAT,EAAkB;AAAA,4BACZA,MAAM,CAACC,OADK;AAAA,UAC/BG,EAD+B,mBAC/BA,EAD+B;AAAA,UAC1BC,UAD0B,mBAC1BA,UAD0B;;AAAA,kCAEtBN,KAAK,CAACN,SAAN,CAAgBa,SAAhB,CAA2BC,GAA3B,CAFsB;AAAA;AAAA,UAE/BC,KAF+B;AAGvC,KAXO;AAYRC,IAAAA,qBAAqB,EAAE,+BAACV,KAAD,EAAQC,MAAR,EAAmB,CAAE;AAZpC;AAH8B,CAAD,CAAlC;4BAmBLL,cAAc,CAACe,O;IADFZ,sB,yBAAAA,sB;IAAwBI,kB,yBAAAA,kB;;AAEvC,eAAeP,cAAc,CAACgB,OAA9B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  employees: [],\r\n  reload: false,\r\n};\r\nexport const employeesSlide = createSlice({\r\n  name: \"employees\",\r\n  initialState,\r\n  reducers: {\r\n    getAllEmployeesReducer: (state, action) => {\r\n      state.employees = action.payload;\r\n    },\r\n    addEmployeeReducer: (state, action) => {\r\n      state.employees = [...state.employees, action.payload];\r\n      state.reload = !state.reload;\r\n    },\r\n    updateEmployeeRedcuer:(state , action)=>{\r\n      const {id , updateData} = action.payload\r\n      const [index] = state.employees.findIndex((emp))\r\n    },\r\n    deleteEmployeeReducer: (state, action) => {},\r\n  },\r\n});\r\nexport const { getAllEmployeesReducer, addEmployeeReducer } =\r\n  employeesSlide.actions;\r\nexport default employeesSlide.reducer;\r\n"]},"metadata":{},"sourceType":"module"}