{"ast":null,"code":"import _toConsumableArray from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nvar initialState = {\n  provinces: [],\n  districts: [],\n  reload: false,\n  success: true,\n  error: null\n};\nexport var provincesSlice = createSlice({\n  name: \"provinces\",\n  initialState: initialState,\n  reducers: {\n    addProvinces: function addProvinces(state, action) {\n      console.log(\"action\", action);\n      state.provinces = [].concat(_toConsumableArray(state.todos), [action.payload]);\n    },\n    deleteProvinces: function deleteProvinces(state, action) {\n      state.provinces = state.todos.filter(function (todo) {\n        return todo.id !== action.payload;\n      });\n    },\n    showAllProvinces: function showAllProvinces(state, action) {\n      return action.payload;\n    }\n  }\n});\nvar _provincesSlice$actio = provincesSlice.actions,\n    addProvinces = _provincesSlice$actio.addProvinces,\n    deleteProvinces = _provincesSlice$actio.deleteProvinces,\n    showAllProvinces = _provincesSlice$actio.showAllProvinces;\nexport { addProvinces, deleteProvinces, showAllProvinces };\nexport default provincesSlice.reducer;","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/redux/reducers/ProvinceReduces.js"],"names":["createSlice","initialState","provinces","districts","reload","success","error","provincesSlice","name","reducers","addProvinces","state","action","console","log","todos","payload","deleteProvinces","filter","todo","id","showAllProvinces","actions","reducer"],"mappings":";AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,SAAS,EAAE,EAFQ;AAGnBC,EAAAA,MAAM,EAAE,KAHW;AAInBC,EAAAA,OAAO,EAAE,IAJU;AAKnBC,EAAAA,KAAK,EAAE;AALY,CAArB;AAOA,OAAO,IAAMC,cAAc,GAAGP,WAAW,CAAC;AACxCQ,EAAAA,IAAI,EAAE,WADkC;AAExCP,EAAAA,YAAY,EAAZA,YAFwC;AAGxCQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAE,sBAACC,KAAD,EAAQC,MAAR,EAAmB;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AACAD,MAAAA,KAAK,CAACT,SAAN,gCAAsBS,KAAK,CAACI,KAA5B,IAAmCH,MAAM,CAACI,OAA1C;AACD,KAJO;AAKRC,IAAAA,eAAe,EAAE,yBAACN,KAAD,EAAQC,MAAR,EAAmB;AAClCD,MAAAA,KAAK,CAACT,SAAN,GAAkBS,KAAK,CAACI,KAAN,CAAYG,MAAZ,CAChB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACI,OAA7B;AAAA,OADgB,CAAlB;AAGD,KATO;AAURK,IAAAA,gBAAgB,EAAE,0BAACV,KAAD,EAAQC,MAAR,EAAmB;AACnC,aAAOA,MAAM,CAACI,OAAd;AACD;AAZO;AAH8B,CAAD,CAAlC;4BAmBLT,cAAc,CAACe,O;IADFZ,Y,yBAAAA,Y;IAAcO,e,yBAAAA,e;IAAiBI,gB,yBAAAA,gB;;AAG9C,eAAed,cAAc,CAACgB,OAA9B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialState = {\r\n  provinces: [],\r\n  districts: [],\r\n  reload: false,\r\n  success: true,\r\n  error: null,\r\n};\r\nexport const provincesSlice = createSlice({\r\n  name: \"provinces\",\r\n  initialState,\r\n  reducers: {\r\n    addProvinces: (state, action) => {\r\n      console.log(\"action\", action);\r\n      state.provinces = [...state.todos, action.payload];\r\n    },\r\n    deleteProvinces: (state, action) => {\r\n      state.provinces = state.todos.filter(\r\n        (todo) => todo.id !== action.payload\r\n      );\r\n    },\r\n    showAllProvinces: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\nexport const { addProvinces, deleteProvinces, showAllProvinces } =\r\n  provincesSlice.actions;\r\n\r\nexport default provincesSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}