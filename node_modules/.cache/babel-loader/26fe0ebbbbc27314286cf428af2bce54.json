{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getAllProvincesSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(addProvincesSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(provincesSaga);\n\nimport { call, takeEvery, put } from \"redux-saga/effects\";\nimport { addProvincesApi, getAllProvinces } from \"./ProvicesApi\";\nimport { addProvinces, showAllProvinces } from \"app/redux/reducers/ProvinceReduces\";\nimport { toast } from \"react-toastify\";\n\nfunction getAllProvincesSaga() {\n  var response;\n  return _regeneratorRuntime.wrap(function getAllProvincesSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(getAllProvinces);\n\n        case 3:\n          response = _context.sent;\n\n          if (!(response.code === 200)) {\n            _context.next = 9;\n            break;\n          }\n\n          _context.next = 7;\n          return put(showAllProvinces(response === null || response === void 0 ? void 0 : response.data));\n\n        case 7:\n          _context.next = 10;\n          break;\n\n        case 9:\n          console.error(\"Error in province saga\");\n\n        case 10:\n          _context.next = 15;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(\"Error in province saga:\", _context.t0);\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 12]]);\n}\n\nfunction addProvincesSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function addProvincesSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(addProvincesApi, action.payload);\n\n        case 3:\n          response = _context2.sent;\n\n          if (!(response && response.code === 200)) {\n            _context2.next = 9;\n            break;\n          }\n\n          _context2.next = 7;\n          return put(addProvinces(response.data));\n\n        case 7:\n          _context2.next = 10;\n          break;\n\n        case 9:\n          toast.error(\"Không thể thêm thành phố\");\n\n        case 10:\n          _context2.next = 15;\n          break;\n\n        case 12:\n          _context2.prev = 12;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(\"Something Wrong With Saga!\", _context2.t0);\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 12]]);\n}\n\nexport default function provincesSaga() {\n  return _regeneratorRuntime.wrap(function provincesSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeEvery(\"ALL_PROVINCES_REQUEST\", getAllProvincesSaga);\n\n        case 2:\n          _context3.next = 4;\n          return takeEvery(\"ADD_PROVINCES_REQUEST\", addProvincesSaga);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/redux/sagas/ProvincesSaga/ProvinceSaga.js"],"names":["getAllProvincesSaga","addProvincesSaga","provincesSaga","call","takeEvery","put","addProvincesApi","getAllProvinces","addProvinces","showAllProvinces","toast","response","code","data","console","error","action","payload"],"mappings":";;oDAOUA,mB;qDAYAC,gB;qDAYeC,a;;AA/BzB,SAASC,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,eAAjD;AACA,SACEC,YADF,EAEEC,gBAFF,QAGO,oCAHP;AAIA,SAASC,KAAT,QAAsB,gBAAtB;;AACA,SAAUV,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEqB,iBAAMG,IAAI,CAACI,eAAD,CAAV;;AAFrB;AAEUI,UAAAA,QAFV;;AAAA,gBAGQA,QAAQ,CAACC,IAAT,KAAkB,GAH1B;AAAA;AAAA;AAAA;;AAAA;AAIM,iBAAMP,GAAG,CAACI,gBAAgB,CAACE,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEE,IAAX,CAAjB,CAAT;;AAJN;AAAA;AAAA;;AAAA;AAMMC,UAAAA,OAAO,CAACC,KAAR,CAAc,wBAAd;;AANN;AAAA;AAAA;;AAAA;AAAA;AAAA;AASID,UAAAA,OAAO,CAACC,KAAR,CAAc,yBAAd;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,SAAUd,gBAAV,CAA2Be,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEqB,iBAAMb,IAAI,CAACG,eAAD,EAAkBU,MAAM,CAACC,OAAzB,CAAV;;AAFrB;AAEUN,UAAAA,QAFV;;AAAA,gBAGQA,QAAQ,IAAIA,QAAQ,CAACC,IAAT,KAAkB,GAHtC;AAAA;AAAA;AAAA;;AAAA;AAIM,iBAAMP,GAAG,CAACG,YAAY,CAACG,QAAQ,CAACE,IAAV,CAAb,CAAT;;AAJN;AAAA;AAAA;;AAAA;AAMMH,UAAAA,KAAK,CAACK,KAAN,CAAY,6BAAZ;;AANN;AAAA;AAAA;;AAAA;AAAA;AAAA;AASID,UAAAA,OAAO,CAACC,KAAR,CAAc,4BAAd;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,eAAe,SAAUb,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAME,SAAS,CAAC,uBAAD,EAA0BJ,mBAA1B,CAAf;;AADa;AAAA;AAEb,iBAAMI,SAAS,CAAC,uBAAD,EAA0BH,gBAA1B,CAAf;;AAFa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, takeEvery, put } from \"redux-saga/effects\";\r\nimport { addProvincesApi, getAllProvinces } from \"./ProvicesApi\";\r\nimport {\r\n  addProvinces,\r\n  showAllProvinces,\r\n} from \"app/redux/reducers/ProvinceReduces\";\r\nimport { toast } from \"react-toastify\";\r\nfunction* getAllProvincesSaga() {\r\n  try {\r\n    const response = yield call(getAllProvinces);\r\n    if (response.code === 200) {\r\n      yield put(showAllProvinces(response?.data));\r\n    } else {\r\n      console.error(\"Error in province saga\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error in province saga:\", error);\r\n  }\r\n}\r\nfunction* addProvincesSaga(action) {\r\n  try {\r\n    const response = yield call(addProvincesApi, action.payload);\r\n    if (response && response.code === 200) {\r\n      yield put(addProvinces(response.data));\r\n    } else {\r\n      toast.error(\"Không thể thêm thành phố\");\r\n    }\r\n  } catch (e) {\r\n    console.error(\"Something Wrong With Saga!\", e);\r\n  }\r\n}\r\nexport default function* provincesSaga() {\r\n  yield takeEvery(\"ALL_PROVINCES_REQUEST\", getAllProvincesSaga);\r\n  yield takeEvery(\"ADD_PROVINCES_REQUEST\", addProvincesSaga);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}