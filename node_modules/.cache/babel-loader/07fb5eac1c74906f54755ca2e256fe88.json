{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getAllDistrictSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(addDistrictsSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(updateDistrictSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(deleteDistrictSaga),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(searchDistrictSaga),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(districtSaga);\n\nimport { call, takeEvery, put } from \"redux-saga/effects\";\nimport { addDistrictsApi, deleteDistrictsApi, getAllDistrictApi, searchDistrictsApi, updateDistrictsApi } from \"./DistrictApi\";\nimport { addDistrictReducer, deleteDistrictsReducer, getAllDistrictReducer, searchDistrictReducer, updateDistrictReducer } from \"app/redux/reducers/DistrictReducer\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { SUCCESS_CODE, typeDistricts } from \"app/redux/constants\";\ntoast.configure({\n  autoClose: 1500,\n  draggable: false,\n  limit: 3\n});\n\nfunction getAllDistrictSaga() {\n  var response;\n  return _regeneratorRuntime.wrap(function getAllDistrictSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(getAllDistrictApi);\n\n        case 3:\n          response = _context.sent;\n\n          if (!(response.code === SUCCESS_CODE)) {\n            _context.next = 9;\n            break;\n          }\n\n          _context.next = 7;\n          return put(getAllDistrictReducer(response === null || response === void 0 ? void 0 : response.data));\n\n        case 7:\n          _context.next = 10;\n          break;\n\n        case 9:\n          console.error(\"Error in provinces saga\");\n\n        case 10:\n          _context.next = 15;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(\"Error in provinces saga:\", _context.t0);\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 12]]);\n}\n\nfunction addDistrictsSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function addDistrictsSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(addDistrictsApi, action.payload);\n\n        case 3:\n          response = _context2.sent;\n\n          if (!(response && response.code === SUCCESS_CODE)) {\n            _context2.next = 10;\n            break;\n          }\n\n          _context2.next = 7;\n          return put(addDistrictReducer(response === null || response === void 0 ? void 0 : response.data));\n\n        case 7:\n          toast.success(\"Thêm thành công\");\n          _context2.next = 11;\n          break;\n\n        case 10:\n          toast.error(\"Thêm thất bại\");\n\n        case 11:\n          _context2.next = 16;\n          break;\n\n        case 13:\n          _context2.prev = 13;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(\"Something Wrong With Saga\", _context2.t0);\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 13]]);\n}\n\nfunction updateDistrictSaga(action) {\n  var response, _response$data;\n\n  return _regeneratorRuntime.wrap(function updateDistrictSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(updateDistrictsApi, action.id, action.data);\n\n        case 3:\n          response = _context3.sent;\n\n          if (!(response && response.data && response.data.code === SUCCESS_CODE)) {\n            _context3.next = 10;\n            break;\n          }\n\n          _context3.next = 7;\n          return put(updateDistrictReducer(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data));\n\n        case 7:\n          toast.success(\"Sửa thành công!\");\n          _context3.next = 11;\n          break;\n\n        case 10:\n          toast.error(\"Sửa thất bại!\");\n\n        case 11:\n          _context3.next = 16;\n          break;\n\n        case 13:\n          _context3.prev = 13;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n\n        case 16:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 13]]);\n}\n\nfunction deleteDistrictSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function deleteDistrictSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(deleteDistrictsApi, action.payload);\n\n        case 3:\n          response = _context4.sent;\n\n          if (!(response && response.code === SUCCESS_CODE)) {\n            _context4.next = 10;\n            break;\n          }\n\n          _context4.next = 7;\n          return put(deleteDistrictsReducer(action.payload));\n\n        case 7:\n          toast.success(\"Xóa thành công\");\n          _context4.next = 11;\n          break;\n\n        case 10:\n          toast.error(\"xóa thất bại\");\n\n        case 11:\n          _context4.next = 16;\n          break;\n\n        case 13:\n          _context4.prev = 13;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.error(_context4.t0);\n\n        case 16:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 13]]);\n}\n\nfunction searchDistrictSaga(action) {\n  var response, _response$data2;\n\n  return _regeneratorRuntime.wrap(function searchDistrictSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(searchDistrictsApi, action.payload);\n\n        case 3:\n          response = _context5.sent;\n\n          if (!(response && response.code === SUCCESS_CODE)) {\n            _context5.next = 7;\n            break;\n          }\n\n          _context5.next = 7;\n          return put(searchDistrictReducer(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.content));\n\n        case 7:\n          _context5.next = 12;\n          break;\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(\"Error from Saga!\");\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 9]]);\n}\n\nfuntion * getDistrictsByProvinces();\nexport default function districtSaga() {\n  return _regeneratorRuntime.wrap(function districtSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(typeDistricts.GET_ALL_DISTRICT_SAGA_REQUEST, getAllDistrictSaga);\n\n        case 2:\n          _context6.next = 4;\n          return takeEvery(typeDistricts.ADD_DISTRICT_REQUEST, addDistrictsSaga);\n\n        case 4:\n          _context6.next = 6;\n          return takeEvery(typeDistricts.UPDATE_DISTRICT_REQUEST, updateDistrictSaga);\n\n        case 6:\n          _context6.next = 8;\n          return takeEvery(typeDistricts.DELETE_DISTRICT_REQUEST, deleteDistrictSaga);\n\n        case 8:\n          _context6.next = 10;\n          return takeEvery(typeDistricts.SEARCH_DISTRICT_REQUEST, searchDistrictSaga);\n\n        case 10:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/redux/sagas/DistrictSaga/DistrictSaga.js"],"names":["getAllDistrictSaga","addDistrictsSaga","updateDistrictSaga","deleteDistrictSaga","searchDistrictSaga","districtSaga","call","takeEvery","put","addDistrictsApi","deleteDistrictsApi","getAllDistrictApi","searchDistrictsApi","updateDistrictsApi","addDistrictReducer","deleteDistrictsReducer","getAllDistrictReducer","searchDistrictReducer","updateDistrictReducer","toast","SUCCESS_CODE","typeDistricts","configure","autoClose","draggable","limit","response","code","data","console","error","action","payload","success","id","content","funtion","getDistrictsByProvinces","GET_ALL_DISTRICT_SAGA_REQUEST","ADD_DISTRICT_REQUEST","UPDATE_DISTRICT_REQUEST","DELETE_DISTRICT_REQUEST","SEARCH_DISTRICT_REQUEST"],"mappings":"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","sourcesContent":["import { call, takeEvery, put } from \"redux-saga/effects\";\r\nimport {\r\n  addDistrictsApi,\r\n  deleteDistrictsApi,\r\n  getAllDistrictApi,\r\n  searchDistrictsApi,\r\n  updateDistrictsApi,\r\n} from \"./DistrictApi\";\r\nimport {\r\n  addDistrictReducer,\r\n  deleteDistrictsReducer,\r\n  getAllDistrictReducer,\r\n  searchDistrictReducer,\r\n  updateDistrictReducer,\r\n} from \"app/redux/reducers/DistrictReducer\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { SUCCESS_CODE, typeDistricts } from \"app/redux/constants\";\r\ntoast.configure({\r\n  autoClose: 1500,\r\n  draggable: false,\r\n  limit: 3,\r\n});\r\n\r\nfunction* getAllDistrictSaga() {\r\n  try {\r\n    const response = yield call(getAllDistrictApi);\r\n    if (response.code === SUCCESS_CODE) {\r\n      yield put(getAllDistrictReducer(response?.data));\r\n    } else {\r\n      console.error(\"Error in provinces saga\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error in provinces saga:\", error);\r\n  }\r\n}\r\nfunction* addDistrictsSaga(action) {\r\n  try {\r\n    const response = yield call(addDistrictsApi, action.payload);\r\n    if (response && response.code === SUCCESS_CODE) {\r\n      yield put(addDistrictReducer(response?.data));\r\n      toast.success(\"Thêm thành công\");\r\n    } else {\r\n      toast.error(\"Thêm thất bại\");\r\n    }\r\n  } catch (e) {\r\n    console.error(\"Something Wrong With Saga\", e);\r\n  }\r\n}\r\nfunction* updateDistrictSaga(action) {\r\n  try {\r\n    const response = yield call(updateDistrictsApi, action.id, action.data);\r\n    if (response && response.data && response.data.code === SUCCESS_CODE) {\r\n      yield put(updateDistrictReducer(response?.data?.data));\r\n      toast.success(\"Sửa thành công!\");\r\n    } else {\r\n      toast.error(\"Sửa thất bại!\");\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\nfunction* deleteDistrictSaga(action) {\r\n  try {\r\n    const response = yield call(deleteDistrictsApi, action.payload);\r\n    if (response && response.code === SUCCESS_CODE) {\r\n      yield put(deleteDistrictsReducer(action.payload));\r\n      toast.success(\"Xóa thành công\");\r\n    } else {\r\n      toast.error(\"xóa thất bại\");\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\nfunction* searchDistrictSaga(action) {\r\n  try {\r\n    const response = yield call(searchDistrictsApi, action.payload);\r\n    if (response && response.code === SUCCESS_CODE) {\r\n      yield put(searchDistrictReducer(response?.data?.content));\r\n    }\r\n  } catch (e) {\r\n    console.error(\"Error from Saga!\");\r\n  }\r\n}\r\nfuntion* getDistrictsByProvinces()\r\nexport default function* districtSaga() {\r\n  yield takeEvery(\r\n    typeDistricts.GET_ALL_DISTRICT_SAGA_REQUEST,\r\n    getAllDistrictSaga\r\n  );\r\n  yield takeEvery(typeDistricts.ADD_DISTRICT_REQUEST, addDistrictsSaga);\r\n  yield takeEvery(typeDistricts.UPDATE_DISTRICT_REQUEST, updateDistrictSaga);\r\n  yield takeEvery(typeDistricts.DELETE_DISTRICT_REQUEST, deleteDistrictSaga);\r\n  yield takeEvery(typeDistricts.SEARCH_DISTRICT_REQUEST, searchDistrictSaga);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}