{"ast":null,"code":"import _objectSpread from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nvar initialState = {\n  district: [],\n  reload: false,\n  [\"reload\"]: false,\n  success: true,\n  error: null\n};\nvar DistrictSlide = createSlice({\n  name: \"district\",\n  initialState: initialState,\n  reducers: {\n    getAllDistrict: function getAllDistrict(state, action) {\n      console.log(\"showAllDistrict action.payload:\", action.payload);\n      state.district = action.payload;\n    },\n    addDistrictSaga: function addDistrictSaga(state, action) {\n      state.district = [].concat(_toConsumableArray(state.district), [action.payload]);\n    },\n    updateDistrictSaga: function updateDistrictSaga(state, action) {\n      var _action$payload = action.payload,\n          id = _action$payload.id,\n          updateState = _action$payload.updateState;\n      var index = state.district.findIndex(function (district) {\n        return district.id === id;\n      });\n\n      if (index !== -1) {\n        state.district[index] = _objectSpread(_objectSpread({}, state.district[index]), updateState);\n      }\n    }\n  }\n});\nvar _DistrictSlide$action = DistrictSlide.actions,\n    getAllDistrict = _DistrictSlide$action.getAllDistrict,\n    addDistrictSaga = _DistrictSlide$action.addDistrictSaga,\n    updateDistrictSaga = _DistrictSlide$action.updateDistrictSaga;\nexport { getAllDistrict, addDistrictSaga, updateDistrictSaga };\nexport default DistrictSlide.reducer;","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/redux/reducers/DistrictReducer.js"],"names":["createSlice","initialState","district","reload","success","error","DistrictSlide","name","reducers","getAllDistrict","state","action","console","log","payload","addDistrictSaga","updateDistrictSaga","id","updateState","index","findIndex","actions","reducer"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,MAAM,EAAE,KAFW;AAGnB,cAAQ,KAHW;AAInBC,EAAAA,OAAO,EAAE,IAJU;AAKnBC,EAAAA,KAAK,EAAE;AALY,CAArB;AAOA,IAAMC,aAAa,GAAGN,WAAW,CAAC;AAChCO,EAAAA,IAAI,EAAE,UAD0B;AAEhCN,EAAAA,YAAY,EAAZA,YAFgC;AAGhCO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,cAAc,EAAE,wBAACC,KAAD,EAAQC,MAAR,EAAmB;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,MAAM,CAACG,OAAtD;AACAJ,MAAAA,KAAK,CAACR,QAAN,GAAiBS,MAAM,CAACG,OAAxB;AACD,KAJO;AAKRC,IAAAA,eAAe,EAAE,yBAACL,KAAD,EAAQC,MAAR,EAAmB;AAClCD,MAAAA,KAAK,CAACR,QAAN,gCAAqBQ,KAAK,CAACR,QAA3B,IAAqCS,MAAM,CAACG,OAA5C;AACD,KAPO;AAQRE,IAAAA,kBAAkB,EAAE,4BAACN,KAAD,EAAQC,MAAR,EAAmB;AAAA,4BACTA,MAAM,CAACG,OADE;AAAA,UAC7BG,EAD6B,mBAC7BA,EAD6B;AAAA,UACzBC,WADyB,mBACzBA,WADyB;AAErC,UAAMC,KAAK,GAAGT,KAAK,CAACR,QAAN,CAAekB,SAAf,CAAyB,UAAClB,QAAD;AAAA,eAAcA,QAAQ,CAACe,EAAT,KAAgBA,EAA9B;AAAA,OAAzB,CAAd;;AACA,UAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBT,QAAAA,KAAK,CAACR,QAAN,CAAeiB,KAAf,oCACKT,KAAK,CAACR,QAAN,CAAeiB,KAAf,CADL,GAEKD,WAFL;AAID;AACF;AAjBO;AAHsB,CAAD,CAAjC;4BAwBEZ,aAAa,CAACe,O;IADDZ,c,yBAAAA,c;IAAgBM,e,yBAAAA,e;IAAiBC,kB,yBAAAA,kB;;AAEhD,eAAeV,aAAa,CAACgB,OAA7B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialState = {\r\n  district: [],\r\n  reload: false,\r\n  reload: false,\r\n  success: true,\r\n  error: null,\r\n};\r\nconst DistrictSlide = createSlice({\r\n  name: \"district\",\r\n  initialState,\r\n  reducers: {\r\n    getAllDistrict: (state, action) => {\r\n      console.log(\"showAllDistrict action.payload:\", action.payload);\r\n      state.district = action.payload;\r\n    },\r\n    addDistrictSaga: (state, action) => {\r\n      state.district = [...state.district, action.payload];\r\n    },\r\n    updateDistrictSaga: (state, action) => {\r\n      const { id, updateState } = action.payload;\r\n      const index = state.district.findIndex((district) => district.id === id);\r\n      if (index !== -1) {\r\n        state.district[index] = {\r\n          ...state.district[index],\r\n          ...updateState,\r\n        };\r\n      }\r\n    },\r\n  },\r\n});\r\nexport const { getAllDistrict, addDistrictSaga, updateDistrictSaga } =\r\n  DistrictSlide.actions;\r\nexport default DistrictSlide.reducer;\r\n"]},"metadata":{},"sourceType":"module"}