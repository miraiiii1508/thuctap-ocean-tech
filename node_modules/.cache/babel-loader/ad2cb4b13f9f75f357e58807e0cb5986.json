{"ast":null,"code":"import _toConsumableArray from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\src\\\\app\\\\views\\\\Staff\\\\ManagerEmployeeDialog.jsx\";\n\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, FormControl, MenuItem, Grid, IconButton, makeStyles, Icon } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport React, { useEffect, useState } from \"react\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport { SelectValidator, TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllProvincesAction, getDistrictByProvinces } from \"app/redux/actions/LocationAction\";\nimport { addEmployeeAction, updateEmployeeAction } from \"app/redux/actions/EmployeesAction\";\nimport MaterialTable from \"material-table\";\nimport CertificateDialog from \"./CertificateDialog\";\nvar useStyles = makeStyles({\n  colorStyle: {\n    color: \"red\"\n  },\n  iconClose: {\n    position: \"absolute\",\n    right: 8,\n    top: 8\n  }\n});\n\nvar ManagerEmployeeDialog = function ManagerEmployeeDialog(_ref) {\n  var _employeeFormData$cer;\n\n  var open = _ref.open,\n      onClose = _ref.onClose,\n      employees = _ref.employees;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.provinces;\n  }),\n      provinces = _useSelector.provinces,\n      districtsByProvince = _useSelector.districtsByProvince;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.district;\n  }),\n      wardsByDistrict = _useSelector2.wardsByDistrict;\n\n  var _useState = useState({\n    code: \"\",\n    name: \"\",\n    email: \"\",\n    age: \"\",\n    phone: \"\",\n    certificates: [],\n    provinceId: \"\",\n    districtId: \"\",\n    wardsId: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      employeeFormData = _useState2[0],\n      setEmployeeFormData = _useState2[1];\n\n  var dataTable = provinces.map(function (province) {\n    return _objectSpread({}, province);\n  });\n  var dataDistrict = districtsByProvince.map(function (district) {\n    return _objectSpread({}, district);\n  });\n  var dataWards = wardsByDistrict.map(function (ward) {\n    return _objectSpread({}, ward);\n  });\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openCertificateDialog = _useState4[0],\n      setOpenCertificateDialog = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      provinceValue = _useState6[0],\n      setProvinceValue = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      districtValue = _useState8[0],\n      setDistrictValue = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      wardValue = _useState10[0],\n      setWardValue = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      certificate = _useState12[0],\n      setCertificate = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      certificateId = _useState14[0],\n      setCertificateId = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      statusForm = _useState16[0],\n      setStatusForm = _useState16[1];\n\n  var dataCertificate = (_employeeFormData$cer = employeeFormData.certificates) === null || _employeeFormData$cer === void 0 ? void 0 : _employeeFormData$cer.map(function (certificate) {\n    return _objectSpread({}, certificate);\n  });\n  useEffect(function () {\n    if (employees && Object.keys(employees).length > 0) {\n      setEmployeeFormData(employees);\n      setProvinceValue(employees.provinceId);\n      setDistrictValue(employees.districtId);\n      setWardValue(employees.wardsId);\n    }\n\n    if (employees && employees.id) {\n      setStatusForm(\"UPDATE\");\n    } else {\n      setStatusForm(\"ADD\");\n    }\n  }, [employees]);\n\n  var getProvinceArea = function getProvinceArea() {\n    dispatch(getAllProvincesAction());\n  };\n\n  useEffect(function () {\n    getProvinceArea();\n  }, []);\n  useEffect(function () {\n    if (provinceValue) {\n      dispatch(getDistrictByProvinces(provinceValue));\n    }\n  }, [dispatch, provinceValue]);\n  useEffect(function () {\n    if (districtValue) {\n      dispatch({\n        type: \"TEST\",\n        payload: districtValue\n      });\n    }\n  }, [dispatch, districtValue]);\n\n  var handleOnchange = function handleOnchange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n\n    var updatedFormData = _objectSpread({}, employeeFormData);\n\n    if (name === \"provinceId\") {\n      setProvinceValue(value);\n      setDistrictValue(\"\");\n      updatedFormData = _objectSpread(_objectSpread({}, updatedFormData), {}, {\n        provinceId: value,\n        districtId: \"\",\n        wardsId: \"\"\n      });\n    } else if (name === \"districtId\") {\n      setDistrictValue(value);\n      updatedFormData = _objectSpread(_objectSpread({}, updatedFormData), {}, {\n        districtId: value,\n        wardsId: \"\"\n      });\n    } else {\n      updatedFormData = _objectSpread(_objectSpread({}, updatedFormData), {}, {\n        [name]: value\n      });\n    }\n\n    setEmployeeFormData(updatedFormData);\n    console.log(employeeFormData.districtId);\n  };\n\n  var handleCloseDialog = function handleCloseDialog() {\n    setEmployeeFormData({});\n    onClose();\n  };\n\n  var handleAddNewEmployees = function handleAddNewEmployees() {\n    dispatch(addEmployeeAction(employeeFormData));\n    handleCloseDialog();\n  };\n\n  var handUpdateEmployee = function handUpdateEmployee() {\n    dispatch(updateEmployeeAction(employeeFormData.id, employeeFormData));\n    handleCloseDialog();\n  };\n\n  var handleSubmit = function handleSubmit() {\n    switch (statusForm) {\n      case \"ADD\":\n        handleAddNewEmployees();\n        break;\n\n      case \"UPDATE\":\n        handUpdateEmployee();\n        break;\n\n      default:\n        break;\n    }\n  }; ///Certificate\n\n\n  var handleOpenCertificateDialog = function handleOpenCertificateDialog() {\n    setOpenCertificateDialog(true);\n  };\n\n  var handleCloseCertificateDialog = function handleCloseCertificateDialog() {\n    setOpenCertificateDialog(false);\n  };\n\n  var handleAddCertificate = function handleAddCertificate(data) {\n    setEmployeeFormData(_objectSpread(_objectSpread({}, employeeFormData), {}, {\n      certificates: [].concat(_toConsumableArray(employeeFormData.certificates), [data])\n    }));\n  };\n\n  var handleUpdateCertificateDialog = function handleUpdateCertificateDialog(data) {\n    setCertificate(data);\n    handleOpenCertificateDialog();\n  };\n\n  var handleUpdateCertificate = function handleUpdateCertificate(dataUpdate) {\n    var id = dataUpdate.id,\n        data = dataUpdate.data;\n    var index = employeeFormData.certificates.findIndex(certificate);\n  };\n\n  var columns = [{\n    title: \"Thao tác\",\n    field: \"custom\",\n    width: \"150\",\n    cellStyle: {\n      padding: \"0\",\n      margin: \"0\"\n    },\n    render: function render(row) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"primary\",\n        onClick: function onClick() {\n          return handleUpdateCertificateDialog(row);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }\n      }, \"edit\")), /*#__PURE__*/React.createElement(IconButton, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }\n      }, \"delete\")));\n    }\n  }, {\n    field: \"code\",\n    title: \"Mã chứng chỉ\"\n  }, {\n    field: \"name\",\n    title: \"Tên chứng chỉ\"\n  }, {\n    field: \"effectiveDate\",\n    title: \"Ngày đăng ký\"\n  }, {\n    field: \"expirationDate\",\n    title: \"Ngày hết hạn\"\n  }, {\n    field: \"provinceId\",\n    title: \"Nơi cấp\",\n    render: function render(rowData) {\n      var _provinces$find;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 9\n        }\n      }, rowData.provinceId ? (_provinces$find = provinces.find(function (value) {\n        return value.id === rowData.provinceId;\n      })) === null || _provinces$find === void 0 ? void 0 : _provinces$find.name : \"\");\n    }\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: onClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    maxWidth: \"md\",\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mb-20 styleColor\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, ((employeeFormData === null || employeeFormData === void 0 ? void 0 : employeeFormData.id) ? t(\"general.update\") : t(\"Add\")) + \" \" + t(\"Nhân Viên\")), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.iconClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    color: \"error\",\n    onClick: onClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ValidatorForm, {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"mb-8\",\n    container: true,\n    spacing: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 6,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-8\",\n    name: \"code\",\n    value: employeeFormData.code || \"\",\n    onChange: handleOnchange,\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 23\n      }\n    }, \" * \"), \"M\\xE3 nh\\xE2n vi\\xEAn\"),\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng nhập mã Nhân Viên\"],\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 6,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-8\",\n    name: \"name\",\n    value: employeeFormData.name || \" \",\n    onChange: handleOnchange,\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 23\n      }\n    }, \" * \"), \"H\\u1ECD V\\xE0 T\\xEAn\"),\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng nhập mã Phường/Xã\"],\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-8\",\n    name: \"age\",\n    value: employeeFormData.age || \"\",\n    type: \"number\",\n    onChange: handleOnchange,\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 23\n      }\n    }, \" * \"), \"Tu\\u1ED5i\"),\n    fullWidth: true,\n    validators: [\"required\", \"minNumber:0\", \"maxNumber:100\"],\n    errorMessages: [\"Vui lòng nhập tuổi \", \"Tuổi không được âm\", \"Nhập sai tuổi\"],\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-8\",\n    name: \"phone\",\n    type: \"number\",\n    value: employeeFormData.phone || \"\",\n    onChange: handleOnchange,\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 23\n      }\n    }, \" * \"), \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"),\n    fullWidth: true,\n    validators: [\"required\", \"minNumber:0\"],\n    errorMessages: [\"Vui lòng nhập diện tích\", \"Diện tích không được âm\"],\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-8\",\n    name: \"email\",\n    value: employeeFormData.email || \"\",\n    onChange: handleOnchange,\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 23\n      }\n    }, \" * \"), \"Email\"),\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng nhập diện tích\"],\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectValidator, {\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 25\n      }\n    }, \" * \"), \"Th\\xE0nh Ph\\u1ED1\"),\n    name: \"provinceId\",\n    value: (employeeFormData === null || employeeFormData === void 0 ? void 0 : employeeFormData.provinceId) || null,\n    onChange: handleOnchange,\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng chọn Quận/Huyện\"],\n    className: \"w-100 mb-8\",\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 19\n    }\n  }, dataTable.map(function (province) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      value: province.id,\n      key: province.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 23\n      }\n    }, province.name);\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectValidator, {\n    name: \"districtId\",\n    value: (employeeFormData === null || employeeFormData === void 0 ? void 0 : employeeFormData.districtId) || null,\n    onChange: handleOnchange,\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 25\n      }\n    }, \" * \"), \"Qu\\u1EADn/Huy\\u1EC7n\"),\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng chọn Quận/Huyện\"],\n    className: \"w-100 mb-8\",\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 19\n    }\n  }, dataDistrict.map(function (district) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      value: district.id,\n      key: district.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 23\n      }\n    }, district.name);\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectValidator, {\n    name: \"wardsId\",\n    value: (employeeFormData === null || employeeFormData === void 0 ? void 0 : employeeFormData.wardsId) || null,\n    onChange: handleOnchange,\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 25\n      }\n    }, \" * \"), \"Ph\\u01B0\\u1EDDng/X\\xE3\"),\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng chọn Quận/Huyện\"],\n    className: \"w-100 mb-8\",\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 19\n    }\n  }, dataWards.map(function (ward) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      value: ward.id,\n      key: ward.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 23\n      }\n    }, ward.name);\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 6,\n    md: 6,\n    sm: 12,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mt-8 mb-8\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: function onClick() {\n      handleOpenCertificateDialog();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 15\n    }\n  }, \"Thêm chứng chỉ\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    columns: columns,\n    data: dataCertificate,\n    options: {\n      search: false,\n      sorting: true,\n      paging: true,\n      filtering: false,\n      toolbar: false,\n      header: true,\n      headerStyle: {\n        backgroundColor: \"#358600\",\n        color: \"#fff\"\n      },\n      padding: \"dense\",\n      maxBodyHeight: \"250px\",\n      minBodyHeight: \"200px\"\n    },\n    localization: {\n      body: {\n        emptyDataSourceMessage: \"Không có văn bằng\"\n      },\n      pagination: {\n        labelRowsSelect: \"B\\u1EA3n ghi\",\n        labelDisplayedRows: \"{from}-{to} trong {count}\",\n        firstTooltip: \"Trang đầu\",\n        previousTooltip: \"Trang trước\",\n        nextTooltip: \"Trang tiếp\",\n        lastTooltip: \"Trang cuối\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(DialogActions, {\n    style: {\n      justifyContent: \"center\"\n    },\n    spacing: 4,\n    className: \"flex flex-end flex-middle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: onClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 13\n    }\n  }, t(\"general.cancel\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 13\n    }\n  }, (employeeFormData === null || employeeFormData === void 0 ? void 0 : employeeFormData.id) ? t(\"general.update\") : t(\"general.save\"))))), openCertificateDialog && /*#__PURE__*/React.createElement(CertificateDialog, {\n    handleCloseCertificateDialog: handleCloseCertificateDialog,\n    certificate: certificate,\n    openDialog: openCertificateDialog,\n    handleAddCertificate: handleAddCertificate,\n    handleUpdateCertificate: handleUpdateCertificate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default ManagerEmployeeDialog;","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/views/Staff/ManagerEmployeeDialog.jsx"],"names":["Button","Dialog","DialogTitle","DialogContent","DialogActions","FormControl","MenuItem","Grid","IconButton","makeStyles","Icon","useTranslation","React","useEffect","useState","Close","CloseIcon","SelectValidator","TextValidator","ValidatorForm","useDispatch","useSelector","getAllProvincesAction","getDistrictByProvinces","addEmployeeAction","updateEmployeeAction","MaterialTable","CertificateDialog","useStyles","colorStyle","color","iconClose","position","right","top","ManagerEmployeeDialog","open","onClose","employees","classes","t","dispatch","state","provinces","districtsByProvince","district","wardsByDistrict","code","name","email","age","phone","certificates","provinceId","districtId","wardsId","employeeFormData","setEmployeeFormData","dataTable","map","province","dataDistrict","dataWards","ward","openCertificateDialog","setOpenCertificateDialog","provinceValue","setProvinceValue","districtValue","setDistrictValue","wardValue","setWardValue","certificate","setCertificate","certificateId","setCertificateId","statusForm","setStatusForm","dataCertificate","Object","keys","length","id","getProvinceArea","type","payload","handleOnchange","e","target","value","updatedFormData","console","log","handleCloseDialog","handleAddNewEmployees","handUpdateEmployee","handleSubmit","handleOpenCertificateDialog","handleCloseCertificateDialog","handleAddCertificate","data","handleUpdateCertificateDialog","handleUpdateCertificate","dataUpdate","index","findIndex","columns","title","field","width","cellStyle","padding","margin","render","row","rowData","find","search","sorting","paging","filtering","toolbar","header","headerStyle","backgroundColor","maxBodyHeight","minBodyHeight","body","emptyDataSourceMessage","pagination","labelRowsSelect","labelDisplayedRows","firstTooltip","previousTooltip","nextTooltip","lastTooltip","justifyContent"],"mappings":"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","sourcesContent":["import {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  FormControl,\r\n  MenuItem,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Icon,\r\n} from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\nimport {\r\n  SelectValidator,\r\n  TextValidator,\r\n  ValidatorForm,\r\n} from \"react-material-ui-form-validator\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getAllProvincesAction,\r\n  getDistrictByProvinces,\r\n} from \"app/redux/actions/LocationAction\";\r\nimport {\r\n  addEmployeeAction,\r\n  updateEmployeeAction,\r\n} from \"app/redux/actions/EmployeesAction\";\r\nimport MaterialTable from \"material-table\";\r\nimport CertificateDialog from \"./CertificateDialog\";\r\nconst useStyles = makeStyles({\r\n  colorStyle: {\r\n    color: \"red\",\r\n  },\r\n  iconClose: {\r\n    position: \"absolute\",\r\n    right: 8,\r\n    top: 8,\r\n  },\r\n});\r\nconst ManagerEmployeeDialog = ({ open, onClose, employees }) => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const { provinces, districtsByProvince } = useSelector(\r\n    (state) => state.provinces\r\n  );\r\n  const { wardsByDistrict } = useSelector((state) => state.district);\r\n  const [employeeFormData, setEmployeeFormData] = useState({\r\n    code: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    age: \"\",\r\n    phone: \"\",\r\n    certificates: [],\r\n    provinceId: \"\",\r\n    districtId: \"\",\r\n    wardsId: \"\",\r\n  });\r\n  const dataTable = provinces.map((province) => ({ ...province }));\r\n  const dataDistrict = districtsByProvince.map((district) => ({\r\n    ...district,\r\n  }));\r\n  const dataWards = wardsByDistrict.map((ward) => ({ ...ward }));\r\n  const [openCertificateDialog, setOpenCertificateDialog] = useState(false);\r\n  const [provinceValue, setProvinceValue] = useState(\"\");\r\n  const [districtValue, setDistrictValue] = useState(\"\");\r\n  const [wardValue, setWardValue] = useState(\"\");\r\n  const [certificate, setCertificate] = useState({});\r\n  const [certificateId, setCertificateId] = useState(\"\");\r\n  const [statusForm, setStatusForm] = useState(\"\");\r\n  const dataCertificate = employeeFormData.certificates?.map((certificate) => ({\r\n    ...certificate,\r\n  }));\r\n  useEffect(() => {\r\n    if (employees && Object.keys(employees).length > 0) {\r\n      setEmployeeFormData(employees);\r\n      setProvinceValue(employees.provinceId);\r\n      setDistrictValue(employees.districtId);\r\n      setWardValue(employees.wardsId);\r\n    }\r\n    if (employees && employees.id) {\r\n      setStatusForm(\"UPDATE\");\r\n    } else {\r\n      setStatusForm(\"ADD\");\r\n    }\r\n  }, [employees]);\r\n  const getProvinceArea = () => {\r\n    dispatch(getAllProvincesAction());\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProvinceArea();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (provinceValue) {\r\n      dispatch(getDistrictByProvinces(provinceValue));\r\n    }\r\n  }, [dispatch, provinceValue]);\r\n\r\n  useEffect(() => {\r\n    if (districtValue) {\r\n      dispatch({\r\n        type: \"TEST\",\r\n        payload: districtValue,\r\n      });\r\n    }\r\n  }, [dispatch, districtValue]);\r\n  const handleOnchange = (e) => {\r\n    const { name, value } = e.target;\r\n    let updatedFormData = { ...employeeFormData };\r\n\r\n    if (name === \"provinceId\") {\r\n      setProvinceValue(value);\r\n      setDistrictValue(\"\");\r\n      updatedFormData = {\r\n        ...updatedFormData,\r\n        provinceId: value,\r\n        districtId: \"\",\r\n        wardsId: \"\",\r\n      };\r\n    } else if (name === \"districtId\") {\r\n      setDistrictValue(value);\r\n      updatedFormData = {\r\n        ...updatedFormData,\r\n        districtId: value,\r\n        wardsId: \"\",\r\n      };\r\n    } else {\r\n      updatedFormData = {\r\n        ...updatedFormData,\r\n        [name]: value,\r\n      };\r\n    }\r\n\r\n    setEmployeeFormData(updatedFormData);\r\n    console.log(employeeFormData.districtId);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setEmployeeFormData({});\r\n    onClose();\r\n  };\r\n\r\n  const handleAddNewEmployees = () => {\r\n    dispatch(addEmployeeAction(employeeFormData));\r\n    handleCloseDialog();\r\n  };\r\n\r\n  const handUpdateEmployee = () => {\r\n    dispatch(updateEmployeeAction(employeeFormData.id, employeeFormData));\r\n    handleCloseDialog();\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    switch (statusForm) {\r\n      case \"ADD\":\r\n        handleAddNewEmployees();\r\n        break;\r\n      case \"UPDATE\":\r\n        handUpdateEmployee();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  ///Certificate\r\n  const handleOpenCertificateDialog = () => {\r\n    setOpenCertificateDialog(true);\r\n  };\r\n  const handleCloseCertificateDialog = () => {\r\n    setOpenCertificateDialog(false);\r\n  };\r\n  const handleAddCertificate = (data) => {\r\n    setEmployeeFormData({\r\n      ...employeeFormData,\r\n      certificates: [...employeeFormData.certificates, data],\r\n    });\r\n  };\r\n  const handleUpdateCertificateDialog = (data) => {\r\n    setCertificate(data);\r\n    handleOpenCertificateDialog();\r\n  };\r\n  const handleUpdateCertificate = (dataUpdate) => {\r\n    const {id , data} = dataUpdate\r\n    const index = employeeFormData.certificates.findIndex((certificate))\r\n  };\r\n  const columns = [\r\n    {\r\n      title: \"Thao tác\",\r\n      field: \"custom\",\r\n      width: \"150\",\r\n      cellStyle: {\r\n        padding: \"0\",\r\n        margin: \"0\",\r\n      },\r\n      render: (row) => {\r\n        return (\r\n          <>\r\n            <IconButton>\r\n              <Icon\r\n                color=\"primary\"\r\n                onClick={() => handleUpdateCertificateDialog(row)}\r\n              >\r\n                edit\r\n              </Icon>\r\n            </IconButton>\r\n\r\n            <IconButton>\r\n              <Icon color=\"error\">delete</Icon>\r\n            </IconButton>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    { field: \"code\", title: \"Mã chứng chỉ\" },\r\n    { field: \"name\", title: \"Tên chứng chỉ\" },\r\n    { field: \"effectiveDate\", title: \"Ngày đăng ký\" },\r\n    { field: \"expirationDate\", title: \"Ngày hết hạn\" },\r\n    {\r\n      field: \"provinceId\",\r\n      title: \"Nơi cấp\",\r\n      render: (rowData) => (\r\n        <div>\r\n          {rowData.provinceId\r\n            ? provinces.find((value) => value.id === rowData.provinceId)?.name\r\n            : \"\"}\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={onClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        maxWidth={\"md\"}\r\n        fullWidth={true}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <span className=\"mb-20 styleColor\">\r\n            {(employeeFormData?.id ? t(\"general.update\") : t(\"Add\")) +\r\n              \" \" +\r\n              t(\"Nhân Viên\")}\r\n          </span>\r\n          <IconButton aria-label=\"close\" className={classes.iconClose}>\r\n            <CloseIcon color=\"error\" onClick={onClose} />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <ValidatorForm onSubmit={handleSubmit}>\r\n          <DialogContent dividers>\r\n            <Grid className=\"mb-8\" container spacing={1}>\r\n              <Grid item sm={6} xs={6}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-8\"\r\n                  name=\"code\"\r\n                  value={employeeFormData.code || \"\"}\r\n                  onChange={handleOnchange}\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Mã nhân viên\r\n                    </span>\r\n                  }\r\n                  fullWidth\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"Vui lòng nhập mã Nhân Viên\"]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={6} xs={6}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-8\"\r\n                  name=\"name\"\r\n                  value={employeeFormData.name || \" \"}\r\n                  onChange={handleOnchange}\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Họ Và Tên\r\n                    </span>\r\n                  }\r\n                  fullWidth\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"Vui lòng nhập mã Phường/Xã\"]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={4} xs={4}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-8\"\r\n                  name=\"age\"\r\n                  value={employeeFormData.age || \"\"}\r\n                  type=\"number\"\r\n                  onChange={handleOnchange}\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Tuổi\r\n                    </span>\r\n                  }\r\n                  fullWidth\r\n                  validators={[\"required\", \"minNumber:0\", \"maxNumber:100\"]}\r\n                  errorMessages={[\r\n                    \"Vui lòng nhập tuổi \",\r\n                    \"Tuổi không được âm\",\r\n                    \"Nhập sai tuổi\",\r\n                  ]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={4} xs={4}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-8\"\r\n                  name=\"phone\"\r\n                  type=\"number\"\r\n                  value={employeeFormData.phone || \"\"}\r\n                  onChange={handleOnchange}\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Số điện thoại\r\n                    </span>\r\n                  }\r\n                  fullWidth\r\n                  validators={[\"required\", \"minNumber:0\"]}\r\n                  errorMessages={[\r\n                    \"Vui lòng nhập diện tích\",\r\n                    \"Diện tích không được âm\",\r\n                  ]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={4} xs={4}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-8\"\r\n                  name=\"email\"\r\n                  value={employeeFormData.email || \"\"}\r\n                  onChange={handleOnchange}\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Email\r\n                    </span>\r\n                  }\r\n                  fullWidth\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"Vui lòng nhập diện tích\"]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={4} xs={4}>\r\n                <FormControl fullWidth={true}>\r\n                  <SelectValidator\r\n                    label={\r\n                      <span>\r\n                        <span className={classes.colorStyle}> * </span>\r\n                        Thành Phố\r\n                      </span>\r\n                    }\r\n                    name=\"provinceId\"\r\n                    value={employeeFormData?.provinceId || null}\r\n                    onChange={handleOnchange}\r\n                    validators={[\"required\"]}\r\n                    errorMessages={[\"Vui lòng chọn Quận/Huyện\"]}\r\n                    className=\"w-100 mb-8\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                  >\r\n                    {dataTable.map((province) => (\r\n                      <MenuItem value={province.id} key={province.id}>\r\n                        {province.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </SelectValidator>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item sm={4} xs={4}>\r\n                <FormControl fullWidth={true}>\r\n                  <SelectValidator\r\n                    name=\"districtId\"\r\n                    value={employeeFormData?.districtId || null}\r\n                    onChange={handleOnchange}\r\n                    label={\r\n                      <span>\r\n                        <span className={classes.colorStyle}> * </span>\r\n                        Quận/Huyện\r\n                      </span>\r\n                    }\r\n                    validators={[\"required\"]}\r\n                    errorMessages={[\"Vui lòng chọn Quận/Huyện\"]}\r\n                    className=\"w-100 mb-8\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                  >\r\n                    {dataDistrict.map((district) => (\r\n                      <MenuItem value={district.id} key={district.id}>\r\n                        {district.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </SelectValidator>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item sm={4} xs={4}>\r\n                <FormControl fullWidth={true}>\r\n                  <SelectValidator\r\n                    name=\"wardsId\"\r\n                    value={employeeFormData?.wardsId || null}\r\n                    onChange={handleOnchange}\r\n                    label={\r\n                      <span>\r\n                        <span className={classes.colorStyle}> * </span>\r\n                        Phường/Xã\r\n                      </span>\r\n                    }\r\n                    validators={[\"required\"]}\r\n                    errorMessages={[\"Vui lòng chọn Quận/Huyện\"]}\r\n                    className=\"w-100 mb-8\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                  >\r\n                    {dataWards.map((ward) => (\r\n                      <MenuItem value={ward.id} key={ward.id}>\r\n                        {ward.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </SelectValidator>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <Button\r\n                className=\"mt-8 mb-8\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  handleOpenCertificateDialog();\r\n                }}\r\n              >\r\n                {\"Thêm chứng chỉ\"}\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <MaterialTable\r\n                columns={columns}\r\n                data={dataCertificate}\r\n                options={{\r\n                  search: false,\r\n                  sorting: true,\r\n                  paging: true,\r\n                  filtering: false,\r\n                  toolbar: false,\r\n                  header: true,\r\n                  headerStyle: {\r\n                    backgroundColor: \"#358600\",\r\n                    color: \"#fff\",\r\n                  },\r\n                  padding: \"dense\",\r\n                  maxBodyHeight: \"250px\",\r\n                  minBodyHeight: \"200px\",\r\n                }}\r\n                localization={{\r\n                  body: {\r\n                    emptyDataSourceMessage: \"Không có văn bằng\",\r\n                  },\r\n                  pagination: {\r\n                    labelRowsSelect: `Bản ghi`,\r\n                    labelDisplayedRows: `{from}-{to} trong {count}`,\r\n                    firstTooltip: \"Trang đầu\",\r\n                    previousTooltip: \"Trang trước\",\r\n                    nextTooltip: \"Trang tiếp\",\r\n                    lastTooltip: \"Trang cuối\",\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions\r\n            style={{ justifyContent: \"center\" }}\r\n            spacing={4}\r\n            className=\"flex flex-end flex-middle\"\r\n          >\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={onClose}>\r\n              {t(\"general.cancel\")}\r\n            </Button>\r\n            <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n              {employeeFormData?.id ? t(\"general.update\") : t(\"general.save\")}\r\n            </Button>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n      {openCertificateDialog && (\r\n        <CertificateDialog\r\n          handleCloseCertificateDialog={handleCloseCertificateDialog}\r\n          certificate={certificate}\r\n          openDialog={openCertificateDialog}\r\n          handleAddCertificate={handleAddCertificate}\r\n          handleUpdateCertificate={handleUpdateCertificate}\r\n        ></CertificateDialog>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ManagerEmployeeDialog;\r\n"]},"metadata":{},"sourceType":"module"}