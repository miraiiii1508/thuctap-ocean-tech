{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getAllEmployeesSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(addEmployeeSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(EmployeeSaga);\n\nimport { call, put, takeEvery } from \"redux-saga/effects\";\nimport { addEmployeesApi, getAllEmployeesApi } from \"./EmployeeApi\";\nimport { SUCCESS_CODE, typeEmployee } from \"app/redux/constants\";\nimport { getAllEmployeesReducer } from \"app/redux/reducers/EmployeesReducer\";\n\nfunction getAllEmployeesSaga() {\n  var response;\n  return _regeneratorRuntime.wrap(function getAllEmployeesSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(getAllEmployeesApi);\n\n        case 3:\n          response = _context.sent;\n\n          if (!(response && response.code === SUCCESS_CODE)) {\n            _context.next = 8;\n            break;\n          }\n\n          console.log(response);\n          _context.next = 8;\n          return put(getAllEmployeesReducer(response === null || response === void 0 ? void 0 : response.data));\n\n        case 8:\n          _context.next = 13;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\n\nfunction addEmployeeSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function addEmployeeSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(addEmployeesApi, action.payload);\n\n        case 3:\n          response = _context2.sent;\n\n          if (!(response && response.code === SUCCESS_CODE)) {\n            _context2.next = 7;\n            break;\n          }\n\n          _context2.next = 7;\n          return put(addEmployeeReducer(response === null || response === void 0 ? void 0 : response.data));\n\n        case 7:\n          _context2.next = 12;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(_context2.t0);\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 9]]);\n}\n\nexport default function EmployeeSaga() {\n  return _regeneratorRuntime.wrap(function EmployeeSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeEvery(typeEmployee.GET_ALL_EMPLOYEE_REQUEST, getAllEmployeesSaga);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/redux/sagas/StaffSaga/EmployeeSaga.js"],"names":["getAllEmployeesSaga","addEmployeeSaga","EmployeeSaga","call","put","takeEvery","addEmployeesApi","getAllEmployeesApi","SUCCESS_CODE","typeEmployee","getAllEmployeesReducer","response","code","console","log","data","error","action","payload","addEmployeeReducer","GET_ALL_EMPLOYEE_REQUEST"],"mappings":";;oDAIUA,mB;qDAWAC,e;qDAUeC,Y;;AAzBzB,SAASC,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SAASC,eAAT,EAA0BC,kBAA1B,QAAoD,eAApD;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,qBAA3C;AACA,SAASC,sBAAT,QAAuC,qCAAvC;;AACA,SAAUV,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEqB,iBAAMG,IAAI,CAACI,kBAAD,CAAV;;AAFrB;AAEUI,UAAAA,QAFV;;AAAA,gBAGQA,QAAQ,IAAIA,QAAQ,CAACC,IAAT,KAAkBJ,YAHtC;AAAA;AAAA;AAAA;;AAIMK,UAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAJN;AAKM,iBAAMP,GAAG,CAACM,sBAAsB,CAACC,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEI,IAAX,CAAvB,CAAT;;AALN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIF,UAAAA,OAAO,CAACG,KAAR;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,SAAUf,eAAV,CAA0BgB,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEqB,iBAAMd,IAAI,CAACG,eAAD,EAAkBW,MAAM,CAACC,OAAzB,CAAV;;AAFrB;AAEUP,UAAAA,QAFV;;AAAA,gBAGQA,QAAQ,IAAIA,QAAQ,CAACC,IAAT,KAAkBJ,YAHtC;AAAA;AAAA;AAAA;;AAAA;AAIM,iBAAMJ,GAAG,CAACe,kBAAkB,CAACR,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEI,IAAX,CAAnB,CAAT;;AAJN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOIF,UAAAA,OAAO,CAACG,KAAR;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAe,SAAUd,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMG,SAAS,CAACI,YAAY,CAACW,wBAAd,EAAwCpB,mBAAxC,CAAf;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { addEmployeesApi, getAllEmployeesApi } from \"./EmployeeApi\";\r\nimport { SUCCESS_CODE, typeEmployee } from \"app/redux/constants\";\r\nimport { getAllEmployeesReducer } from \"app/redux/reducers/EmployeesReducer\";\r\nfunction* getAllEmployeesSaga() {\r\n  try {\r\n    const response = yield call(getAllEmployeesApi);\r\n    if (response && response.code === SUCCESS_CODE) {\r\n      console.log(response);\r\n      yield put(getAllEmployeesReducer(response?.data));\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\nfunction* addEmployeeSaga(action) {\r\n  try {\r\n    const response = yield call(addEmployeesApi, action.payload);\r\n    if (response && response.code === SUCCESS_CODE) {\r\n      yield put(addEmployeeReducer(response?.data));\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\nexport default function* EmployeeSaga() {\r\n  yield takeEvery(typeEmployee.GET_ALL_EMPLOYEE_REQUEST, getAllEmployeesSaga);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}