{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar initialState = {\n  wards: [],\n  reload: false,\n  success: true,\n  error: null\n};\nvar wardSlide = createSlice({\n  name: \"ward\",\n  initialState: initialState,\n  reducers: {\n    showAllWard: function showAllWard(state, action) {\n      state.wards = action.payload;\n    },\n    deleteWards: function deleteWards(state, action) {\n      state.wards = state.wards.filter(state.wards.id !== action.payload);\n    }\n  }\n});\nvar _wardSlide$actions = wardSlide.actions,\n    showAllWard = _wardSlide$actions.showAllWard,\n    deleteWards = _wardSlide$actions.deleteWards;\nexport { showAllWard, deleteWards };\nexport default wardSlide.reducer;","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/redux/reducers/WardReducer.js"],"names":["createSlice","initialState","wards","reload","success","error","wardSlide","name","reducers","showAllWard","state","action","payload","deleteWards","filter","id","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,MAAM,EAAE,KAFW;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAMA,IAAMC,SAAS,GAAGN,WAAW,CAAC;AAC5BO,EAAAA,IAAI,EAAE,MADsB;AAE5BN,EAAAA,YAAY,EAAZA,YAF4B;AAG5BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAE,qBAACC,KAAD,EAAQC,MAAR,EAAmB;AAC9BD,MAAAA,KAAK,CAACR,KAAN,GAAcS,MAAM,CAACC,OAArB;AACD,KAHO;AAIRC,IAAAA,WAAW,EAAE,qBAACH,KAAD,EAAQC,MAAR,EAAmB;AAC9BD,MAAAA,KAAK,CAACR,KAAN,GAAcQ,KAAK,CAACR,KAAN,CAAYY,MAAZ,CAAmBJ,KAAK,CAACR,KAAN,CAAYa,EAAZ,KAAmBJ,MAAM,CAACC,OAA7C,CAAd;AACD;AANO;AAHkB,CAAD,CAA7B;yBAY4CN,SAAS,CAACU,O;IAAvCP,W,sBAAAA,W;IAAaI,W,sBAAAA,W;;AAC5B,eAAeP,SAAS,CAACW,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialState = {\r\n  wards: [],\r\n  reload: false,\r\n  success: true,\r\n  error: null,\r\n};\r\nconst wardSlide = createSlice({\r\n  name: \"ward\",\r\n  initialState,\r\n  reducers: {\r\n    showAllWard: (state, action) => {\r\n      state.wards = action.payload;\r\n    },\r\n    deleteWards: (state, action) => {\r\n      state.wards = state.wards.filter(state.wards.id !== action.payload);\r\n    },\r\n  },\r\n});\r\nexport const { showAllWard ,deleteWards } = wardSlide.actions;\r\nexport default wardSlide.reducer;\r\n"]},"metadata":{},"sourceType":"module"}