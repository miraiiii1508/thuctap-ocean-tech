{"ast":null,"code":"import _slicedToArray from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\src\\\\app\\\\views\\\\Staff\\\\ManagerEmployee.jsx\";\n\nimport { Button, IconButton, makeStyles, TextField } from \"@material-ui/core\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteEmployeeAction, getAllEmployeesAction } from \"./redux/actions/EmployeesAction\";\nimport ManagerEmployeeDialog from \"./ManagerEmployeeDialog\";\nimport * as XLSX from \"xlsx\";\nimport { saveAs } from \"file-saver\";\nimport { toast } from \"react-toastify\";\nvar useStyles = makeStyles({\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: \"0px 10px\",\n    marginBottom: \"20px\" // Thêm khoảng cách dưới cho toolbar\n\n  }\n});\n\nvar ManagerStaff = function ManagerStaff() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.employees;\n  }),\n      employees = _useSelector.employees,\n      reload = _useSelector.reload;\n\n  var dataTable = employees.map(function (employee) {\n    return _objectSpread({}, employee);\n  });\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      rowData = _useState2[0],\n      setRowData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showDeleteDialog = _useState4[0],\n      setShowDeleteDialog = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showDialogEmployee = _useState6[0],\n      setShowDialogEmployee = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      keywords = _useState8[0],\n      setKeywords = _useState8[1];\n\n  useEffect(function () {\n    getAllEmployee();\n  }, [dispatch, reload]);\n\n  var getAllEmployee = function getAllEmployee() {\n    dispatch(getAllEmployeesAction());\n  };\n\n  var handleAddNewEmployee = function handleAddNewEmployee() {\n    setShowDialogEmployee(true);\n    setRowData({});\n  };\n\n  var handEditEmployee = function handEditEmployee(data) {\n    setShowDialogEmployee(true);\n    console.log(data);\n    setRowData(data);\n  };\n\n  var handleCloseDialogEmployee = function handleCloseDialogEmployee() {\n    setShowDialogEmployee(false);\n    setRowData({});\n  };\n\n  var handleCloseDeleteDialog = function handleCloseDeleteDialog() {\n    setShowDeleteDialog(false);\n    setRowData({});\n  };\n\n  var handleOpenDialogDelete = function handleOpenDialogDelete(data) {\n    setShowDeleteDialog(true);\n    setRowData(data);\n  };\n\n  var handleDialogDelete = function handleDialogDelete() {\n    dispatch(deleteEmployeeAction(rowData.id));\n    handleCloseDeleteDialog();\n  };\n\n  var handleExportExcel = function handleExportExcel() {\n    var workbook = XLSX.utils.book_new();\n    var worksheet = XLSX.utils.json_to_sheet(employees);\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Employees\");\n    var excelBuffer = XLSX.write(workbook, {\n      bookType: \"xlsx\",\n      type: \"array\"\n    });\n    var excelData = new Blob([excelBuffer], {\n      type: \"application/octet-stream\"\n    });\n    saveAs(excelData, \"danh s\\xE1ch nh\\xE2n vi\\xEAn.xlsx\");\n    toast.success(\"Xuất file thành công!\");\n  };\n\n  var columns = [{\n    title: \"Thao tác\",\n    field: \"custom\",\n    width: \"100\",\n    cellStyle: {\n      padding: \"0\",\n      margin: \"0\"\n    },\n    render: function render(row) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"primary\",\n        onClick: function onClick() {\n          handEditEmployee(row);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }\n      }, \"edit\")), /*#__PURE__*/React.createElement(IconButton, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        onClick: function onClick() {\n          handleOpenDialogDelete(row);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }\n      }, \"delete\")));\n    }\n  }, {\n    field: \"code\",\n    title: \"Mã Nhân Viên\"\n  }, {\n    field: \"name\",\n    title: \"Họ và tên\"\n  }, {\n    field: \"age\",\n    title: \"Tuổi\"\n  }, {\n    field: \"email\",\n    title: \"Email\"\n  }, {\n    field: \"phone\",\n    title: \"Số điện thoại\"\n  }];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var classes = useStyles();\n\n  var CustomToolbar = function CustomToolbar(props) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.toolbar,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"mt-4 mb-16 mr-16 align-bottom\",\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      onClick: handleAddNewEmployee,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, t(\"Add\")), /*#__PURE__*/React.createElement(Button, {\n      className: \"mt-4 mb-16 mr-16 align-bottom\",\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      onClick: handleExportExcel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, t(\"general.exportToExcel\"))));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    columns: columns,\n    data: dataTable,\n    options: {\n      search: true,\n      toolbar: false,\n      // Không hiển thị toolbar mặc định của Material-UI Table\n      headerStyle: {\n        backgroundColor: \"#358600\",\n        color: \"#fff\"\n      },\n      minBodyHeight: \"569px\",\n      maxBodyHeight: \"569px\",\n      pageSize: 10,\n      rowStyle: function rowStyle(rowData, index) {\n        return {\n          backgroundColor: index % 2 === 1 ? \"#EEE\" : \"#FFF\"\n        };\n      },\n      padding: \"dense\"\n    },\n    components: {\n      Toolbar: CustomToolbar\n    },\n    title: \"\" // Ẩn tiêu đề bằng cách để title là chuỗi rỗng\n    ,\n    localization: {\n      body: {\n        emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n      },\n      pagination: {\n        labelRowsSelect: \"B\\u1EA3n ghi\",\n        labelDisplayedRows: \"{from}-{to} trong {count}\",\n        firstTooltip: \"Trang đầu\",\n        previousTooltip: \"Trang trước\",\n        nextTooltip: \"Trang tiếp\",\n        lastTooltip: \"Trang cuối\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }), showDialogEmployee && /*#__PURE__*/React.createElement(ManagerEmployeeDialog, {\n    open: showDialogEmployee,\n    onClose: handleCloseDialogEmployee,\n    employees: rowData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }), showDeleteDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n    open: showDeleteDialog,\n    onConfirmDialogClose: handleCloseDeleteDialog,\n    onYesClick: handleDialogDelete,\n    title: t(\"Xo\\u0301a nh\\xE2n Vi\\xEAn \".concat(rowData === null || rowData === void 0 ? void 0 : rowData.name, \"?\")),\n    text: t(\"DeleteConfirm\"),\n    Yes: t(\"Yes\"),\n    No: t(\"No\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default ManagerStaff;","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/views/Staff/ManagerEmployee.jsx"],"names":["Button","IconButton","makeStyles","TextField","MaterialTable","MTableToolbar","React","useEffect","useState","useTranslation","useDispatch","useSelector","deleteEmployeeAction","getAllEmployeesAction","ManagerEmployeeDialog","XLSX","saveAs","toast","useStyles","toolbar","display","justifyContent","alignItems","padding","marginBottom","ManagerStaff","dispatch","state","employees","reload","dataTable","map","employee","rowData","setRowData","showDeleteDialog","setShowDeleteDialog","showDialogEmployee","setShowDialogEmployee","keywords","setKeywords","getAllEmployee","handleAddNewEmployee","handEditEmployee","data","console","log","handleCloseDialogEmployee","handleCloseDeleteDialog","handleOpenDialogDelete","handleDialogDelete","id","handleExportExcel","workbook","utils","book_new","worksheet","json_to_sheet","book_append_sheet","excelBuffer","write","bookType","type","excelData","Blob","success","columns","title","field","width","cellStyle","margin","render","row","t","classes","CustomToolbar","props","search","headerStyle","backgroundColor","color","minBodyHeight","maxBodyHeight","pageSize","rowStyle","index","Toolbar","body","emptyDataSourceMessage","pagination","labelRowsSelect","labelDisplayedRows","firstTooltip","previousTooltip","nextTooltip","lastTooltip","name"],"mappings":"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","sourcesContent":["import { Button, IconButton, makeStyles, TextField } from \"@material-ui/core\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  deleteEmployeeAction,\r\n  getAllEmployeesAction,\r\n} from \"./redux/actions/EmployeesAction\";\r\nimport ManagerEmployeeDialog from \"./ManagerEmployeeDialog\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles({\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: \"0px 10px\",\r\n    marginBottom: \"20px\", // Thêm khoảng cách dưới cho toolbar\r\n  },\r\n});\r\n\r\nconst ManagerStaff = () => {\r\n  const dispatch = useDispatch();\r\n  const { employees, reload } = useSelector((state) => state.employees);\r\n  const dataTable = employees.map((employee) => ({ ...employee }));\r\n  const [rowData, setRowData] = useState({});\r\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\r\n  const [showDialogEmployee, setShowDialogEmployee] = useState(false);\r\n  const [keywords, setKeywords] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getAllEmployee();\r\n  }, [dispatch, reload]);\r\n\r\n  const getAllEmployee = () => {\r\n    dispatch(getAllEmployeesAction());\r\n  };\r\n\r\n  const handleAddNewEmployee = () => {\r\n    setShowDialogEmployee(true);\r\n    setRowData({});\r\n  };\r\n\r\n  const handEditEmployee = (data) => {\r\n    setShowDialogEmployee(true);\r\n    console.log(data);\r\n    setRowData(data);\r\n  };\r\n\r\n  const handleCloseDialogEmployee = () => {\r\n    setShowDialogEmployee(false);\r\n    setRowData({});\r\n  };\r\n\r\n  const handleCloseDeleteDialog = () => {\r\n    setShowDeleteDialog(false);\r\n    setRowData({});\r\n  };\r\n\r\n  const handleOpenDialogDelete = (data) => {\r\n    setShowDeleteDialog(true);\r\n    setRowData(data);\r\n  };\r\n\r\n  const handleDialogDelete = () => {\r\n    dispatch(deleteEmployeeAction(rowData.id));\r\n    handleCloseDeleteDialog();\r\n  };\r\n\r\n  const handleExportExcel = () => {\r\n    const workbook = XLSX.utils.book_new();\r\n    const worksheet = XLSX.utils.json_to_sheet(employees);\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Employees\");\r\n    const excelBuffer = XLSX.write(workbook, {\r\n      bookType: \"xlsx\",\r\n      type: \"array\",\r\n    });\r\n    const excelData = new Blob([excelBuffer], {\r\n      type: \"application/octet-stream\",\r\n    });\r\n    saveAs(excelData, `danh sách nhân viên.xlsx`);\r\n    toast.success(\"Xuất file thành công!\");\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Thao tác\",\r\n      field: \"custom\",\r\n      width: \"100\",\r\n      cellStyle: {\r\n        padding: \"0\",\r\n        margin: \"0\",\r\n      },\r\n      render: (row) => {\r\n        return (\r\n          <>\r\n            <IconButton>\r\n              <Icon\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  handEditEmployee(row);\r\n                }}\r\n              >\r\n                edit\r\n              </Icon>\r\n            </IconButton>\r\n\r\n            <IconButton>\r\n              <Icon\r\n                color=\"error\"\r\n                onClick={() => {\r\n                  handleOpenDialogDelete(row);\r\n                }}\r\n              >\r\n                delete\r\n              </Icon>\r\n            </IconButton>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    { field: \"code\", title: \"Mã Nhân Viên\" },\r\n    { field: \"name\", title: \"Họ và tên\" },\r\n    { field: \"age\", title: \"Tuổi\" },\r\n    { field: \"email\", title: \"Email\" },\r\n    { field: \"phone\", title: \"Số điện thoại\" },\r\n  ];\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  const CustomToolbar = (props) => (\r\n    <div className={classes.toolbar}>\r\n      <MTableToolbar {...props} />\r\n      <div>\r\n        <Button\r\n          className=\"mt-4 mb-16 mr-16 align-bottom\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          onClick={handleAddNewEmployee}\r\n        >\r\n          {t(\"Add\")}\r\n        </Button>\r\n        <Button\r\n          className=\"mt-4 mb-16 mr-16 align-bottom\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          onClick={handleExportExcel}\r\n        >\r\n          {t(\"general.exportToExcel\")}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        columns={columns}\r\n        data={dataTable}\r\n        options={{\r\n          search: true,\r\n          toolbar: false, // Không hiển thị toolbar mặc định của Material-UI Table\r\n          headerStyle: {\r\n            backgroundColor: \"#358600\",\r\n            color: \"#fff\",\r\n          },\r\n          minBodyHeight: \"569px\",\r\n          maxBodyHeight: \"569px\",\r\n          pageSize: 10,\r\n          rowStyle: (rowData, index) => ({\r\n            backgroundColor: index % 2 === 1 ? \"#EEE\" : \"#FFF\",\r\n          }),\r\n          padding: \"dense\",\r\n        }}\r\n        components={{\r\n          Toolbar: CustomToolbar,\r\n        }}\r\n        title=\"\" // Ẩn tiêu đề bằng cách để title là chuỗi rỗng\r\n        localization={{\r\n          body: {\r\n            emptyDataSourceMessage: `${t(\"general.emptyDataMessageTable\")}`,\r\n          },\r\n          pagination: {\r\n            labelRowsSelect: `Bản ghi`,\r\n            labelDisplayedRows: `{from}-{to} trong {count}`,\r\n            firstTooltip: \"Trang đầu\",\r\n            previousTooltip: \"Trang trước\",\r\n            nextTooltip: \"Trang tiếp\",\r\n            lastTooltip: \"Trang cuối\",\r\n          },\r\n        }}\r\n      />\r\n      {showDialogEmployee && (\r\n        <ManagerEmployeeDialog\r\n          open={showDialogEmployee}\r\n          onClose={handleCloseDialogEmployee}\r\n          employees={rowData}\r\n        />\r\n      )}\r\n      {showDeleteDialog && (\r\n        <ConfirmationDialog\r\n          open={showDeleteDialog}\r\n          onConfirmDialogClose={handleCloseDeleteDialog}\r\n          onYesClick={handleDialogDelete}\r\n          title={t(`Xóa nhân Viên ${rowData?.name}?`)}\r\n          text={t(\"DeleteConfirm\")}\r\n          Yes={t(\"Yes\")}\r\n          No={t(\"No\")}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManagerStaff;\r\n"]},"metadata":{},"sourceType":"module"}