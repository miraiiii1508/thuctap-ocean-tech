{"ast":null,"code":"import _objectSpread from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nvar initialState = {\n  employees: [],\n  reload: false\n};\nexport var employeesSlide = createSlice({\n  name: \"employees\",\n  initialState: initialState,\n  reducers: {\n    getAllEmployeesReducer: function getAllEmployeesReducer(state, action) {\n      state.employees = action.payload;\n    },\n    addEmployeeReducer: function addEmployeeReducer(state, action) {\n      state.employees = [].concat(_toConsumableArray(state.employees), [action.payload]);\n      state.reload = !state.reload;\n    },\n    updateEmployeeReducer: function updateEmployeeReducer(state, action) {\n      var _action$payload = action.payload,\n          id = _action$payload.id,\n          updateData = _action$payload.updateData;\n      var index = state.employees.findIndex(function (employee) {\n        return employee.id === id;\n      });\n\n      if (index !== -1) {\n        state.employees[index] = _objectSpread(_objectSpread({}, state.employees[index]), updateData);\n      }\n\n      state.reload = !state.reload;\n    },\n    deleteEmployeeReducer: function deleteEmployeeReducer(state, action) {\n      var id = action.payload.id;\n      state.employees = state.employees.filter(function (employee) {\n        return employee.id !== id;\n      });\n      state.reload = !state.reload;\n    },\n    searchEmployeesReducer: searchEmployeesReducer\n  }\n});\nvar _employeesSlide$actio = employeesSlide.actions,\n    getAllEmployeesReducer = _employeesSlide$actio.getAllEmployeesReducer,\n    addEmployeeReducer = _employeesSlide$actio.addEmployeeReducer,\n    updateEmployeeReducer = _employeesSlide$actio.updateEmployeeReducer,\n    deleteEmployeeReducer = _employeesSlide$actio.deleteEmployeeReducer;\nexport { getAllEmployeesReducer, addEmployeeReducer, updateEmployeeReducer, deleteEmployeeReducer };\nexport default employeesSlide.reducer;","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/redux/reducers/EmployeesReducer.js"],"names":["createSlice","initialState","employees","reload","employeesSlide","name","reducers","getAllEmployeesReducer","state","action","payload","addEmployeeReducer","updateEmployeeReducer","id","updateData","index","findIndex","employee","deleteEmployeeReducer","filter","searchEmployeesReducer","actions","reducer"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;AAIA,OAAO,IAAMC,cAAc,GAAGJ,WAAW,CAAC;AACxCK,EAAAA,IAAI,EAAE,WADkC;AAExCJ,EAAAA,YAAY,EAAZA,YAFwC;AAGxCK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,sBAAsB,EAAE,gCAACC,KAAD,EAAQC,MAAR,EAAmB;AACzCD,MAAAA,KAAK,CAACN,SAAN,GAAkBO,MAAM,CAACC,OAAzB;AACD,KAHO;AAIRC,IAAAA,kBAAkB,EAAE,4BAACH,KAAD,EAAQC,MAAR,EAAmB;AACrCD,MAAAA,KAAK,CAACN,SAAN,gCAAsBM,KAAK,CAACN,SAA5B,IAAuCO,MAAM,CAACC,OAA9C;AACAF,MAAAA,KAAK,CAACL,MAAN,GAAe,CAACK,KAAK,CAACL,MAAtB;AACD,KAPO;AAQRS,IAAAA,qBAAqB,EAAE,+BAACJ,KAAD,EAAQC,MAAR,EAAmB;AAAA,4BACbA,MAAM,CAACC,OADM;AAAA,UAChCG,EADgC,mBAChCA,EADgC;AAAA,UAC5BC,UAD4B,mBAC5BA,UAD4B;AAExC,UAAMC,KAAK,GAAGP,KAAK,CAACN,SAAN,CAAgBc,SAAhB,CAA0B,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACJ,EAAT,KAAgBA,EAA9B;AAAA,OAA1B,CAAd;;AACA,UAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBP,QAAAA,KAAK,CAACN,SAAN,CAAgBa,KAAhB,oCACKP,KAAK,CAACN,SAAN,CAAgBa,KAAhB,CADL,GAEKD,UAFL;AAID;;AACDN,MAAAA,KAAK,CAACL,MAAN,GAAe,CAACK,KAAK,CAACL,MAAtB;AACD,KAlBO;AAmBRe,IAAAA,qBAAqB,EAAE,+BAACV,KAAD,EAAQC,MAAR,EAAmB;AAAA,UAChCI,EADgC,GACzBJ,MAAM,CAACC,OADkB,CAChCG,EADgC;AAExCL,MAAAA,KAAK,CAACN,SAAN,GAAkBM,KAAK,CAACN,SAAN,CAAgBiB,MAAhB,CAChB,UAACF,QAAD;AAAA,eAAcA,QAAQ,CAACJ,EAAT,KAAgBA,EAA9B;AAAA,OADgB,CAAlB;AAGAL,MAAAA,KAAK,CAACL,MAAN,GAAe,CAACK,KAAK,CAACL,MAAtB;AACD,KAzBO;AA0BRiB,IAAAA,sBAAsB,EAAtBA;AA1BQ;AAH8B,CAAD,CAAlC;4BAqCHhB,cAAc,CAACiB,O;IAJjBd,sB,yBAAAA,sB;IACAI,kB,yBAAAA,kB;IACAC,qB,yBAAAA,qB;IACAM,qB,yBAAAA,qB;;AAEF,eAAed,cAAc,CAACkB,OAA9B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  employees: [],\r\n  reload: false,\r\n};\r\nexport const employeesSlide = createSlice({\r\n  name: \"employees\",\r\n  initialState,\r\n  reducers: {\r\n    getAllEmployeesReducer: (state, action) => {\r\n      state.employees = action.payload;\r\n    },\r\n    addEmployeeReducer: (state, action) => {\r\n      state.employees = [...state.employees, action.payload];\r\n      state.reload = !state.reload;\r\n    },\r\n    updateEmployeeReducer: (state, action) => {\r\n      const { id, updateData } = action.payload;\r\n      const index = state.employees.findIndex((employee) => employee.id === id);\r\n      if (index !== -1) {\r\n        state.employees[index] = {\r\n          ...state.employees[index],\r\n          ...updateData,\r\n        };\r\n      }\r\n      state.reload = !state.reload;\r\n    },\r\n    deleteEmployeeReducer: (state, action) => {\r\n      const { id } = action.payload;\r\n      state.employees = state.employees.filter(\r\n        (employee) => employee.id !== id\r\n      );\r\n      state.reload = !state.reload;\r\n    },\r\n    searchEmployeesReducer\r\n  },\r\n});\r\nexport const {\r\n  getAllEmployeesReducer,\r\n  addEmployeeReducer,\r\n  updateEmployeeReducer,\r\n  deleteEmployeeReducer\r\n} = employeesSlide.actions;\r\nexport default employeesSlide.reducer;\r\n"]},"metadata":{},"sourceType":"module"}