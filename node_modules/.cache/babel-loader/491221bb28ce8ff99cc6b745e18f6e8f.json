{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getAllEmployeesSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(addEmployeeSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(updateEmployeeSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(deleteEmployeeSage),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(searchEmployeesSaga),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(EmployeeSaga);\n\nimport { call, put, takeEvery } from \"redux-saga/effects\";\nimport { addEmployeesApi, deleteEmployeesApi, getAllEmployeesApi, searchEmployeesApi, updateEmployeesApi } from \"./EmployeeApi\";\nimport { SUCCESS_CODE, typeEmployee } from \"app/redux/constants\";\nimport { addEmployeeReducer, deleteEmployeeReducer, getAllEmployeesReducer, searchEmployeesReducer, updateEmployeeReducer } from \"app/redux/reducers/EmployeesReducer\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure({\n  autoClose: 3000,\n  draggable: false,\n  limit: 3\n});\n\nfunction getAllEmployeesSaga() {\n  var response;\n  return _regeneratorRuntime.wrap(function getAllEmployeesSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(getAllEmployeesApi);\n\n        case 3:\n          response = _context.sent;\n\n          if (!(response && response.code === SUCCESS_CODE)) {\n            _context.next = 8;\n            break;\n          }\n\n          console.log(response);\n          _context.next = 8;\n          return put(getAllEmployeesReducer(response === null || response === void 0 ? void 0 : response.data));\n\n        case 8:\n          _context.next = 13;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\n\nfunction addEmployeeSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function addEmployeeSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(addEmployeesApi, action.payload);\n\n        case 3:\n          response = _context2.sent;\n\n          if (!(response && response.code === SUCCESS_CODE)) {\n            _context2.next = 10;\n            break;\n          }\n\n          _context2.next = 7;\n          return put(addEmployeeReducer(response === null || response === void 0 ? void 0 : response.data));\n\n        case 7:\n          toast.success(response.message);\n          _context2.next = 11;\n          break;\n\n        case 10:\n          toast.error(response.message);\n\n        case 11:\n          _context2.next = 16;\n          break;\n\n        case 13:\n          _context2.prev = 13;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(_context2.t0);\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 13]]);\n}\n\nfunction updateEmployeeSaga(action) {\n  var response, _response$data;\n\n  return _regeneratorRuntime.wrap(function updateEmployeeSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(updateEmployeesApi, action.payload.id, action.payload);\n\n        case 3:\n          response = _context3.sent;\n\n          if (!(response && response.data && response.data.code === SUCCESS_CODE)) {\n            _context3.next = 10;\n            break;\n          }\n\n          _context3.next = 7;\n          return put(updateEmployeeReducer(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data));\n\n        case 7:\n          toast.success(response.data.message);\n          _context3.next = 11;\n          break;\n\n        case 10:\n          toast.error(response.data.message);\n\n        case 11:\n          _context3.next = 16;\n          break;\n\n        case 13:\n          _context3.prev = 13;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n\n        case 16:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 13]]);\n}\n\nfunction deleteEmployeeSage(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function deleteEmployeeSage$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(deleteEmployeesApi, action.payload);\n\n        case 3:\n          response = _context4.sent;\n\n          if (!(response && response.code === SUCCESS_CODE)) {\n            _context4.next = 10;\n            break;\n          }\n\n          _context4.next = 7;\n          return put(deleteEmployeeReducer(action.payload));\n\n        case 7:\n          toast.success(response.message);\n          _context4.next = 11;\n          break;\n\n        case 10:\n          toast.error(response.message);\n\n        case 11:\n          _context4.next = 16;\n          break;\n\n        case 13:\n          _context4.prev = 13;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.error(_context4.t0);\n\n        case 16:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 13]]);\n}\n\nfunction searchEmployeesSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function searchEmployeesSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(searchEmployeesApi, action.payload);\n\n        case 3:\n          response = _context5.sent;\n          _context5.next = 6;\n          return put(searchEmployeesReducer(response.data.data.content));\n\n        case 6:\n          _context5.next = 11;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(_context5.t0);\n\n        case 11:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nexport default function EmployeeSaga() {\n  return _regeneratorRuntime.wrap(function EmployeeSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(typeEmployee.GET_ALL_EMPLOYEE_REQUEST, getAllEmployeesSaga);\n\n        case 2:\n          _context6.next = 4;\n          return takeEvery(typeEmployee.ADD_EMPLOYEE_REQUEST, addEmployeeSaga);\n\n        case 4:\n          _context6.next = 6;\n          return takeEvery(typeEmployee.UPDATE_EMPLOYEE_REQUEST, updateEmployeeSaga);\n\n        case 6:\n          _context6.next = 8;\n          return takeEvery(typeEmployee.DELETE_EMPLOYEE_REQUEST, deleteEmployeeSage);\n\n        case 8:\n          _context6.next = 10;\n          return takeEvery(typeEmployee.SEARCH_EMPLOYEE_REQUEST, searchEmployeesSaga);\n\n        case 10:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/redux/sagas/StaffSaga/EmployeeSaga.js"],"names":["getAllEmployeesSaga","addEmployeeSaga","updateEmployeeSaga","deleteEmployeeSage","searchEmployeesSaga","EmployeeSaga","call","put","takeEvery","addEmployeesApi","deleteEmployeesApi","getAllEmployeesApi","searchEmployeesApi","updateEmployeesApi","SUCCESS_CODE","typeEmployee","addEmployeeReducer","deleteEmployeeReducer","getAllEmployeesReducer","searchEmployeesReducer","updateEmployeeReducer","toast","configure","autoClose","draggable","limit","response","code","console","log","data","error","action","payload","success","message","id","content","GET_ALL_EMPLOYEE_REQUEST","ADD_EMPLOYEE_REQUEST","UPDATE_EMPLOYEE_REQUEST","DELETE_EMPLOYEE_REQUEST","SEARCH_EMPLOYEE_REQUEST"],"mappings":"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","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  addEmployeesApi,\r\n  deleteEmployeesApi,\r\n  getAllEmployeesApi,\r\n  searchEmployeesApi,\r\n  updateEmployeesApi,\r\n} from \"./EmployeeApi\";\r\nimport { SUCCESS_CODE, typeEmployee } from \"app/redux/constants\";\r\nimport {\r\n  addEmployeeReducer,\r\n  deleteEmployeeReducer,\r\n  getAllEmployeesReducer,\r\n  searchEmployeesReducer,\r\n  updateEmployeeReducer,\r\n} from \"app/redux/reducers/EmployeesReducer\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\ntoast.configure({\r\n  autoClose: 3000,\r\n  draggable: false,\r\n  limit: 3,\r\n});\r\nfunction* getAllEmployeesSaga() {\r\n  try {\r\n    const response = yield call(getAllEmployeesApi);\r\n    if (response && response.code === SUCCESS_CODE) {\r\n      console.log(response);\r\n      yield put(getAllEmployeesReducer(response?.data));\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\nfunction* addEmployeeSaga(action) {\r\n  try {\r\n    const response = yield call(addEmployeesApi, action.payload);\r\n    if (response && response.code === SUCCESS_CODE) {\r\n      yield put(addEmployeeReducer(response?.data));\r\n      toast.success(response.message);\r\n    } else {\r\n      toast.error(response.message);\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\nfunction* updateEmployeeSaga(action) {\r\n  try {\r\n    const response = yield call(\r\n      updateEmployeesApi,\r\n      action.payload.id,\r\n      action.payload\r\n    );\r\n    if (response && response.data && response.data.code === SUCCESS_CODE) {\r\n      yield put(updateEmployeeReducer(response?.data?.data));\r\n      toast.success(response.data.message);\r\n    } else {\r\n      toast.error(response.data.message);\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\nfunction* deleteEmployeeSage(action) {\r\n  try {\r\n    const response = yield call(deleteEmployeesApi, action.payload);\r\n    if (response && response.code === SUCCESS_CODE) {\r\n      yield put(deleteEmployeeReducer(action.payload));\r\n      toast.success(response.message);\r\n    } else {\r\n      toast.error(response.message);\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\nfunction* searchEmployeesSaga(action) {\r\n  try {\r\n    const response = yield call(searchEmployeesApi, action.payload);\r\n    yield put(searchEmployeesReducer(response.data.data.content));\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\nexport default function* EmployeeSaga() {\r\n  yield takeEvery(typeEmployee.GET_ALL_EMPLOYEE_REQUEST, getAllEmployeesSaga);\r\n  yield takeEvery(typeEmployee.ADD_EMPLOYEE_REQUEST, addEmployeeSaga);\r\n  yield takeEvery(typeEmployee.UPDATE_EMPLOYEE_REQUEST, updateEmployeeSaga);\r\n  yield takeEvery(typeEmployee.DELETE_EMPLOYEE_REQUEST, deleteEmployeeSage);\r\n  yield takeEvery(typeEmployee.SEARCH_EMPLOYEE_REQUEST, searchEmployeesSaga);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}