{"ast":null,"code":"import _objectSpread from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\src\\\\app\\\\views\\\\Staff\\\\ManagerEmployeeDialog.jsx\";\n\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, FormControl, MenuItem, Grid, IconButton, makeStyles } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport React, { useEffect, useState } from \"react\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport { SelectValidator, TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllProvincesAction, getDistrictByProvinces } from \"app/redux/actions/LocationAction\";\nimport { addEmployeeAction } from \"app/redux/actions/EmployeesAction\";\nvar useStyles = makeStyles({\n  colorStyle: {\n    color: \"red\"\n  },\n  iconClose: {\n    position: \"absolute\",\n    right: 8,\n    top: 8\n  }\n});\n\nvar ManagerEmployeeDialog = function ManagerEmployeeDialog(_ref) {\n  var open = _ref.open,\n      onClose = _ref.onClose,\n      employees = _ref.employees;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.provinces;\n  }),\n      provinces = _useSelector.provinces,\n      districtsByProvince = _useSelector.districtsByProvince;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.district;\n  }),\n      wardsByDistrict = _useSelector2.wardsByDistrict;\n\n  var defaultValue = {\n    code: \"\",\n    name: \"\",\n    age: \"\",\n    phone: \"\",\n    email: \"\",\n    provinceId: \"\",\n    districtId: \"\",\n    wardsId: \"\"\n  };\n\n  var _useState = useState(defaultValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      employeeFormData = _useState2[0],\n      setEmployeeFormData = _useState2[1];\n\n  var dataTable = provinces.map(function (province) {\n    return _objectSpread({}, province);\n  });\n  var dataDistrict = districtsByProvince.map(function (district) {\n    return _objectSpread({}, district);\n  });\n  var dataWards = wardsByDistrict.map(function (ward) {\n    return _objectSpread({}, ward);\n  });\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      provinceValue = _useState4[0],\n      setProvinceValue = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      districtValue = _useState6[0],\n      setDistrictValue = _useState6[1];\n\n  useEffect(function () {\n    if (employees) {\n      setEmployeeFormData(employees);\n      setProvinceValue(employees.provinceId);\n      setDistrictValue(employees.districtId);\n    }\n  }, [employees]);\n\n  var getProvinceArea = function getProvinceArea() {\n    dispatch(getAllProvincesAction());\n  };\n\n  useEffect(function () {\n    getProvinceArea();\n\n    if (provinceValue) {\n      dispatch(getDistrictByProvinces(provinceValue));\n    }\n\n    if (districtValue) {\n      dispatch({\n        type: \"TEST\",\n        payload: districtValue\n      });\n    }\n  }, [dispatch, provinceValue, districtValue]);\n\n  var handleOnchange = function handleOnchange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n\n    if (name === \"provinceId\") {\n      setProvinceValue(value);\n    }\n\n    if (name === \"districtId\") {\n      setDistrictValue(value);\n    }\n\n    setEmployeeFormData(_objectSpread(_objectSpread({}, employeeFormData), {}, {\n      [name]: value\n    }));\n  };\n\n  var handleAddNewEmployees = function handleAddNewEmployees() {\n    dispatch(addEmployeeAction());\n  };\n\n  var handleSubmit = function handleSubmit() {\n    handleAddNewEmployees();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: onClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    maxWidth: \"md\",\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mb-20 styleColor\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, ((employeeFormData === null || employeeFormData === void 0 ? void 0 : employeeFormData.id) ? t(\"general.update\") : t(\"Add\")) + \" \" + t(\"Nhân Viên\")), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.iconClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    color: \"error\",\n    onClick: onClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ValidatorForm, {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"mb-8\",\n    container: true,\n    spacing: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 6,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-8\",\n    name: \"code\",\n    value: employeeFormData.code || \"\",\n    onChange: handleOnchange,\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 23\n      }\n    }, \" * \"), \"M\\xE3 nh\\xE2n vi\\xEAn\"),\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng nhập mã Nhân Viên\"],\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 6,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-8\",\n    name: \"name\",\n    value: employeeFormData.name || \" \",\n    onChange: handleOnchange,\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 23\n      }\n    }, \" * \"), \"H\\u1ECD V\\xE0 T\\xEAn\"),\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng nhập mã Phường/Xã\"],\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-8\",\n    name: \"age\",\n    value: employeeFormData.age || \"\",\n    type: \"number\",\n    onChange: handleOnchange,\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 23\n      }\n    }, \" * \"), \"Tu\\u1ED5i\"),\n    fullWidth: true,\n    validators: [\"required\", \"minNumber:0\", \"maxNumber:100\"],\n    errorMessages: [\"Vui lòng nhập tuổi \", \"Tuổi không được âm\", \"Nhập sai tuổi\"],\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-8\",\n    name: \"phone\",\n    type: \"number\",\n    value: employeeFormData.phone || \"\",\n    onChange: handleOnchange,\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 23\n      }\n    }, \" * \"), \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"),\n    fullWidth: true,\n    validators: [\"required\", \"minNumber:0\"],\n    errorMessages: [\"Vui lòng nhập diện tích\", \"Diện tích không được âm\"],\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-8\",\n    name: \"email\",\n    value: employeeFormData.email || \"\",\n    onChange: handleOnchange,\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 23\n      }\n    }, \" * \"), \"Eemail\"),\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng nhập diện tích\"],\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectValidator, {\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    }, \" * \"), \"Th\\xE0nh Ph\\u1ED1\"),\n    name: \"provinceId\",\n    value: (employeeFormData === null || employeeFormData === void 0 ? void 0 : employeeFormData.provinceId) || null,\n    onChange: handleOnchange,\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng chọn Quận/Huyện\"],\n    className: \"w-100 mb-8\",\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 19\n    }\n  }, dataTable.map(function (province) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      value: province.id,\n      key: province.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 23\n      }\n    }, province.name);\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectValidator, {\n    name: \"districtId\",\n    value: (employeeFormData === null || employeeFormData === void 0 ? void 0 : employeeFormData.districtId) || null,\n    onChange: handleOnchange,\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 25\n      }\n    }, \" * \"), \"Qu\\u1EADn/Huy\\u1EC7n\"),\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng chọn Quận/Huyện\"],\n    className: \"w-100 mb-8\",\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 19\n    }\n  }, dataDistrict.map(function (district) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      value: district.id,\n      key: district.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 23\n      }\n    }, district.name);\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectValidator, {\n    name: \"wardsId\",\n    value: (employeeFormData === null || employeeFormData === void 0 ? void 0 : employeeFormData.wardsId) || null,\n    onChange: handleOnchange,\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 25\n      }\n    }, \" * \"), \"Ph\\u01B0\\u1EDDng/X\\xE3\"),\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng chọn Quận/Huyện\"],\n    className: \"w-100 mb-8\",\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 19\n    }\n  }, dataWards.map(function (ward) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      value: ward.id,\n      key: ward.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 23\n      }\n    }, ward.name);\n  })))))), /*#__PURE__*/React.createElement(DialogActions, {\n    style: {\n      justifyContent: \"center\"\n    },\n    spacing: 4,\n    className: \"flex flex-end flex-middle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: onClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }, t(\"general.cancel\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  }, (employeeFormData === null || employeeFormData === void 0 ? void 0 : employeeFormData.id) ? t(\"general.update\") : t(\"general.save\"))))));\n};\n\nexport default ManagerEmployeeDialog;","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/views/Staff/ManagerEmployeeDialog.jsx"],"names":["Button","Dialog","DialogTitle","DialogContent","DialogActions","FormControl","MenuItem","Grid","IconButton","makeStyles","useTranslation","React","useEffect","useState","Close","CloseIcon","SelectValidator","TextValidator","ValidatorForm","useDispatch","useSelector","getAllProvincesAction","getDistrictByProvinces","addEmployeeAction","useStyles","colorStyle","color","iconClose","position","right","top","ManagerEmployeeDialog","open","onClose","employees","classes","t","dispatch","state","provinces","districtsByProvince","district","wardsByDistrict","defaultValue","code","name","age","phone","email","provinceId","districtId","wardsId","employeeFormData","setEmployeeFormData","dataTable","map","province","dataDistrict","dataWards","ward","provinceValue","setProvinceValue","districtValue","setDistrictValue","getProvinceArea","type","payload","handleOnchange","e","target","value","handleAddNewEmployees","handleSubmit","id","justifyContent"],"mappings":"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","sourcesContent":["import {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  FormControl,\r\n  MenuItem,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\nimport {\r\n  SelectValidator,\r\n  TextValidator,\r\n  ValidatorForm,\r\n} from \"react-material-ui-form-validator\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getAllProvincesAction,\r\n  getDistrictByProvinces,\r\n} from \"app/redux/actions/LocationAction\";\r\nimport { addEmployeeAction } from \"app/redux/actions/EmployeesAction\";\r\nconst useStyles = makeStyles({\r\n  colorStyle: {\r\n    color: \"red\",\r\n  },\r\n  iconClose: {\r\n    position: \"absolute\",\r\n    right: 8,\r\n    top: 8,\r\n  },\r\n});\r\nconst ManagerEmployeeDialog = ({ open, onClose, employees }) => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const { provinces, districtsByProvince } = useSelector(\r\n    (state) => state.provinces\r\n  );\r\n  const { wardsByDistrict } = useSelector((state) => state.district);\r\n  const defaultValue = {\r\n    code: \"\",\r\n    name: \"\",\r\n    age: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    provinceId: \"\",\r\n    districtId: \"\",\r\n    wardsId: \"\",\r\n  };\r\n  const [employeeFormData, setEmployeeFormData] = useState(defaultValue);\r\n  const dataTable = provinces.map((province) => ({ ...province }));\r\n  const dataDistrict = districtsByProvince.map((district) => ({ ...district }));\r\n  const dataWards = wardsByDistrict.map((ward) => ({ ...ward }));\r\n  const [provinceValue, setProvinceValue] = useState(\"\");\r\n  const [districtValue, setDistrictValue] = useState(\"\");\r\n  useEffect(() => {\r\n    if (employees) {\r\n      setEmployeeFormData(employees);\r\n      setProvinceValue(employees.provinceId);\r\n      setDistrictValue(employees.districtId);\r\n    }\r\n  }, [employees]);\r\n  const getProvinceArea = () => {\r\n    dispatch(getAllProvincesAction());\r\n  };\r\n  useEffect(() => {\r\n    getProvinceArea();\r\n    if (provinceValue) {\r\n      dispatch(getDistrictByProvinces(provinceValue));\r\n    }\r\n    if (districtValue) {\r\n      dispatch({\r\n        type: \"TEST\",\r\n        payload: districtValue,\r\n      });\r\n    }\r\n  }, [dispatch, provinceValue, districtValue]);\r\n  const handleOnchange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"provinceId\") {\r\n      setProvinceValue(value);\r\n    }\r\n    if (name === \"districtId\") {\r\n      setDistrictValue(value);\r\n    }\r\n    setEmployeeFormData({\r\n      ...employeeFormData,\r\n      [name]: value,\r\n    });\r\n  };\r\n  const handleAddNewEmployees = () => {\r\n    dispatch(addEmployeeAction())\r\n  };\r\n  const handleSubmit = () => {\r\n    handleAddNewEmployees();\r\n  };\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={onClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        maxWidth={\"md\"}\r\n        fullWidth={true}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <span className=\"mb-20 styleColor\">\r\n            {(employeeFormData?.id ? t(\"general.update\") : t(\"Add\")) +\r\n              \" \" +\r\n              t(\"Nhân Viên\")}\r\n          </span>\r\n          <IconButton aria-label=\"close\" className={classes.iconClose}>\r\n            <CloseIcon color=\"error\" onClick={onClose} />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <ValidatorForm onSubmit={handleSubmit}>\r\n          <DialogContent dividers>\r\n            <Grid className=\"mb-8\" container spacing={1}>\r\n              <Grid item sm={6} xs={6}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-8\"\r\n                  name=\"code\"\r\n                  value={employeeFormData.code || \"\"}\r\n                  onChange={handleOnchange}\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Mã nhân viên\r\n                    </span>\r\n                  }\r\n                  fullWidth\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"Vui lòng nhập mã Nhân Viên\"]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={6} xs={6}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-8\"\r\n                  name=\"name\"\r\n                  value={employeeFormData.name || \" \"}\r\n                  onChange={handleOnchange}\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Họ Và Tên\r\n                    </span>\r\n                  }\r\n                  fullWidth\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"Vui lòng nhập mã Phường/Xã\"]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={4} xs={4}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-8\"\r\n                  name=\"age\"\r\n                  value={employeeFormData.age || \"\"}\r\n                  type=\"number\"\r\n                  onChange={handleOnchange}\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Tuổi\r\n                    </span>\r\n                  }\r\n                  fullWidth\r\n                  validators={[\"required\", \"minNumber:0\", \"maxNumber:100\"]}\r\n                  errorMessages={[\r\n                    \"Vui lòng nhập tuổi \",\r\n                    \"Tuổi không được âm\",\r\n                    \"Nhập sai tuổi\",\r\n                  ]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={4} xs={4}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-8\"\r\n                  name=\"phone\"\r\n                  type=\"number\"\r\n                  value={employeeFormData.phone || \"\"}\r\n                  onChange={handleOnchange}\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Số điện thoại\r\n                    </span>\r\n                  }\r\n                  fullWidth\r\n                  validators={[\"required\", \"minNumber:0\"]}\r\n                  errorMessages={[\r\n                    \"Vui lòng nhập diện tích\",\r\n                    \"Diện tích không được âm\",\r\n                  ]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={4} xs={4}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-8\"\r\n                  name=\"email\"\r\n                  value={employeeFormData.email || \"\"}\r\n                  onChange={handleOnchange}\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Eemail\r\n                    </span>\r\n                  }\r\n                  fullWidth\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"Vui lòng nhập diện tích\"]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={4} xs={4}>\r\n                <FormControl fullWidth={true}>\r\n                  <SelectValidator\r\n                    label={\r\n                      <span>\r\n                        <span className={classes.colorStyle}> * </span>\r\n                        Thành Phố\r\n                      </span>\r\n                    }\r\n                    name=\"provinceId\"\r\n                    value={employeeFormData?.provinceId || null}\r\n                    onChange={handleOnchange}\r\n                    validators={[\"required\"]}\r\n                    errorMessages={[\"Vui lòng chọn Quận/Huyện\"]}\r\n                    className=\"w-100 mb-8\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                  >\r\n                    {dataTable.map((province) => (\r\n                      <MenuItem value={province.id} key={province.id}>\r\n                        {province.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </SelectValidator>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item sm={4} xs={4}>\r\n                <FormControl fullWidth={true}>\r\n                  <SelectValidator\r\n                    name=\"districtId\"\r\n                    value={employeeFormData?.districtId || null}\r\n                    onChange={handleOnchange}\r\n                    label={\r\n                      <span>\r\n                        <span className={classes.colorStyle}> * </span>\r\n                        Quận/Huyện\r\n                      </span>\r\n                    }\r\n                    validators={[\"required\"]}\r\n                    errorMessages={[\"Vui lòng chọn Quận/Huyện\"]}\r\n                    className=\"w-100 mb-8\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                  >\r\n                    {dataDistrict.map((district) => (\r\n                      <MenuItem value={district.id} key={district.id}>\r\n                        {district.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </SelectValidator>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item sm={4} xs={4}>\r\n                <FormControl fullWidth={true}>\r\n                  <SelectValidator\r\n                    name=\"wardsId\"\r\n                    value={employeeFormData?.wardsId || null}\r\n                    onChange={handleOnchange}\r\n                    label={\r\n                      <span>\r\n                        <span className={classes.colorStyle}> * </span>\r\n                        Phường/Xã\r\n                      </span>\r\n                    }\r\n                    validators={[\"required\"]}\r\n                    errorMessages={[\"Vui lòng chọn Quận/Huyện\"]}\r\n                    className=\"w-100 mb-8\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                  >\r\n                    {dataWards.map((ward) => (\r\n                      <MenuItem value={ward.id} key={ward.id}>\r\n                        {ward.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </SelectValidator>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions\r\n            style={{ justifyContent: \"center\" }}\r\n            spacing={4}\r\n            className=\"flex flex-end flex-middle\"\r\n          >\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={onClose}>\r\n              {t(\"general.cancel\")}\r\n            </Button>\r\n            <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n              {employeeFormData?.id ? t(\"general.update\") : t(\"general.save\")}\r\n            </Button>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\nexport default ManagerEmployeeDialog;\r\n"]},"metadata":{},"sourceType":"module"}