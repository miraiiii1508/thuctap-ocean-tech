{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getAllProvincesSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(addProvincesSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(editProvincesSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(provincesSaga);\n\nimport { call, takeEvery, put } from \"redux-saga/effects\";\nimport { addProvincesApi, getAllProvinces, updateProvincesApi } from \"./ProvicesApi\";\nimport { addProvinces, showAllProvinces, updateProvinces } from \"app/redux/reducers/ProvinceReduces\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure({\n  autoClose: 1500,\n  draggable: false,\n  limit: 3\n});\n\nfunction getAllProvincesSaga() {\n  var response;\n  return _regeneratorRuntime.wrap(function getAllProvincesSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(getAllProvinces);\n\n        case 3:\n          response = _context.sent;\n\n          if (!(response.code === 200)) {\n            _context.next = 9;\n            break;\n          }\n\n          _context.next = 7;\n          return put(showAllProvinces(response === null || response === void 0 ? void 0 : response.data));\n\n        case 7:\n          _context.next = 10;\n          break;\n\n        case 9:\n          console.error(\"Error in province saga\");\n\n        case 10:\n          _context.next = 15;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(\"Error in province saga:\", _context.t0);\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 12]]);\n}\n\nfunction addProvincesSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function addProvincesSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(addProvincesApi, action.payload);\n\n        case 3:\n          response = _context2.sent;\n\n          if (!(response && response.code === 200)) {\n            _context2.next = 10;\n            break;\n          }\n\n          _context2.next = 7;\n          return put(addProvinces(response.data));\n\n        case 7:\n          toast.success(\"Thêm Tỉnh/Thành phố thành công!\");\n          _context2.next = 11;\n          break;\n\n        case 10:\n          toast.error(\"Không thể thêm Tỉnh/thành phố!\");\n\n        case 11:\n          _context2.next = 16;\n          break;\n\n        case 13:\n          _context2.prev = 13;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(\"Something Wrong With Saga!\", _context2.t0);\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 13]]);\n}\n\nfunction editProvincesSaga(action) {\n  return _regeneratorRuntime.wrap(function editProvincesSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          // try {\n          //   const response = yield call(updateProvincesApi, action.payload);\n          //   if (response && response.code === 200) {\n          //     yield put(updateProvinces(action.payload));\n          //     toast.success(\"Sửa dữ liệu thành công\");\n          //   }\n          // } catch (e) {\n          //   console.error(\"Something Wrong With Saga!\", e);\n          // }\n          con;\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nexport default function provincesSaga() {\n  return _regeneratorRuntime.wrap(function provincesSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(\"ALL_PROVINCES_REQUEST\", getAllProvincesSaga);\n\n        case 2:\n          _context4.next = 4;\n          return takeEvery(\"ADD_PROVINCES_REQUEST\", addProvincesSaga);\n\n        case 4:\n          _context4.next = 6;\n          return takeEvery(\"EDIT_PROVINCES_REQUEST\", editProvincesSaga);\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/redux/sagas/ProvincesSaga/ProvinceSaga.js"],"names":["getAllProvincesSaga","addProvincesSaga","editProvincesSaga","provincesSaga","call","takeEvery","put","addProvincesApi","getAllProvinces","updateProvincesApi","addProvinces","showAllProvinces","updateProvinces","toast","configure","autoClose","draggable","limit","response","code","data","console","error","action","payload","success","con"],"mappings":";;oDAmBUA,mB;qDAYAC,gB;qDAaAC,iB;qDAYeC,a;;AAxDzB,SAASC,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SACEC,eADF,EAEEC,eAFF,EAGEC,kBAHF,QAIO,eAJP;AAKA,SACEC,YADF,EAEEC,gBAFF,EAGEC,eAHF,QAIO,oCAJP;AAKA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,uCAAP;AACAA,KAAK,CAACC,SAAN,CAAgB;AACdC,EAAAA,SAAS,EAAE,IADG;AAEdC,EAAAA,SAAS,EAAE,KAFG;AAGdC,EAAAA,KAAK,EAAE;AAHO,CAAhB;;AAMA,SAAUjB,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEqB,iBAAMI,IAAI,CAACI,eAAD,CAAV;;AAFrB;AAEUU,UAAAA,QAFV;;AAAA,gBAGQA,QAAQ,CAACC,IAAT,KAAkB,GAH1B;AAAA;AAAA;AAAA;;AAAA;AAIM,iBAAMb,GAAG,CAACK,gBAAgB,CAACO,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEE,IAAX,CAAjB,CAAT;;AAJN;AAAA;AAAA;;AAAA;AAMMC,UAAAA,OAAO,CAACC,KAAR,CAAc,wBAAd;;AANN;AAAA;AAAA;;AAAA;AAAA;AAAA;AASID,UAAAA,OAAO,CAACC,KAAR,CAAc,yBAAd;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,SAAUrB,gBAAV,CAA2BsB,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEqB,iBAAMnB,IAAI,CAACG,eAAD,EAAkBgB,MAAM,CAACC,OAAzB,CAAV;;AAFrB;AAEUN,UAAAA,QAFV;;AAAA,gBAGQA,QAAQ,IAAIA,QAAQ,CAACC,IAAT,KAAkB,GAHtC;AAAA;AAAA;AAAA;;AAAA;AAIM,iBAAMb,GAAG,CAACI,YAAY,CAACQ,QAAQ,CAACE,IAAV,CAAb,CAAT;;AAJN;AAKMP,UAAAA,KAAK,CAACY,OAAN,CAAc,qCAAd;AALN;AAAA;;AAAA;AAOMZ,UAAAA,KAAK,CAACS,KAAN,CAAY,oCAAZ;;AAPN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUID,UAAAA,OAAO,CAACC,KAAR,CAAc,4BAAd;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAAUpB,iBAAV,CAA4BqB,MAA5B;AAAA;AAAA;AAAA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAG,UAAAA,GAAG;;AAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,eAAe,SAAUvB,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAME,SAAS,CAAC,uBAAD,EAA0BL,mBAA1B,CAAf;;AADa;AAAA;AAEb,iBAAMK,SAAS,CAAC,uBAAD,EAA0BJ,gBAA1B,CAAf;;AAFa;AAAA;AAGb,iBAAMI,SAAS,CAAC,wBAAD,EAA2BH,iBAA3B,CAAf;;AAHa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, takeEvery, put } from \"redux-saga/effects\";\r\nimport {\r\n  addProvincesApi,\r\n  getAllProvinces,\r\n  updateProvincesApi,\r\n} from \"./ProvicesApi\";\r\nimport {\r\n  addProvinces,\r\n  showAllProvinces,\r\n  updateProvinces,\r\n} from \"app/redux/reducers/ProvinceReduces\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\ntoast.configure({\r\n  autoClose: 1500,\r\n  draggable: false,\r\n  limit: 3,\r\n});\r\n\r\nfunction* getAllProvincesSaga() {\r\n  try {\r\n    const response = yield call(getAllProvinces);\r\n    if (response.code === 200) {\r\n      yield put(showAllProvinces(response?.data));\r\n    } else {\r\n      console.error(\"Error in province saga\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error in province saga:\", error);\r\n  }\r\n}\r\nfunction* addProvincesSaga(action) {\r\n  try {\r\n    const response = yield call(addProvincesApi, action.payload);\r\n    if (response && response.code === 200) {\r\n      yield put(addProvinces(response.data));\r\n      toast.success(\"Thêm Tỉnh/Thành phố thành công!\");\r\n    } else {\r\n      toast.error(\"Không thể thêm Tỉnh/thành phố!\");\r\n    }\r\n  } catch (e) {\r\n    console.error(\"Something Wrong With Saga!\", e);\r\n  }\r\n}\r\nfunction* editProvincesSaga(action) {\r\n  // try {\r\n  //   const response = yield call(updateProvincesApi, action.payload);\r\n  //   if (response && response.code === 200) {\r\n  //     yield put(updateProvinces(action.payload));\r\n  //     toast.success(\"Sửa dữ liệu thành công\");\r\n  //   }\r\n  // } catch (e) {\r\n  //   console.error(\"Something Wrong With Saga!\", e);\r\n  // }\r\n  con\r\n}\r\nexport default function* provincesSaga() {\r\n  yield takeEvery(\"ALL_PROVINCES_REQUEST\", getAllProvincesSaga);\r\n  yield takeEvery(\"ADD_PROVINCES_REQUEST\", addProvincesSaga);\r\n  yield takeEvery(\"EDIT_PROVINCES_REQUEST\", editProvincesSaga);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}