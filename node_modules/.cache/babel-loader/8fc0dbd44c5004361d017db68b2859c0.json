{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getAllProvincesSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(addProvincesSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(editProvincesSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(deleteProvincesSaga),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(searchProvincesSaga),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(provincesSaga);\n\nimport { call, takeEvery, put } from \"redux-saga/effects\";\nimport { addProvincesApi, deleteProvincesApi, getAllProvinces, searchProvincesApi, updateProvincesApi } from \"./ProvicesApi\";\nimport { addProvinces, deleteProvincesReducer, searchProvincesReducer, showAllProvinces, updateProvinces } from \"app/redux/reducers/ProvinceReduces\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { typeProvinces } from \"app/redux/constants\";\ntoast.configure({\n  autoClose: 1500,\n  draggable: false,\n  limit: 3\n});\n\nfunction getAllProvincesSaga() {\n  var response;\n  return _regeneratorRuntime.wrap(function getAllProvincesSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(getAllProvinces);\n\n        case 3:\n          response = _context.sent;\n\n          if (!(response.code === 200)) {\n            _context.next = 9;\n            break;\n          }\n\n          _context.next = 7;\n          return put(showAllProvinces(response === null || response === void 0 ? void 0 : response.data));\n\n        case 7:\n          _context.next = 10;\n          break;\n\n        case 9:\n          console.error(\"Error in province saga\");\n\n        case 10:\n          _context.next = 15;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(\"Error in province saga:\", _context.t0);\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 12]]);\n}\n\nfunction addProvincesSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function addProvincesSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(addProvincesApi, action.payload);\n\n        case 3:\n          response = _context2.sent;\n\n          if (!(response && response.code === 200)) {\n            _context2.next = 10;\n            break;\n          }\n\n          _context2.next = 7;\n          return put(addProvinces(response.data));\n\n        case 7:\n          toast.success(\"Thêm Tỉnh/Thành phố thành công!\");\n          _context2.next = 11;\n          break;\n\n        case 10:\n          toast.error(\"Không thể thêm Tỉnh/thành phố!\");\n\n        case 11:\n          _context2.next = 16;\n          break;\n\n        case 13:\n          _context2.prev = 13;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(\"Something Wrong With Saga!\", _context2.t0);\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 13]]);\n}\n\nfunction editProvincesSaga(action) {\n  var response, _response$data;\n\n  return _regeneratorRuntime.wrap(function editProvincesSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(updateProvincesApi, action.payload, action.data);\n\n        case 3:\n          response = _context3.sent;\n\n          if (!(response && response.data && response.data.code === 200)) {\n            _context3.next = 10;\n            break;\n          }\n\n          _context3.next = 7;\n          return put(updateProvinces(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data));\n\n        case 7:\n          toast.success(\"Sửa dữ liệu thành công\");\n          _context3.next = 11;\n          break;\n\n        case 10:\n          toast.error(\"Sửa dữ liệu thất bại\");\n\n        case 11:\n          _context3.next = 16;\n          break;\n\n        case 13:\n          _context3.prev = 13;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(\"Something Wrong With Saga!\", _context3.t0);\n\n        case 16:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 13]]);\n}\n\nfunction deleteProvincesSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function deleteProvincesSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(deleteProvincesApi, action.payload);\n\n        case 3:\n          response = _context4.sent;\n\n          if (!(response && response.code === 200)) {\n            _context4.next = 10;\n            break;\n          }\n\n          _context4.next = 7;\n          return put(deleteProvincesReducer(action.payload));\n\n        case 7:\n          toast.success(\"Xóa Thành phố thành công!\");\n          _context4.next = 11;\n          break;\n\n        case 10:\n          toast.error(\"Xóa thành phố thất bại\");\n\n        case 11:\n          _context4.next = 16;\n          break;\n\n        case 13:\n          _context4.prev = 13;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.error(\"Error from Province Saga\");\n\n        case 16:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 13]]);\n}\n\nfunction searchProvincesSaga(action) {\n  var response, _response$data2;\n\n  return _regeneratorRuntime.wrap(function searchProvincesSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(searchProvincesApi, action.payload);\n\n        case 3:\n          response = _context5.sent;\n\n          if (!(response && response.code === 200)) {\n            _context5.next = 7;\n            break;\n          }\n\n          _context5.next = 7;\n          return put(searchProvincesReducer(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.content));\n\n        case 7:\n          _context5.next = 12;\n          break;\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(\"Error from Saga\");\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 9]]);\n}\n\nexport default function provincesSaga() {\n  return _regeneratorRuntime.wrap(function provincesSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(typeProvinces.ALL_PROVINCES_REQUEST, getAllProvincesSaga);\n\n        case 2:\n          _context6.next = 4;\n          return takeEvery(typeProvinces.ADD_PROVINCES_REQUEST, addProvincesSaga);\n\n        case 4:\n          _context6.next = 6;\n          return takeEvery(\"EDIT_PROVINCES_REQUEST\", editProvincesSaga);\n\n        case 6:\n          _context6.next = 8;\n          return takeEvery(\"DELETE_PROVINCE_REQUEST\", deleteProvincesSaga);\n\n        case 8:\n          _context6.next = 10;\n          return takeEvery(\"SEARCH_PROVINCES_REQUEST\", searchProvincesSaga);\n\n        case 10:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/redux/sagas/ProvincesSaga/ProvinceSaga.js"],"names":["getAllProvincesSaga","addProvincesSaga","editProvincesSaga","deleteProvincesSaga","searchProvincesSaga","provincesSaga","call","takeEvery","put","addProvincesApi","deleteProvincesApi","getAllProvinces","searchProvincesApi","updateProvincesApi","addProvinces","deleteProvincesReducer","searchProvincesReducer","showAllProvinces","updateProvinces","toast","typeProvinces","configure","autoClose","draggable","limit","response","code","data","console","error","action","payload","success","content","ALL_PROVINCES_REQUEST","ADD_PROVINCES_REQUEST"],"mappings":"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","sourcesContent":["import { call, takeEvery, put } from \"redux-saga/effects\";\r\nimport {\r\n  addProvincesApi,\r\n  deleteProvincesApi,\r\n  getAllProvinces,\r\n  searchProvincesApi,\r\n  updateProvincesApi,\r\n} from \"./ProvicesApi\";\r\nimport {\r\n  addProvinces,\r\n  deleteProvincesReducer,\r\n  searchProvincesReducer,\r\n  showAllProvinces,\r\n  updateProvinces,\r\n} from \"app/redux/reducers/ProvinceReduces\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { typeProvinces } from \"app/redux/constants\";\r\ntoast.configure({\r\n  autoClose: 1500,\r\n  draggable: false,\r\n  limit: 3,\r\n});\r\n\r\nfunction* getAllProvincesSaga() {\r\n  try {\r\n    const response = yield call(getAllProvinces);\r\n    if (response.code === 200) {\r\n      yield put(showAllProvinces(response?.data));\r\n    } else {\r\n      console.error(\"Error in province saga\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error in province saga:\", error);\r\n  }\r\n}\r\nfunction* addProvincesSaga(action) {\r\n  try {\r\n    const response = yield call(addProvincesApi, action.payload);\r\n    if (response && response.code === 200) {\r\n      yield put(addProvinces(response.data));\r\n      toast.success(\"Thêm Tỉnh/Thành phố thành công!\");\r\n    } else {\r\n      toast.error(\"Không thể thêm Tỉnh/thành phố!\");\r\n    }\r\n  } catch (e) {\r\n    console.error(\"Something Wrong With Saga!\", e);\r\n  }\r\n}\r\nfunction* editProvincesSaga(action) {\r\n  try {\r\n    const response = yield call(\r\n      updateProvincesApi,\r\n      action.payload,\r\n      action.data\r\n    );\r\n    if (response && response.data && response.data.code === 200) {\r\n      yield put(updateProvinces(response?.data?.data));\r\n      toast.success(\"Sửa dữ liệu thành công\");\r\n    } else {\r\n      toast.error(\"Sửa dữ liệu thất bại\");\r\n    }\r\n  } catch (e) {\r\n    console.error(\"Something Wrong With Saga!\", e);\r\n  }\r\n}\r\nfunction* deleteProvincesSaga(action) {\r\n  try {\r\n    const response = yield call(deleteProvincesApi, action.payload);\r\n    if (response && response.code === 200) {\r\n      yield put(deleteProvincesReducer(action.payload));\r\n      toast.success(\"Xóa Thành phố thành công!\");\r\n    } else {\r\n      toast.error(\"Xóa thành phố thất bại\");\r\n    }\r\n  } catch (e) {\r\n    console.error(\"Error from Province Saga\");\r\n  }\r\n}\r\nfunction* searchProvincesSaga(action) {\r\n  try {\r\n    const response = yield call(searchProvincesApi, action.payload);\r\n    if (response && response.code === 200) {\r\n      yield put(searchProvincesReducer(response?.data?.content));\r\n    }\r\n  } catch (e) {\r\n    console.error(\"Error from Saga\");\r\n  }\r\n}\r\nexport default function* provincesSaga() {\r\n  yield takeEvery(typeProvinces.ALL_PROVINCES_REQUEST, getAllProvincesSaga);\r\n  yield takeEvery(typeProvinces.ADD_PROVINCES_REQUEST, addProvincesSaga);\r\n  yield takeEvery(\"EDIT_PROVINCES_REQUEST\", editProvincesSaga);\r\n  yield takeEvery(\"DELETE_PROVINCE_REQUEST\", deleteProvincesSaga);\r\n  yield takeEvery(\"SEARCH_PROVINCES_REQUEST\", searchProvincesSaga);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}