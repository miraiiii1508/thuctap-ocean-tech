{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getAllDistrictSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(addDistrictsSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(updateDistrictSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(districtSaga);\n\nimport { call, takeEvery, put } from \"redux-saga/effects\";\nimport { addDistrictsApi, getAllDistrictApi, updateDistrictsApi } from \"./DistrictApi\";\nimport { addDistrictSaga, getAllDistrict, getAllDistrictReducer, updateDistrictReducer } from \"app/redux/reducers/DistrictReducer\";\nimport { toast } from \"react-toastify\";\nimport { ErrorRounded } from \"@material-ui/icons\";\n\nfunction getAllDistrictSaga() {\n  var response;\n  return _regeneratorRuntime.wrap(function getAllDistrictSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(getAllDistrictApi);\n\n        case 3:\n          response = _context.sent;\n\n          if (!(response.code === 200)) {\n            _context.next = 9;\n            break;\n          }\n\n          _context.next = 7;\n          return put(getAllDistrictReducer(response === null || response === void 0 ? void 0 : response.data));\n\n        case 7:\n          _context.next = 10;\n          break;\n\n        case 9:\n          console.error(\"Error in provinces saga\");\n\n        case 10:\n          _context.next = 15;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(\"Error in provinces saga:\", _context.t0);\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 12]]);\n}\n\nfunction addDistrictsSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function addDistrictsSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(addDistrictsApi, action.payload);\n\n        case 3:\n          response = _context2.sent;\n\n          if (!(response && response.code === 200)) {\n            _context2.next = 10;\n            break;\n          }\n\n          _context2.next = 7;\n          return put(addDistrictSaga(response === null || response === void 0 ? void 0 : response.data));\n\n        case 7:\n          toast.success(\"Thêm thành công\");\n          _context2.next = 11;\n          break;\n\n        case 10:\n          toast.error(\"Thêm thất bại\");\n\n        case 11:\n          _context2.next = 16;\n          break;\n\n        case 13:\n          _context2.prev = 13;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(\"Something Wrong With Saga\", _context2.t0);\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 13]]);\n}\n\nfunction updateDistrictSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function updateDistrictSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(updateDistrictsApi, action.id, action.data);\n\n        case 3:\n          response = _context3.sent;\n\n          if (!(response && response.data && response.data.code === 200)) {\n            _context3.next = 7;\n            break;\n          }\n\n          _context3.next = 7;\n          return put(updateDistrictReducer(response));\n\n        case 7:\n          _context3.next = 12;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 9]]);\n}\n\nexport default function districtSaga() {\n  return _regeneratorRuntime.wrap(function districtSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(\"GET_ALL_DISTRICT_SAGA_REQUEST\", getAllDistrictSaga);\n\n        case 2:\n          _context4.next = 4;\n          return takeEvery(\"ADD_DISTRICT_REQUEST\", addDistrictsSaga);\n\n        case 4:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/redux/sagas/DistrictSaga/DistrictSaga.js"],"names":["getAllDistrictSaga","addDistrictsSaga","updateDistrictSaga","districtSaga","call","takeEvery","put","addDistrictsApi","getAllDistrictApi","updateDistrictsApi","addDistrictSaga","getAllDistrict","getAllDistrictReducer","updateDistrictReducer","toast","ErrorRounded","response","code","data","console","error","action","payload","success","id"],"mappings":";;oDAUUA,kB;qDAYAC,gB;qDAaAC,kB;qDAWeC,Y;;AA9CzB,SAASC,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,eAAT,EAA0BC,iBAA1B,EAA6CC,kBAA7C,QAAuE,eAAvE;AACA,SACEC,eADF,EAEEC,cAFF,EAGEC,qBAHF,EAIEC,qBAJF,QAKO,oCALP;AAMA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,YAAT,QAA6B,oBAA7B;;AACA,SAAUf,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEqB,iBAAMI,IAAI,CAACI,iBAAD,CAAV;;AAFrB;AAEUQ,UAAAA,QAFV;;AAAA,gBAGQA,QAAQ,CAACC,IAAT,KAAkB,GAH1B;AAAA;AAAA;AAAA;;AAAA;AAIM,iBAAMX,GAAG,CAACM,qBAAqB,CAACI,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEE,IAAX,CAAtB,CAAT;;AAJN;AAAA;AAAA;;AAAA;AAMMC,UAAAA,OAAO,CAACC,KAAR,CAAc,yBAAd;;AANN;AAAA;AAAA;;AAAA;AAAA;AAAA;AASID,UAAAA,OAAO,CAACC,KAAR,CAAc,0BAAd;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,SAAUnB,gBAAV,CAA2BoB,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEqB,iBAAMjB,IAAI,CAACG,eAAD,EAAkBc,MAAM,CAACC,OAAzB,CAAV;;AAFrB;AAEUN,UAAAA,QAFV;;AAAA,gBAGQA,QAAQ,IAAIA,QAAQ,CAACC,IAAT,KAAkB,GAHtC;AAAA;AAAA;AAAA;;AAAA;AAIM,iBAAMX,GAAG,CAACI,eAAe,CAACM,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEE,IAAX,CAAhB,CAAT;;AAJN;AAKMJ,UAAAA,KAAK,CAACS,OAAN,CAAc,kBAAd;AALN;AAAA;;AAAA;AAOMT,UAAAA,KAAK,CAACM,KAAN,CAAY,iBAAZ;;AAPN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUID,UAAAA,OAAO,CAACC,KAAR,CAAc,2BAAd;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAAUlB,kBAAV,CAA6BmB,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEqB,iBAAMjB,IAAI,CAACK,kBAAD,EAAoBY,MAAM,CAACG,EAA3B,EAA+BH,MAAM,CAACH,IAAtC,CAAV;;AAFrB;AAEUF,UAAAA,QAFV;;AAAA,gBAGOA,QAAQ,IAAIA,QAAQ,CAACE,IAArB,IAA6BF,QAAQ,CAACE,IAAT,CAAcD,IAAd,KAAqB,GAHzD;AAAA;AAAA;AAAA;;AAAA;AAIM,iBAAMX,GAAG,CAACO,qBAAqB,CAACG,QAAD,CAAtB,CAAT;;AAJN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIG,UAAAA,OAAO,CAACC,KAAR;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,eAAe,SAAUjB,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAME,SAAS,CAAC,+BAAD,EAAkCL,kBAAlC,CAAf;;AADa;AAAA;AAEb,iBAAMK,SAAS,CAAC,sBAAD,EAAyBJ,gBAAzB,CAAf;;AAFa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, takeEvery, put } from \"redux-saga/effects\";\r\nimport { addDistrictsApi, getAllDistrictApi, updateDistrictsApi } from \"./DistrictApi\";\r\nimport {\r\n  addDistrictSaga,\r\n  getAllDistrict,\r\n  getAllDistrictReducer,\r\n  updateDistrictReducer,\r\n} from \"app/redux/reducers/DistrictReducer\";\r\nimport { toast } from \"react-toastify\";\r\nimport { ErrorRounded } from \"@material-ui/icons\";\r\nfunction* getAllDistrictSaga() {\r\n  try {\r\n    const response = yield call(getAllDistrictApi);\r\n    if (response.code === 200) {\r\n      yield put(getAllDistrictReducer(response?.data));\r\n    } else {\r\n      console.error(\"Error in provinces saga\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error in provinces saga:\", error);\r\n  }\r\n}\r\nfunction* addDistrictsSaga(action) {\r\n  try {\r\n    const response = yield call(addDistrictsApi, action.payload);\r\n    if (response && response.code === 200) {\r\n      yield put(addDistrictSaga(response?.data));\r\n      toast.success(\"Thêm thành công\");\r\n    } else {\r\n      toast.error(\"Thêm thất bại\");\r\n    }\r\n  } catch (e) {\r\n    console.error(\"Something Wrong With Saga\", e);\r\n  }\r\n}\r\nfunction* updateDistrictSaga(action){\r\n  try{\r\n    const response = yield call(updateDistrictsApi,action.id ,action.data)\r\n    if(response && response.data && response.data.code===200){\r\n      yield put(updateDistrictReducer(response))\r\n    }\r\n  }\r\n  catch(e){\r\n    console.error(e);\r\n  }\r\n}\r\nexport default function* districtSaga() {\r\n  yield takeEvery(\"GET_ALL_DISTRICT_SAGA_REQUEST\", getAllDistrictSaga);\r\n  yield takeEvery(\"ADD_DISTRICT_REQUEST\", addDistrictsSaga);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}