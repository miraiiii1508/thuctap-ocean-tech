{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getAllEmployeesSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(addEmployeeSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(updateEmployeeSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(EmployeeSaga);\n\nimport { call, put, takeEvery } from \"redux-saga/effects\";\nimport { addEmployeesApi, getAllEmployeesApi, updateEmployeesApi } from \"./EmployeeApi\";\nimport { SUCCESS_CODE, typeEmployee } from \"app/redux/constants\";\nimport { addEmployeeReducer, getAllEmployeesReducer, updateEmployeeReducer } from \"app/redux/reducers/EmployeesReducer\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure({\n  autoClose: 1500,\n  draggable: false,\n  limit: 3\n});\n\nfunction getAllEmployeesSaga() {\n  var response;\n  return _regeneratorRuntime.wrap(function getAllEmployeesSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(getAllEmployeesApi);\n\n        case 3:\n          response = _context.sent;\n\n          if (!(response && response.code === SUCCESS_CODE)) {\n            _context.next = 8;\n            break;\n          }\n\n          console.log(response);\n          _context.next = 8;\n          return put(getAllEmployeesReducer(response === null || response === void 0 ? void 0 : response.data));\n\n        case 8:\n          _context.next = 13;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\n\nfunction addEmployeeSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function addEmployeeSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(addEmployeesApi, action.payload);\n\n        case 3:\n          response = _context2.sent;\n\n          if (!(response && response.code === SUCCESS_CODE)) {\n            _context2.next = 10;\n            break;\n          }\n\n          _context2.next = 7;\n          return put(addEmployeeReducer(response === null || response === void 0 ? void 0 : response.data));\n\n        case 7:\n          toast.success(\"Thêm nhân viên thành công\");\n          _context2.next = 11;\n          break;\n\n        case 10:\n          toast.error(\"Thêm nhân viên thất bại\");\n\n        case 11:\n          _context2.next = 16;\n          break;\n\n        case 13:\n          _context2.prev = 13;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(_context2.t0);\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 13]]);\n}\n\nfunction updateEmployeeSaga(action) {\n  var response, _response$data;\n\n  return _regeneratorRuntime.wrap(function updateEmployeeSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(updateEmployeesApi, action.id, action.updateData);\n\n        case 3:\n          response = _context3.sent;\n          console.log(response.data);\n\n          if (!(response && response.data.code === SUCCESS_CODE)) {\n            _context3.next = 11;\n            break;\n          }\n\n          _context3.next = 8;\n          return put(updateEmployeeReducer(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data));\n\n        case 8:\n          toast.success(\"Thêm nhân viên mới thành công\");\n          _context3.next = 12;\n          break;\n\n        case 11:\n          toast.error(\"Sửa nhân viên thất bại\");\n\n        case 12:\n          _context3.next = 17;\n          break;\n\n        case 14:\n          _context3.prev = 14;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n\n        case 17:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 14]]);\n}\n\nexport default function EmployeeSaga() {\n  return _regeneratorRuntime.wrap(function EmployeeSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(typeEmployee.GET_ALL_EMPLOYEE_REQUEST, getAllEmployeesSaga);\n\n        case 2:\n          _context4.next = 4;\n          return takeEvery(typeEmployee.ADD_EMPLOYEE_REQUEST, addEmployeeSaga);\n\n        case 4:\n          _context4.next = 6;\n          return takeEvery(typeEmployee.UPDATE_EMPLOYEE_REQUEST, updateEmployeeSaga);\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/redux/sagas/StaffSaga/EmployeeSaga.js"],"names":["getAllEmployeesSaga","addEmployeeSaga","updateEmployeeSaga","EmployeeSaga","call","put","takeEvery","addEmployeesApi","getAllEmployeesApi","updateEmployeesApi","SUCCESS_CODE","typeEmployee","addEmployeeReducer","getAllEmployeesReducer","updateEmployeeReducer","toast","configure","autoClose","draggable","limit","response","code","console","log","data","error","action","payload","success","id","updateData","GET_ALL_EMPLOYEE_REQUEST","ADD_EMPLOYEE_REQUEST","UPDATE_EMPLOYEE_REQUEST"],"mappings":"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","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  addEmployeesApi,\r\n  getAllEmployeesApi,\r\n  updateEmployeesApi,\r\n} from \"./EmployeeApi\";\r\nimport { SUCCESS_CODE, typeEmployee } from \"app/redux/constants\";\r\nimport {\r\n  addEmployeeReducer,\r\n  getAllEmployeesReducer,\r\n  updateEmployeeReducer,\r\n} from \"app/redux/reducers/EmployeesReducer\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\ntoast.configure({\r\n  autoClose: 1500,\r\n  draggable: false,\r\n  limit: 3,\r\n});\r\nfunction* getAllEmployeesSaga() {\r\n  try {\r\n    const response = yield call(getAllEmployeesApi);\r\n    if (response && response.code === SUCCESS_CODE) {\r\n      console.log(response);\r\n      yield put(getAllEmployeesReducer(response?.data));\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\nfunction* addEmployeeSaga(action) {\r\n  try {\r\n    const response = yield call(addEmployeesApi, action.payload);\r\n    if (response && response.code === SUCCESS_CODE) {\r\n      yield put(addEmployeeReducer(response?.data));\r\n      toast.success(\"Thêm nhân viên thành công\");\r\n    } else {\r\n      toast.error(\"Thêm nhân viên thất bại\");\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\nfunction* updateEmployeeSaga(action) {\r\n  try {\r\n    const response = yield call(\r\n      updateEmployeesApi,\r\n      action.id,\r\n      action.updateData\r\n    );\r\n    console.log(response.data);\r\n    if (response && response.data.code === SUCCESS_CODE) {\r\n      yield put(updateEmployeeReducer(response?.data?.data));\r\n      toast.success(\"Thêm nhân viên mới thành công\");\r\n    } else {\r\n      toast.error(\"Sửa nhân viên thất bại\");\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\nexport default function* EmployeeSaga() {\r\n  yield takeEvery(typeEmployee.GET_ALL_EMPLOYEE_REQUEST, getAllEmployeesSaga);\r\n  yield takeEvery(typeEmployee.ADD_EMPLOYEE_REQUEST, addEmployeeSaga);\r\n  yield takeEvery(typeEmployee.UPDATE_EMPLOYEE_REQUEST, updateEmployeeSaga);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}