{"ast":null,"code":"import _objectSpread from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nvar initialState = {\n  provinces: [],\n  districtsByProvince: [],\n  reload: false\n};\nexport var provincesSlice = createSlice({\n  name: \"provinces\",\n  initialState: initialState,\n  reducers: {\n    addProvinces: function addProvinces(state, action) {\n      state.provinces = [].concat(_toConsumableArray(state.provinces), [action.payload]);\n    },\n    updateProvinces: function updateProvinces(state, action) {\n      var _action$payload = action.payload,\n          id = _action$payload.id,\n          updatedProvince = _objectWithoutProperties(_action$payload, [\"id\"]);\n\n      var index = state.provinces.findIndex(function (province) {\n        return province.id === id;\n      });\n\n      if (index !== -1) {\n        state.provinces[index] = _objectSpread(_objectSpread({}, state.provinces[index]), updatedProvince);\n      }\n    },\n    deleteProvincesReducer: function deleteProvincesReducer(state, action) {\n      state.provinces = state.provinces.filter(function (province) {\n        return province.id !== action.payload;\n      });\n      state.reload = !state.reload;\n    },\n    showAllProvinces: function showAllProvinces(state, action) {\n      state.provinces = action.payload;\n    },\n    searchProvincesReducer: function searchProvincesReducer(state, action) {\n      state.provinces = action.payload;\n    }\n  }\n});\nvar _provincesSlice$actio = provincesSlice.actions,\n    addProvinces = _provincesSlice$actio.addProvinces,\n    updateProvinces = _provincesSlice$actio.updateProvinces,\n    deleteProvincesReducer = _provincesSlice$actio.deleteProvincesReducer,\n    showAllProvinces = _provincesSlice$actio.showAllProvinces,\n    searchProvincesReducer = _provincesSlice$actio.searchProvincesReducer;\nexport { addProvinces, updateProvinces, deleteProvincesReducer, showAllProvinces, searchProvincesReducer };\nexport default provincesSlice.reducer;","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/redux/reducers/ProvinceReduces.js"],"names":["createSlice","initialState","provinces","districtsByProvince","reload","provincesSlice","name","reducers","addProvinces","state","action","payload","updateProvinces","id","updatedProvince","index","findIndex","province","deleteProvincesReducer","filter","showAllProvinces","searchProvincesReducer","actions","reducer"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,mBAAmB,EAAE,EAFF;AAGnBC,EAAAA,MAAM,EAAE;AAHW,CAArB;AAKA,OAAO,IAAMC,cAAc,GAAGL,WAAW,CAAC;AACxCM,EAAAA,IAAI,EAAE,WADkC;AAExCL,EAAAA,YAAY,EAAZA,YAFwC;AAGxCM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAE,sBAACC,KAAD,EAAQC,MAAR,EAAmB;AAC/BD,MAAAA,KAAK,CAACP,SAAN,gCAAsBO,KAAK,CAACP,SAA5B,IAAuCQ,MAAM,CAACC,OAA9C;AACD,KAHO;AAIRC,IAAAA,eAAe,EAAE,yBAACH,KAAD,EAAQC,MAAR,EAAmB;AAAA,4BACCA,MAAM,CAACC,OADR;AAAA,UAC1BE,EAD0B,mBAC1BA,EAD0B;AAAA,UACnBC,eADmB;;AAElC,UAAMC,KAAK,GAAGN,KAAK,CAACP,SAAN,CAAgBc,SAAhB,CAA0B,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACJ,EAAT,KAAgBA,EAA9B;AAAA,OAA1B,CAAd;;AACA,UAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBN,QAAAA,KAAK,CAACP,SAAN,CAAgBa,KAAhB,oCACKN,KAAK,CAACP,SAAN,CAAgBa,KAAhB,CADL,GAEKD,eAFL;AAID;AACF,KAbO;AAcRI,IAAAA,sBAAsB,EAAE,gCAACT,KAAD,EAAQC,MAAR,EAAmB;AACzCD,MAAAA,KAAK,CAACP,SAAN,GAAkBO,KAAK,CAACP,SAAN,CAAgBiB,MAAhB,CAChB,UAACF,QAAD;AAAA,eAAcA,QAAQ,CAACJ,EAAT,KAAgBH,MAAM,CAACC,OAArC;AAAA,OADgB,CAAlB;AAGAF,MAAAA,KAAK,CAACL,MAAN,GAAe,CAACK,KAAK,CAACL,MAAtB;AACD,KAnBO;AAoBRgB,IAAAA,gBAAgB,EAAE,0BAACX,KAAD,EAAQC,MAAR,EAAmB;AACnCD,MAAAA,KAAK,CAACP,SAAN,GAAkBQ,MAAM,CAACC,OAAzB;AACD,KAtBO;AAuBRU,IAAAA,sBAAsB,EAAE,gCAACZ,KAAD,EAAQC,MAAR,EAAmB;AACzCD,MAAAA,KAAK,CAACP,SAAN,GAAkBQ,MAAM,CAACC,OAAzB;AACD;AAzBO;AAH8B,CAAD,CAAlC;4BAqCHN,cAAc,CAACiB,O;IALjBd,Y,yBAAAA,Y;IACAI,e,yBAAAA,e;IACAM,sB,yBAAAA,sB;IACAE,gB,yBAAAA,gB;IACAC,sB,yBAAAA,sB;;AAGF,eAAehB,cAAc,CAACkB,OAA9B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialState = {\r\n  provinces: [],\r\n  districtsByProvince: [],\r\n  reload: false,\r\n};\r\nexport const provincesSlice = createSlice({\r\n  name: \"provinces\",\r\n  initialState,\r\n  reducers: {\r\n    addProvinces: (state, action) => {\r\n      state.provinces = [...state.provinces, action.payload];\r\n    },\r\n    updateProvinces: (state, action) => {\r\n      const { id, ...updatedProvince } = action.payload;\r\n      const index = state.provinces.findIndex((province) => province.id === id);\r\n      if (index !== -1) {\r\n        state.provinces[index] = {\r\n          ...state.provinces[index],\r\n          ...updatedProvince,\r\n        };\r\n      }\r\n    },\r\n    deleteProvincesReducer: (state, action) => {\r\n      state.provinces = state.provinces.filter(\r\n        (province) => province.id !== action.payload\r\n      );\r\n      state.reload = !state.reload;\r\n    },\r\n    showAllProvinces: (state, action) => {\r\n      state.provinces = action.payload;\r\n    },\r\n    searchProvincesReducer: (state, action) => {\r\n      state.provinces = action.payload;\r\n    },\r\n  },\r\n});\r\nexport const {\r\n  addProvinces,\r\n  updateProvinces,\r\n  deleteProvincesReducer,\r\n  showAllProvinces,\r\n  searchProvincesReducer,\r\n} = provincesSlice.actions;\r\n\r\nexport default provincesSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}