{"ast":null,"code":"import _objectSpread from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\src\\\\app\\\\views\\\\Staff\\\\CertificateDialog.jsx\";\n\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, Grid, IconButton, MenuItem, makeStyles } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { ValidatorForm, TextValidator, SelectValidator } from \"react-material-ui-form-validator\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport { toast } from \"react-toastify\";\nimport { useTranslation } from \"react-i18next\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { DatePicker } from \"@material-ui/lab\";\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n});\nvar useStyles = makeStyles({\n  colorStyle: {\n    color: \"red\"\n  },\n  iconClose: {\n    position: \"absolute\",\n    right: 8,\n    top: 8\n  }\n});\n\nvar CertificateDialog = function CertificateDialog(_ref) {\n  var openDialog = _ref.openDialog,\n      certificate = _ref.certificate,\n      handleCloseCertificateDialog = _ref.handleCloseCertificateDialog,\n      handleAddCertificate = _ref.handleAddCertificate,\n      handleUpdateCertificate = _ref.handleUpdateCertificate;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState({\n    id: \"\",\n    name: \"\",\n    code: \"\",\n    effectiveDate: \"\",\n    expirationDate: \"\",\n    provinceId: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      certificateFormData = _useState2[0],\n      setCertificateFormData = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.provinces;\n  }),\n      provinces = _useSelector.provinces;\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formData = _useState4[0],\n      setFormData = _useState4[1];\n\n  useEffect(function () {\n    setCertificateFormData(certificate);\n\n    if (certificate && certificate.id) {\n      setFormData(\"UPDATE\");\n    } else {\n      setFormData(\"ADD\");\n    }\n  }, [certificate]);\n\n  var handleClose = function handleClose() {\n    handleCloseCertificateDialog();\n  };\n\n  var formatDate = function formatDate(inputDate) {\n    var date = new Date(inputDate);\n    var day = date.getDate();\n    var month = date.getMonth() + 1;\n    var year = date.getFullYear();\n    return \"\".concat(day < 10 ? \"0\" + day : day, \"/\").concat(month < 10 ? \"0\" + month : month, \"/\").concat(year);\n  };\n\n  var handleChange = function handleChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n\n    if (name === \"expirationDate\") {\n      var formattedDate = formatDate(value); // Format the date here\n\n      console.log(\"Formatted Date:\", formattedDate); // Check the formatted date\n\n      setCertificateFormData(_objectSpread(_objectSpread({}, certificateFormData), {}, {\n        [name]: formattedDate\n      }));\n    } else {\n      setCertificateFormData(_objectSpread(_objectSpread({}, certificateFormData), {}, {\n        [name]: value\n      }));\n    }\n  };\n\n  var handleSubmit = function handleSubmit() {\n    switch (formData) {\n      case \"ADD\":\n        handleAddCertificate(certificateFormData);\n        toast.success(\"Thêm chứng chỉ thành công\");\n        break;\n\n      case \"UPDATE\":\n        handleUpdateCertificate(certificateFormData);\n        toast.success(\"Sửa chứng chỉ thành công\");\n        break;\n\n      default:\n        break;\n    }\n\n    handleClose();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: openDialog,\n    \"aria-labelledby\": \"form-dialog-title\",\n    onClose: handleClose,\n    maxWidth: \"md\",\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mb-20 styleColor\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, ((certificate === null || certificate === void 0 ? void 0 : certificate.id) ? t(\"general.update\") : t(\"Add\")) + \" \" + t(\"Chứng chỉ\")), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.iconClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    color: \"error\",\n    onClick: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ValidatorForm, {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"mb-8\",\n    container: true,\n    spacing: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 6,\n    md: 6,\n    sm: 12,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-16\",\n    name: \"code\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 23\n      }\n    }, \" * \"), \"M\\xE3 ch\\u1EE9ng ch\\u1EC9\"),\n    value: certificateFormData.code || \"\",\n    onChange: handleChange,\n    fullWidth: true,\n    validators: [\"required\", \"matchRegexp:^.{6,10}$\"],\n    errorMessages: [\"Mã chứng chỉ không được để trống!\", \"Mã chứng chỉ phải ít 6 chữ số và nhỏ hơn 10 chữ số!\"],\n    placeholder: \"Nh\\u1EADp m\\xE3\",\n    variant: \"outlined\",\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-16\",\n    name: \"name\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 23\n      }\n    }, \" * \"), \"T\\xEAn ch\\u1EE9ng ch\\u1EC9\"),\n    value: certificateFormData.name || \"\",\n    onChange: handleChange,\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Tên chứng chỉ không được để trống !\"],\n    placeholder: \"Nh\\u1EADp H\\u1ECD v\\xE0 t\\xEAn\",\n    variant: \"outlined\",\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 6,\n    md: 6,\n    sm: 12,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-10\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 23\n      }\n    }, \" * \"), \"Ngày cấp chứng chỉ\"),\n    onChange: handleChange,\n    type: \"date\",\n    name: \"effectiveDate\",\n    value: certificateFormData.effectiveDate,\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng nhập ngày cấp !\"],\n    variant: \"outlined\",\n    size: \"small\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    label: \"Basic date picker\",\n    className: \"w-100 mb-16\",\n    name: \"expirationDate\",\n    type: \"text\",\n    value: certificateFormData.expirationDate ? formatDate(certificateFormData.expirationDate) : \"\",\n    onChange: handleChange,\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng nhập ngày hết hạn !\"],\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectValidator, {\n    name: \"provinceId\",\n    value: certificateFormData.provinceId || \"\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    }, \" * \"), \"T\\u1EC9nh/Th\\xE0nh ph\\u1ED1\"),\n    onChange: handleChange,\n    validators: [\"required\"],\n    errorMessages: [\"Tỉnh/Thành phố không được để trống\"],\n    className: \"w-100\",\n    variant: \"outlined\",\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 19\n    }\n  }, provinces.map(function (item) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: item.id,\n      value: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 25\n      }\n    }, item.name);\n  })))))), /*#__PURE__*/React.createElement(DialogActions, {\n    spacing: 4,\n    style: {\n      justifyContent: \"center\"\n    },\n    className: \"flex flex-end flex-middle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }, \"H\\u1EE7y\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }\n  }, (certificate === null || certificate === void 0 ? void 0 : certificate.id) ? t(\"general.update\") : t(\"general.save\"))))));\n};\n\nexport default CertificateDialog;","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/views/Staff/CertificateDialog.jsx"],"names":["Button","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","Grid","IconButton","MenuItem","makeStyles","React","useEffect","useState","ValidatorForm","TextValidator","SelectValidator","useDispatch","useSelector","Close","CloseIcon","toast","useTranslation","DatePicker","configure","autoClose","draggable","limit","useStyles","colorStyle","color","iconClose","position","right","top","CertificateDialog","openDialog","certificate","handleCloseCertificateDialog","handleAddCertificate","handleUpdateCertificate","classes","t","id","name","code","effectiveDate","expirationDate","provinceId","certificateFormData","setCertificateFormData","state","provinces","formData","setFormData","handleClose","formatDate","inputDate","date","Date","day","getDate","month","getMonth","year","getFullYear","handleChange","event","target","value","formattedDate","console","log","handleSubmit","success","shrink","map","item","justifyContent"],"mappings":"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","sourcesContent":["import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControl,\r\n  Grid,\r\n  IconButton,\r\n  MenuItem,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  ValidatorForm,\r\n  TextValidator,\r\n  SelectValidator,\r\n} from \"react-material-ui-form-validator\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { DatePicker } from \"@material-ui/lab\";\r\ntoast.configure({\r\n  autoClose: 1000,\r\n  draggable: false,\r\n  limit: 3,\r\n});\r\nconst useStyles = makeStyles({\r\n  colorStyle: {\r\n    color: \"red\",\r\n  },\r\n  iconClose: {\r\n    position: \"absolute\",\r\n    right: 8,\r\n    top: 8,\r\n  },\r\n});\r\nconst CertificateDialog = ({\r\n  openDialog,\r\n  certificate,\r\n  handleCloseCertificateDialog,\r\n  handleAddCertificate,\r\n  handleUpdateCertificate,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const [certificateFormData, setCertificateFormData] = useState({\r\n    id: \"\",\r\n    name: \"\",\r\n    code: \"\",\r\n    effectiveDate: \"\",\r\n    expirationDate: \"\",\r\n    provinceId: \"\",\r\n  });\r\n\r\n  const { provinces } = useSelector((state) => state.provinces);\r\n  const [formData, setFormData] = useState(\"\");\r\n  useEffect(() => {\r\n    setCertificateFormData(certificate);\r\n    if (certificate && certificate.id) {\r\n      setFormData(\"UPDATE\");\r\n    } else {\r\n      setFormData(\"ADD\");\r\n    }\r\n  }, [certificate]);\r\n\r\n  const handleClose = () => {\r\n    handleCloseCertificateDialog();\r\n  };\r\n  const formatDate = (inputDate) => {\r\n    const date = new Date(inputDate);\r\n    const day = date.getDate();\r\n    const month = date.getMonth() + 1;\r\n    const year = date.getFullYear();\r\n    return `${day < 10 ? \"0\" + day : day}/${\r\n      month < 10 ? \"0\" + month : month\r\n    }/${year}`;\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    if (name === \"expirationDate\") {\r\n      const formattedDate = formatDate(value); // Format the date here\r\n      console.log(\"Formatted Date:\", formattedDate); // Check the formatted date\r\n      setCertificateFormData({\r\n        ...certificateFormData,\r\n        [name]: formattedDate,\r\n      });\r\n    } else {\r\n      setCertificateFormData({\r\n        ...certificateFormData,\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n  const handleSubmit = () => {\r\n    switch (formData) {\r\n      case \"ADD\":\r\n        handleAddCertificate(certificateFormData);\r\n        toast.success(\"Thêm chứng chỉ thành công\");\r\n        break;\r\n      case \"UPDATE\":\r\n        handleUpdateCertificate(certificateFormData);\r\n        toast.success(\"Sửa chứng chỉ thành công\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    handleClose();\r\n  };\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={openDialog}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        onClose={handleClose}\r\n        maxWidth={\"md\"}\r\n        fullWidth={true}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <span className=\"mb-20 styleColor\">\r\n            {(certificate?.id ? t(\"general.update\") : t(\"Add\")) +\r\n              \" \" +\r\n              t(\"Chứng chỉ\")}\r\n          </span>\r\n          <IconButton aria-label=\"close\" className={classes.iconClose}>\r\n            <CloseIcon color=\"error\" onClick={handleClose} />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <ValidatorForm onSubmit={handleSubmit}>\r\n          <DialogContent dividers>\r\n            <Grid className=\"mb-8\" container spacing={1}>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-16\"\r\n                  name=\"code\"\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Mã chứng chỉ\r\n                    </span>\r\n                  }\r\n                  value={certificateFormData.code || \"\"}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  validators={[\"required\", \"matchRegexp:^.{6,10}$\"]}\r\n                  errorMessages={[\r\n                    \"Mã chứng chỉ không được để trống!\",\r\n                    \"Mã chứng chỉ phải ít 6 chữ số và nhỏ hơn 10 chữ số!\",\r\n                  ]}\r\n                  placeholder=\"Nhập mã\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-16\"\r\n                  name=\"name\"\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Tên chứng chỉ\r\n                    </span>\r\n                  }\r\n                  value={certificateFormData.name || \"\"}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"Tên chứng chỉ không được để trống !\"]}\r\n                  placeholder=\"Nhập Họ và tên\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-10\"\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      {\"Ngày cấp chứng chỉ\"}\r\n                    </span>\r\n                  }\r\n                  onChange={handleChange}\r\n                  type=\"date\"\r\n                  name=\"effectiveDate\"\r\n                  value={certificateFormData.effectiveDate}\r\n                  fullWidth\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"Vui lòng nhập ngày cấp !\"]}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={6}>\r\n                <DatePicker\r\n                  label=\"Basic date picker\"\r\n                  className=\"w-100 mb-16\"\r\n                  name=\"expirationDate\"\r\n                  type=\"text\"\r\n                  value={\r\n                    certificateFormData.expirationDate\r\n                      ? formatDate(certificateFormData.expirationDate)\r\n                      : \"\"\r\n                  }\r\n                  onChange={handleChange}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"Vui lòng nhập ngày hết hạn !\"]}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <FormControl fullWidth>\r\n                  <SelectValidator\r\n                    name=\"provinceId\"\r\n                    value={certificateFormData.provinceId || \"\"}\r\n                    label={\r\n                      <span>\r\n                        <span className={classes.colorStyle}> * </span>\r\n                        Tỉnh/Thành phố\r\n                      </span>\r\n                    }\r\n                    onChange={handleChange}\r\n                    validators={[\"required\"]}\r\n                    errorMessages={[\"Tỉnh/Thành phố không được để trống\"]}\r\n                    className=\"w-100\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  >\r\n                    {provinces.map((item) => {\r\n                      return (\r\n                        <MenuItem key={item.id} value={item.id}>\r\n                          {item.name}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </SelectValidator>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions\r\n            spacing={4}\r\n            style={{ justifyContent: \"center\" }}\r\n            className=\"flex flex-end flex-middle\"\r\n          >\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n              Hủy\r\n            </Button>\r\n            <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n              {certificate?.id ? t(\"general.update\") : t(\"general.save\")}\r\n            </Button>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\nexport default CertificateDialog;\r\n"]},"metadata":{},"sourceType":"module"}