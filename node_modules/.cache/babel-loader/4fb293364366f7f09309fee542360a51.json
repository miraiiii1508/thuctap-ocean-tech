{"ast":null,"code":"import _toConsumableArray from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nvar initialState = {\n  wards: [],\n  reload: false,\n  success: true,\n  error: null\n};\nvar wardSlide = createSlice({\n  name: \"ward\",\n  initialState: initialState,\n  reducers: {\n    showAllWard: function showAllWard(state, action) {\n      state.wards = action.payload;\n    },\n    addWardReducer: function addWardReducer(state, action) {\n      state.wards = [].concat(_toConsumableArray(state.wards), [action.payload]);\n    },\n    deleteWardsReducer: function deleteWardsReducer(state, action) {\n      state.wards = state.wards.filter(function (ward) {\n        return ward.id !== action.payload;\n      });\n      console.log(state.wards);\n    }\n  }\n});\nvar _wardSlide$actions = wardSlide.actions,\n    showAllWard = _wardSlide$actions.showAllWard,\n    deleteWards = _wardSlide$actions.deleteWards;\nexport { showAllWard, deleteWards };\nexport default wardSlide.reducer;","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/redux/reducers/WardReducer.js"],"names":["createSlice","initialState","wards","reload","success","error","wardSlide","name","reducers","showAllWard","state","action","payload","addWardReducer","deleteWardsReducer","filter","ward","id","console","log","actions","deleteWards","reducer"],"mappings":";AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,MAAM,EAAE,KAFW;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAMA,IAAMC,SAAS,GAAGN,WAAW,CAAC;AAC5BO,EAAAA,IAAI,EAAE,MADsB;AAE5BN,EAAAA,YAAY,EAAZA,YAF4B;AAG5BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAE,qBAACC,KAAD,EAAQC,MAAR,EAAmB;AAC9BD,MAAAA,KAAK,CAACR,KAAN,GAAcS,MAAM,CAACC,OAArB;AACD,KAHO;AAIRC,IAAAA,cAAc,EAAC,wBAACH,KAAD,EAAOC,MAAP,EAAgB;AAC7BD,MAAAA,KAAK,CAACR,KAAN,gCAAkBQ,KAAK,CAACR,KAAxB,IAAgCS,MAAM,CAACC,OAAvC;AACD,KANO;AAORE,IAAAA,kBAAkB,EAAE,4BAACJ,KAAD,EAAQC,MAAR,EAAmB;AACrCD,MAAAA,KAAK,CAACR,KAAN,GAAcQ,KAAK,CAACR,KAAN,CAAYa,MAAZ,CAAmB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACC,OAAvB;AAAA,OAAvB,CAAd;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACR,KAAlB;AACD;AAVO;AAHkB,CAAD,CAA7B;yBAgB4CI,SAAS,CAACc,O;IAAvCX,W,sBAAAA,W;IAAaY,W,sBAAAA,W;;AAC5B,eAAef,SAAS,CAACgB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialState = {\r\n  wards: [],\r\n  reload: false,\r\n  success: true,\r\n  error: null,\r\n};\r\nconst wardSlide = createSlice({\r\n  name: \"ward\",\r\n  initialState,\r\n  reducers: {\r\n    showAllWard: (state, action) => {\r\n      state.wards = action.payload;\r\n    },\r\n    addWardReducer:(state,action)=>{\r\n      state.wards = [...state.wards , action.payload]\r\n    },\r\n    deleteWardsReducer: (state, action) => {\r\n      state.wards = state.wards.filter(ward => ward.id !== action.payload);\r\n      console.log(state.wards);\r\n    },\r\n  },\r\n});\r\nexport const { showAllWard, deleteWards } = wardSlide.actions;\r\nexport default wardSlide.reducer;\r\n"]},"metadata":{},"sourceType":"module"}