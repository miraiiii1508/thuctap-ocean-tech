{"ast":null,"code":"import _slicedToArray from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\src\\\\app\\\\views\\\\Staff\\\\ManagerEmployeeDialog.jsx\";\n\nimport { Dialog, DialogContent, DialogTitle, FormControl, Grid, IconButton, makeStyles } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport React, { useEffect, useState } from \"react\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport { SelectValidator, TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\nvar useStyles = makeStyles({\n  colorStyle: {\n    color: \"red\"\n  },\n  iconClose: {\n    position: \"absolute\",\n    right: 8,\n    top: 8\n  }\n});\n\nvar ManagerEmployeeDialog = function ManagerEmployeeDialog(_ref) {\n  var open = _ref.open,\n      onClose = _ref.onClose,\n      employees = _ref.employees;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var defauleValue = {\n    id: \"\"\n  };\n\n  var _useState = useState({\n    defauleValue: defauleValue\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      employeeFormData = _useState2[0],\n      setEmployeeFormData = _useState2[1];\n\n  useEffect(function () {\n    setEmployeeFormData(employees);\n    console.log(employees);\n  }, [employees]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: onClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    maxWidth: \"md\",\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mb-20 styleColor\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, ((employeeFormData === null || employeeFormData === void 0 ? void 0 : employeeFormData.id) ? t(\"general.update\") : t(\"Add\")) + \" \" + t(\"Nhân Viên\")), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.iconClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    color: \"error\",\n    onClick: onClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ValidatorForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"mb-8\",\n    container: true,\n    spacing: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 6,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-8\",\n    name: \"code\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 23\n      }\n    }, \" * \"), \"M\\xE3 nh\\xE2n vi\\xEAn\"),\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng nhập mã Phường/Xã\"],\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 6,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-8\",\n    name: \"name\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 23\n      }\n    }, \" * \"), \"H\\u1ECD V\\xE0 T\\xEAn\"),\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng nhập mã Phường/Xã\"],\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-8\",\n    name: \"name\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 23\n      }\n    }, \" * \"), \"Tu\\u1ED5i\"),\n    fullWidth: true,\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng nhập tên Phường/Xã\"],\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-8\",\n    name: \"area\",\n    type: \"number\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 23\n      }\n    }, \" * \"), \"Email\"),\n    fullWidth: true,\n    validators: [\"required\", \"minNumber:0\"],\n    errorMessages: [\"Vui lòng nhập diện tích\", \"Diện tích không được âm\"],\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"w-100 mb-8\",\n    name: \"area\",\n    type: \"number\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 23\n      }\n    }, \" * \"), \"Di\\u1EC7n t\\xEDch\"),\n    fullWidth: true,\n    validators: [\"required\", \"minNumber:0\"],\n    errorMessages: [\"Vui lòng nhập diện tích\", \"Diện tích không được âm\"],\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectValidator, {\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }, \" * \"), \"M\\xE3 Qu\\u1EADn/Huy\\u1EC7n\"),\n    name: \"districtDto\",\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng chọn Quận/Huyện\"],\n    className: \"w-100 mb-8\",\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectValidator, {\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 25\n      }\n    }, \" * \"), \"M\\xE3 Qu\\u1EADn/Huy\\u1EC7n\"),\n    name: \"districtDto\",\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng chọn Quận/Huyện\"],\n    className: \"w-100 mb-8\",\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectValidator, {\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }, \" * \"), \"M\\xE3 Qu\\u1EADn/Huy\\u1EC7n\"),\n    name: \"districtDto\",\n    validators: [\"required\"],\n    errorMessages: [\"Vui lòng chọn Quận/Huyện\"],\n    className: \"w-100 mb-8\",\n    size: \"small\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }\n  }))))))));\n};\n\nexport default ManagerEmployeeDialog;","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/views/Staff/ManagerEmployeeDialog.jsx"],"names":["Dialog","DialogContent","DialogTitle","FormControl","Grid","IconButton","makeStyles","useTranslation","React","useEffect","useState","Close","CloseIcon","SelectValidator","TextValidator","ValidatorForm","useStyles","colorStyle","color","iconClose","position","right","top","ManagerEmployeeDialog","open","onClose","employees","classes","t","defauleValue","id","employeeFormData","setEmployeeFormData","console","log"],"mappings":"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","sourcesContent":["import {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControl,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\nimport {\r\n  SelectValidator,\r\n  TextValidator,\r\n  ValidatorForm,\r\n} from \"react-material-ui-form-validator\";\r\nconst useStyles = makeStyles({\r\n  colorStyle: {\r\n    color: \"red\",\r\n  },\r\n  iconClose: {\r\n    position: \"absolute\",\r\n    right: 8,\r\n    top: 8,\r\n  },\r\n});\r\nconst ManagerEmployeeDialog = ({ open, onClose, employees }) => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const defauleValue = {\r\n    id: \"\",\r\n  };\r\n  const [employeeFormData, setEmployeeFormData] = useState({ defauleValue });\r\n  useEffect(() => {\r\n    setEmployeeFormData(employees);\r\n    console.log(employees);\r\n  }, [employees]);\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={onClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        maxWidth={\"md\"}\r\n        fullWidth={true}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <span className=\"mb-20 styleColor\">\r\n            {(employeeFormData?.id ? t(\"general.update\") : t(\"Add\")) +\r\n              \" \" +\r\n              t(\"Nhân Viên\")}\r\n          </span>\r\n          <IconButton aria-label=\"close\" className={classes.iconClose}>\r\n            <CloseIcon color=\"error\" onClick={onClose} />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <ValidatorForm>\r\n          <DialogContent dividers>\r\n            <Grid className=\"mb-8\" container spacing={1}>\r\n              <Grid item sm={6} xs={6}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-8\"\r\n                  name=\"code\"\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Mã nhân viên\r\n                    </span>\r\n                  }\r\n                  fullWidth\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"Vui lòng nhập mã Phường/Xã\"]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={6} xs={6}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-8\"\r\n                  name=\"name\"\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Họ Và Tên\r\n                    </span>\r\n                  }\r\n                  fullWidth\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"Vui lòng nhập mã Phường/Xã\"]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={4} xs={4}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-8\"\r\n                  name=\"name\"\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Tuổi\r\n                    </span>\r\n                  }\r\n                  fullWidth\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"Vui lòng nhập tên Phường/Xã\"]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={4} xs={4}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-8\"\r\n                  name=\"area\"\r\n                  type=\"number\"\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Email\r\n                    </span>\r\n                  }\r\n                  fullWidth\r\n                  validators={[\"required\", \"minNumber:0\"]}\r\n                  errorMessages={[\r\n                    \"Vui lòng nhập diện tích\",\r\n                    \"Diện tích không được âm\",\r\n                  ]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={4} xs={4}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-8\"\r\n                  name=\"area\"\r\n                  type=\"number\"\r\n                  label={\r\n                    <span>\r\n                      <span className={classes.colorStyle}> * </span>\r\n                      Diện tích\r\n                    </span>\r\n                  }\r\n                  fullWidth\r\n                  validators={[\"required\", \"minNumber:0\"]}\r\n                  errorMessages={[\r\n                    \"Vui lòng nhập diện tích\",\r\n                    \"Diện tích không được âm\",\r\n                  ]}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={4} xs={4}>\r\n                <FormControl fullWidth={true}>\r\n                  <SelectValidator\r\n                    label={\r\n                      <span>\r\n                        <span className={classes.colorStyle}> * </span>\r\n                        Mã Quận/Huyện\r\n                      </span>\r\n                    }\r\n                    name=\"districtDto\"\r\n                    validators={[\"required\"]}\r\n                    errorMessages={[\"Vui lòng chọn Quận/Huyện\"]}\r\n                    className=\"w-100 mb-8\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                  ></SelectValidator>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item sm={4} xs={4}>\r\n                <FormControl fullWidth={true}>\r\n                  <SelectValidator\r\n                    label={\r\n                      <span>\r\n                        <span className={classes.colorStyle}> * </span>\r\n                        Mã Quận/Huyện\r\n                      </span>\r\n                    }\r\n                    name=\"districtDto\"\r\n                    validators={[\"required\"]}\r\n                    errorMessages={[\"Vui lòng chọn Quận/Huyện\"]}\r\n                    className=\"w-100 mb-8\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                  ></SelectValidator>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item sm={4} xs={4}>\r\n                <FormControl fullWidth={true}>\r\n                  <SelectValidator\r\n                    label={\r\n                      <span>\r\n                        <span className={classes.colorStyle}> * </span>\r\n                        Mã Quận/Huyện\r\n                      </span>\r\n                    }\r\n                    name=\"districtDto\"\r\n                    validators={[\"required\"]}\r\n                    errorMessages={[\"Vui lòng chọn Quận/Huyện\"]}\r\n                    className=\"w-100 mb-8\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                  ></SelectValidator>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\nexport default ManagerEmployeeDialog;\r\n"]},"metadata":{},"sourceType":"module"}