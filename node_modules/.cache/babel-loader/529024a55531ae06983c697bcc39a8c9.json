{"ast":null,"code":"import _objectSpread from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\src\\\\app\\\\views\\\\Location\\\\District\\\\District.jsx\";\n\nimport { Button, Grid, Icon, IconButton, TextField, makeStyles } from \"@material-ui/core\";\nimport { ConfirmationDialog } from \"egret\";\nimport MaterialTable from \"material-table\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DistrictsDialog from \"./DistrictDialog\";\nimport { deleteDistrictAction, getDistrictsAction, searchDistrictsAction } from \"app/redux/actions/LocationAction\";\nvar useStyles = makeStyles({\n  widthStyle: {\n    width: \"200px\"\n  },\n  customStyle: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  }\n});\n\nvar Districts = function Districts() {\n  var columns = [{\n    title: \"Thao tác\",\n    field: \"custom\",\n    width: \"100\",\n    cellStyle: {\n      padding: \"0\",\n      margin: \"0\"\n    },\n    render: function render(row) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"primary\",\n        onClick: function onClick() {\n          handleEdit(row);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }\n      }, \"edit\")), /*#__PURE__*/React.createElement(IconButton, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        onClick: function onClick() {\n          handleDelete(row);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }\n      }, \"delete\")));\n    }\n  }, {\n    field: \"code\",\n    title: \"Mã Huyện\"\n  }, {\n    field: \"name\",\n    title: \"Tên Huyện\"\n  }, {\n    field: \"area\",\n    title: \"Diện tích\"\n  }];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showDeleteDialog = _useState2[0],\n      setShowDeleteDialog = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showProvincesDialog = _useState4[0],\n      setShowDistrictsDialog = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      rowData = _useState6[0],\n      setRowData = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      districtItem = _useState8[0],\n      setDistrictItem = _useState8[1];\n\n  var dispatch = useDispatch();\n  var districtState = useSelector(function (state) {\n    return state.district;\n  });\n  var district = districtState.district,\n      reload = districtState.reload,\n      success = districtState.success;\n  var reloadProvince = useSelector(function (state) {\n    return state.provinces.reload;\n  });\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      keywords = _useState10[0],\n      setKeywords = _useState10[1];\n\n  useEffect(function () {\n    if (keywords) {\n      handleSearchDistrict();\n    } else {\n      getAllDistrict();\n    }\n  }, [dispatch, reload, reloadProvince, keywords]);\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var classes = useStyles();\n  var dataForTable = district.map(function (district) {\n    return _objectSpread({}, district);\n  });\n\n  var getAllDistrict = function getAllDistrict() {\n    dispatch(getDistrictsAction());\n  };\n\n  var handleSearchDistrict = function handleSearchDistrict() {\n    dispatch(searchDistrictsAction(keywords));\n  };\n\n  var handleAddDistrict = function handleAddDistrict() {\n    setDistrictItem({});\n    setShowDistrictsDialog(true);\n  };\n\n  var handleEdit = function handleEdit(row) {\n    setDistrictItem(row);\n    setShowDistrictsDialog(true);\n  };\n\n  var handleCloseDialog = function handleCloseDialog() {\n    setShowDistrictsDialog(false);\n  };\n\n  var handleDelete = function handleDelete(row) {\n    setShowDeleteDialog(true);\n    setRowData(row);\n  };\n\n  var handleCloseDeleteDialog = function handleCloseDeleteDialog() {\n    setShowDeleteDialog(false);\n  };\n\n  var handleDialogDelete = function handleDialogDelete() {\n    dispatch(deleteDistrictAction(rowData.id));\n    handleCloseDeleteDialog();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.customStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mt-16 mb-16 mr-16 align-bottom\",\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"medium\",\n    onClick: handleAddDistrict,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, t(\"Add\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"search\",\n    label: \"T\\xECm ki\\u1EBFm\",\n    onChange: function onChange(e) {\n      setKeywords(e.target.value);\n    },\n    className: \"mb-16 mr-16 align-bottom \".concat(classes.widthStyle),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(MaterialTable, {\n    columns: columns,\n    data: dataForTable,\n    style: {\n      backgroundColor: \"#fafafa\"\n    },\n    options: {\n      search: false,\n      toolbar: false,\n      headerStyle: {\n        backgroundColor: \"#358600\",\n        color: \"#fff\"\n      },\n      minBodyHeight: \"569px\",\n      maxBodyHeight: \"569px\",\n      pageSize: 10,\n      rowStyle: function rowStyle(rowData, index) {\n        return {\n          backgroundColor: index % 2 === 1 ? \"#EEE\" : \"#FFF\"\n        };\n      },\n      padding: \"dense\"\n    },\n    localization: {\n      body: {\n        emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n      },\n      pagination: {\n        labelRowsSelect: \"B\\u1EA3n ghi\",\n        labelDisplayedRows: \"{from}-{to} trong {count}\",\n        firstTooltip: \"Trang đầu\",\n        previousTooltip: \"Trang trước\",\n        nextTooltip: \"Trang tiếp\",\n        lastTooltip: \"Trang cuối\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }), showProvincesDialog && /*#__PURE__*/React.createElement(DistrictsDialog, {\n    open: showProvincesDialog,\n    onClose: handleCloseDialog,\n    district: districtItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }), showDeleteDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n    open: showDeleteDialog,\n    onConfirmDialogClose: handleCloseDeleteDialog,\n    onYesClick: handleDialogDelete,\n    title: t(\"x\\xF3a t\\u1EC9nh/th\\xE0nh ph\\u1ED1 \".concat(rowData === null || rowData === void 0 ? void 0 : rowData.name, \"?\")),\n    text: t(\"DeleteConfirm\"),\n    Yes: t(\"Yes\"),\n    No: t(\"No\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Districts;","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/views/Location/District/District.jsx"],"names":["Button","Grid","Icon","IconButton","TextField","makeStyles","ConfirmationDialog","MaterialTable","React","useEffect","useState","useTranslation","useDispatch","useSelector","DistrictsDialog","deleteDistrictAction","getDistrictsAction","searchDistrictsAction","useStyles","widthStyle","width","customStyle","display","justifyContent","Districts","columns","title","field","cellStyle","padding","margin","render","row","handleEdit","handleDelete","showDeleteDialog","setShowDeleteDialog","showProvincesDialog","setShowDistrictsDialog","rowData","setRowData","districtItem","setDistrictItem","dispatch","districtState","state","district","reload","success","reloadProvince","provinces","keywords","setKeywords","handleSearchDistrict","getAllDistrict","t","classes","dataForTable","map","handleAddDistrict","handleCloseDialog","handleCloseDeleteDialog","handleDialogDelete","id","e","target","value","backgroundColor","search","toolbar","headerStyle","color","minBodyHeight","maxBodyHeight","pageSize","rowStyle","index","body","emptyDataSourceMessage","pagination","labelRowsSelect","labelDisplayedRows","firstTooltip","previousTooltip","nextTooltip","lastTooltip","name"],"mappings":"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","sourcesContent":["import {\r\n  Button,\r\n  Grid,\r\n  Icon,\r\n  IconButton,\r\n  TextField,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { ConfirmationDialog } from \"egret\";\r\nimport MaterialTable from \"material-table\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DistrictsDialog from \"./DistrictDialog\";\r\nimport {\r\n  deleteDistrictAction,\r\n  getDistrictsAction,\r\n  searchDistrictsAction,\r\n} from \"app/redux/actions/LocationAction\";\r\nconst useStyles = makeStyles({\r\n  widthStyle: {\r\n    width: \"200px\",\r\n  },\r\n  customStyle: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n});\r\nconst Districts = () => {\r\n  const columns = [\r\n    {\r\n      title: \"Thao tác\",\r\n      field: \"custom\",\r\n      width: \"100\",\r\n      cellStyle: {\r\n        padding: \"0\",\r\n        margin: \"0\",\r\n      },\r\n      render: (row) => {\r\n        return (\r\n          <>\r\n            <IconButton>\r\n              <Icon\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  handleEdit(row);\r\n                }}\r\n              >\r\n                edit\r\n              </Icon>\r\n            </IconButton>\r\n\r\n            <IconButton>\r\n              <Icon\r\n                color=\"error\"\r\n                onClick={() => {\r\n                  handleDelete(row);\r\n                }}\r\n              >\r\n                delete\r\n              </Icon>\r\n            </IconButton>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    { field: \"code\", title: \"Mã Huyện\" },\r\n    { field: \"name\", title: \"Tên Huyện\" },\r\n    { field: \"area\", title: \"Diện tích\" },\r\n  ];\r\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\r\n  const [showProvincesDialog, setShowDistrictsDialog] = useState(false);\r\n  const [rowData, setRowData] = useState({});\r\n  const [districtItem, setDistrictItem] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const districtState = useSelector((state) => state.district);\r\n  const { district, reload, success } = districtState;\r\n  const reloadProvince = useSelector((state) => state.provinces.reload);\r\n  const [keywords, setKeywords] = useState(\"\");\r\n  useEffect(() => {\r\n    if (keywords) {\r\n      handleSearchDistrict();\r\n    } else {\r\n      getAllDistrict();\r\n    }\r\n  }, [dispatch, reload, reloadProvince, keywords]);\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const dataForTable = district.map((district) => ({ ...district }));\r\n  const getAllDistrict = () => {\r\n    dispatch(getDistrictsAction());\r\n  };\r\n  const handleSearchDistrict = () => {\r\n    dispatch(searchDistrictsAction(keywords));\r\n  };\r\n  const handleAddDistrict = () => {\r\n    setDistrictItem({});\r\n    setShowDistrictsDialog(true);\r\n  };\r\n  const handleEdit = (row) => {\r\n    setDistrictItem(row);\r\n    setShowDistrictsDialog(true);\r\n  };\r\n  const handleCloseDialog = () => {\r\n    setShowDistrictsDialog(false);\r\n  };\r\n  const handleDelete = (row) => {\r\n    setShowDeleteDialog(true);\r\n    setRowData(row);\r\n  };\r\n  const handleCloseDeleteDialog = () => {\r\n    setShowDeleteDialog(false);\r\n  };\r\n  const handleDialogDelete = () => {\r\n    dispatch(deleteDistrictAction(rowData.id));\r\n    handleCloseDeleteDialog();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.customStyle}>\r\n        <div>\r\n          <Button\r\n            className=\"mt-16 mb-16 mr-16 align-bottom\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"medium\"\r\n            onClick={handleAddDistrict}\r\n          >\r\n            {t(\"Add\")}\r\n          </Button>\r\n        </div>\r\n\r\n        <div>\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n            <Grid item>\r\n              <TextField\r\n                name=\"search\"\r\n                label=\"Tìm kiếm\"\r\n                onChange={(e) => {\r\n                  setKeywords(e.target.value);\r\n                }}\r\n                className={`mb-16 mr-16 align-bottom ${classes.widthStyle}`}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n\r\n      <MaterialTable\r\n        columns={columns}\r\n        data={dataForTable}\r\n        style={{ backgroundColor: \"#fafafa\" }}\r\n        options={{\r\n          search: false,\r\n          toolbar: false,\r\n          headerStyle: {\r\n            backgroundColor: \"#358600\",\r\n            color: \"#fff\",\r\n          },\r\n          minBodyHeight: \"569px\",\r\n          maxBodyHeight: \"569px\",\r\n          pageSize: 10,\r\n          rowStyle: (rowData, index) => ({\r\n            backgroundColor: index % 2 === 1 ? \"#EEE\" : \"#FFF\",\r\n          }),\r\n          padding: \"dense\",\r\n        }}\r\n        localization={{\r\n          body: {\r\n            emptyDataSourceMessage: `${t(\"general.emptyDataMessageTable\")}`,\r\n          },\r\n          pagination: {\r\n            labelRowsSelect: `Bản ghi`,\r\n            labelDisplayedRows: `{from}-{to} trong {count}`,\r\n            firstTooltip: \"Trang đầu\",\r\n            previousTooltip: \"Trang trước\",\r\n            nextTooltip: \"Trang tiếp\",\r\n            lastTooltip: \"Trang cuối\",\r\n          },\r\n        }}\r\n      />\r\n      {showProvincesDialog && (\r\n        <DistrictsDialog\r\n          open={showProvincesDialog}\r\n          onClose={handleCloseDialog}\r\n          district={districtItem}\r\n        />\r\n      )}\r\n      {showDeleteDialog && (\r\n        <ConfirmationDialog\r\n          open={showDeleteDialog}\r\n          onConfirmDialogClose={handleCloseDeleteDialog}\r\n          onYesClick={handleDialogDelete}\r\n          title={t(`xóa tỉnh/thành phố ${rowData?.name}?`)}\r\n          text={t(\"DeleteConfirm\")}\r\n          Yes={t(\"Yes\")}\r\n          No={t(\"No\")}\r\n        ></ConfirmationDialog>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Districts;\r\n"]},"metadata":{},"sourceType":"module"}