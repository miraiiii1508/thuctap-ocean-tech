{"ast":null,"code":"import _toConsumableArray from \"D:\\\\ThucTap\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nvar initialState = {\n  wards: [],\n  reload: false,\n  success: true,\n  error: null\n};\nvar wardSlide = createSlice({\n  name: \"ward\",\n  initialState: initialState,\n  reducers: {\n    showAllWardReducer: function showAllWardReducer(state, action) {\n      state.wards = action.payload;\n    },\n    addWardReducer: function addWardReducer(state, action) {\n      state.wards = [].concat(_toConsumableArray(state.wards), [action.payload]);\n    },\n    deleteWardsReducer: function deleteWardsReducer(state, action) {\n      state.wards = state.district.filter(function (district) {\n        return district.id !== action.payload;\n      });\n    }\n  }\n});\nvar _wardSlide$actions = wardSlide.actions,\n    showAllWardReducer = _wardSlide$actions.showAllWardReducer,\n    addWardReducer = _wardSlide$actions.addWardReducer,\n    deleteWardsReducer = _wardSlide$actions.deleteWardsReducer;\nexport { showAllWardReducer, addWardReducer, deleteWardsReducer };\nexport default wardSlide.reducer;","map":{"version":3,"sources":["D:/ThucTap/ThucTap/client/src/app/redux/reducers/WardReducer.js"],"names":["createSlice","initialState","wards","reload","success","error","wardSlide","name","reducers","showAllWardReducer","state","action","payload","addWardReducer","deleteWardsReducer","district","filter","id","actions","reducer"],"mappings":";AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,MAAM,EAAE,KAFW;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAMA,IAAMC,SAAS,GAAGN,WAAW,CAAC;AAC5BO,EAAAA,IAAI,EAAE,MADsB;AAE5BN,EAAAA,YAAY,EAAZA,YAF4B;AAG5BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,kBAAkB,EAAE,4BAACC,KAAD,EAAQC,MAAR,EAAmB;AACrCD,MAAAA,KAAK,CAACR,KAAN,GAAcS,MAAM,CAACC,OAArB;AACD,KAHO;AAIRC,IAAAA,cAAc,EAAE,wBAACH,KAAD,EAAQC,MAAR,EAAmB;AACjCD,MAAAA,KAAK,CAACR,KAAN,gCAAkBQ,KAAK,CAACR,KAAxB,IAA+BS,MAAM,CAACC,OAAtC;AACD,KANO;AAORE,IAAAA,kBAAkB,EAAE,4BAACJ,KAAD,EAAQC,MAAR,EAAmB;AACrCD,MAAAA,KAAK,CAACR,KAAN,GAAcQ,KAAK,CAACK,QAAN,CAAeC,MAAf,CACZ,UAACD,QAAD;AAAA,eAAcA,QAAQ,CAACE,EAAT,KAAgBN,MAAM,CAACC,OAArC;AAAA,OADY,CAAd;AAGD;AAXO;AAHkB,CAAD,CAA7B;yBAkBEN,SAAS,CAACY,O;IADGT,kB,sBAAAA,kB;IAAoBI,c,sBAAAA,c;IAAgBC,kB,sBAAAA,kB;;AAEnD,eAAeR,SAAS,CAACa,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialState = {\r\n  wards: [],\r\n  reload: false,\r\n  success: true,\r\n  error: null,\r\n};\r\nconst wardSlide = createSlice({\r\n  name: \"ward\",\r\n  initialState,\r\n  reducers: {\r\n    showAllWardReducer: (state, action) => {\r\n      state.wards = action.payload;\r\n    },\r\n    addWardReducer: (state, action) => {\r\n      state.wards = [...state.wards, action.payload];\r\n    },\r\n    deleteWardsReducer: (state, action) => {\r\n      state.wards = state.district.filter(\r\n        (district) => district.id !== action.payload\r\n      );\r\n    },\r\n  },\r\n});\r\nexport const { showAllWardReducer, addWardReducer, deleteWardsReducer } =\r\n  wardSlide.actions;\r\nexport default wardSlide.reducer;\r\n"]},"metadata":{},"sourceType":"module"}